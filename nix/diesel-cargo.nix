# Generated by carnix 0.7.2: ../nix-vuln-scanner/result/bin/carnix nix --src .
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  all_about_updates = f: all_about_updates_0_1_0 { features = all_about_updates_0_1_0_features { all_about_updates_0_1_0 = f; }; };
  diesel = f: diesel_0_16_0 { features = diesel_0_16_0_features { diesel_0_16_0 = f; }; };
  diesel_cli = f: diesel_cli_0_16_0 { features = diesel_cli_0_16_0_features { diesel_cli_0_16_0 = f; }; };
  diesel_codegen = f: diesel_codegen_0_16_1 { features = diesel_codegen_0_16_1_features { diesel_codegen_0_16_1 = f; }; };
  diesel_demo_step_1_mysql = f: diesel_demo_step_1_mysql_0_1_0 { features = diesel_demo_step_1_mysql_0_1_0_features { diesel_demo_step_1_mysql_0_1_0 = f; }; };
  diesel_demo_step_1_pg = f: diesel_demo_step_1_pg_0_1_0 { features = diesel_demo_step_1_pg_0_1_0_features { diesel_demo_step_1_pg_0_1_0 = f; }; };
  diesel_demo_step_1_sqlite = f: diesel_demo_step_1_sqlite_0_1_0 { features = diesel_demo_step_1_sqlite_0_1_0_features { diesel_demo_step_1_sqlite_0_1_0 = f; }; };
  diesel_demo_step_2_mysql = f: diesel_demo_step_2_mysql_0_1_0 { features = diesel_demo_step_2_mysql_0_1_0_features { diesel_demo_step_2_mysql_0_1_0 = f; }; };
  diesel_demo_step_2_pg = f: diesel_demo_step_2_pg_0_1_0 { features = diesel_demo_step_2_pg_0_1_0_features { diesel_demo_step_2_pg_0_1_0 = f; }; };
  diesel_demo_step_2_sqlite = f: diesel_demo_step_2_sqlite_0_1_0 { features = diesel_demo_step_2_sqlite_0_1_0_features { diesel_demo_step_2_sqlite_0_1_0 = f; }; };
  diesel_demo_step_3_mysql = f: diesel_demo_step_3_mysql_0_1_0 { features = diesel_demo_step_3_mysql_0_1_0_features { diesel_demo_step_3_mysql_0_1_0 = f; }; };
  diesel_demo_step_3_pg = f: diesel_demo_step_3_pg_0_1_0 { features = diesel_demo_step_3_pg_0_1_0_features { diesel_demo_step_3_pg_0_1_0 = f; }; };
  diesel_demo_step_3_sqlite = f: diesel_demo_step_3_sqlite_0_1_0 { features = diesel_demo_step_3_sqlite_0_1_0_features { diesel_demo_step_3_sqlite_0_1_0 = f; }; };
  diesel_infer_schema = f: diesel_infer_schema_0_16_0 { features = diesel_infer_schema_0_16_0_features { diesel_infer_schema_0_16_0 = f; }; };
  diesel_tests = f: diesel_tests_0_1_0 { features = diesel_tests_0_1_0_features { diesel_tests_0_1_0 = f; }; };
  __all = [ (all_about_updates {}) (diesel {}) (diesel_cli {}) (diesel_codegen {}) (diesel_demo_step_1_mysql {}) (diesel_demo_step_1_pg {}) (diesel_demo_step_1_sqlite {}) (diesel_demo_step_2_mysql {}) (diesel_demo_step_2_pg {}) (diesel_demo_step_2_sqlite {}) (diesel_demo_step_3_mysql {}) (diesel_demo_step_3_pg {}) (diesel_demo_step_3_sqlite {}) (diesel_infer_schema {}) (diesel_tests {}) ];
  aho_corasick_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.5.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1igab46mvgknga3sxkqc917yfff0wsjxjzabdigmh240p5qxqlnn";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0ap5lv1q6ylmzq70bjgg66dsa6p9926gwv2q4z0chfjnii8hczq8";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  all_about_updates_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "all_about_updates";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/postgres/all_about_updates";
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  assert_matches_1_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "assert_matches";
    version = "1.3.0";
    authors = [ "Murarth <murarth@gmail.com>" ];
    sha256 = "1qlmdjv0x878lk557x3s26l4mnnaxhgb94fzms3zj8hrglp0a6hw";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.11";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "137pjkcn89b7fqk78w65ggj92pynmf1hkr1sjz53aga4b50lkmwm";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0sx7h7bl5j5dj4hlk7bcf8fwbhrxrvq2hfpy70vw2140gnlrl9dw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bigdecimal_0_0_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bigdecimal";
    version = "0.0.10";
    authors = [ "Andrew Kubera" ];
    sha256 = "1nixzr2azz17fj381gl77gsxajbip1qvhfpnc0097pk9hkgq8xjk";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "162p4w4h1ad76awq6b5yivmls3d50m9cl27d8g588lsps6g8s5rw";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1xghv5f5rydzsam8lnfqhfk090i8a1knb77ikbs0ik44bvrw2ij3";
    inherit dependencies buildDependencies features;
  };
  cargo_metadata_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cargo_metadata";
    version = "0.2.3";
    authors = [ "Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>" ];
    sha256 = "038q8lvlxm3gj50fkwy79akmxpakdlg9libd0s7rkmgy1r6rbl2l";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.18";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wcnpa54qvm5921wwrrkn8cwxd5y0p5f4gb1qgyh5imii7rdhpjx";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0n5baxk53dvqjymzwynq55wb805b24390qx1n16zi8fjzq90j7k4";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.4";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "169h5rlrb9df3yvnzihjw39cjipvz90qgf9211pivms2s9xnpqpr";
    inherit dependencies buildDependencies features;
  };
  clap_2_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.32.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1hdjf0janvpjkwrjdjx1mm2aayzr54k72w6mriyr0n5anjkcj1lx";
    inherit dependencies buildDependencies features;
  };
  clippy_0_0_138_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clippy";
    version = "0.0.138";
    authors = [ "Manish Goregaokar <manishsmail@gmail.com>" "Andre Bogus <bogusandre@gmail.com>" "Georg Brandl <georg@python.org>" "Martin Carton <cartonmartin@gmail.com>" "Oliver Schneider <clippy-iethah7aipeen8neex1a@oli-obk.de>" ];
    sha256 = "09fxyfis7ka3q5qcn3n1q41yzan6vdcaakajsfbah9d6q8ga7yn7";
    plugin = true;
    crateBin = [ {  name = "cargo-clippy"; } ];
    inherit dependencies buildDependencies features;
  };
  clippy_0_0_155_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clippy";
    version = "0.0.155";
    authors = [ "Manish Goregaokar <manishsmail@gmail.com>" "Andre Bogus <bogusandre@gmail.com>" "Georg Brandl <georg@python.org>" "Martin Carton <cartonmartin@gmail.com>" "Oliver Schneider <clippy-iethah7aipeen8neex1a@oli-obk.de>" ];
    sha256 = "0w8z2l5fgdi4g3a4864vg6c23c887facpqglk02xgwwkgzwyahjc";
    plugin = true;
    crateBin = [ {  name = "cargo-clippy";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  clippy_lints_0_0_138_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clippy_lints";
    version = "0.0.138";
    authors = [ "Manish Goregaokar <manishsmail@gmail.com>" "Andre Bogus <bogusandre@gmail.com>" "Georg Brandl <georg@python.org>" "Martin Carton <cartonmartin@gmail.com>" ];
    sha256 = "0rxl1aygqbfasyrs4lwpjh2vv7i8p7rxkrhq9hmim19706wv4yvf";
    inherit dependencies buildDependencies features;
  };
  clippy_lints_0_0_155_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clippy_lints";
    version = "0.0.155";
    authors = [ "Manish Goregaokar <manishsmail@gmail.com>" "Andre Bogus <bogusandre@gmail.com>" "Georg Brandl <georg@python.org>" "Martin Carton <cartonmartin@gmail.com>" ];
    sha256 = "0yqp1x35pq6a571vxjsnip1kg03kgjik4w0r8bzwwf5rjwl8pc03";
    inherit dependencies buildDependencies features;
  };
  derive_error_chain_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive-error-chain";
    version = "0.10.1";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" "Arnav Singh <arnavion@gmail.com>" ];
    sha256 = "1m0wplzfb6cir43ay1lbfa0xg9avv1vcwnkm3kwk6b6sqialxwcr";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  diesel_0_13_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel";
    version = "0.13.1";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0b21acizaq510n4ykf1i9clj4l9yk4s5qp85wia98w5rynm490da";
    inherit dependencies buildDependencies features;
  };
  diesel_0_16_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel";
    version = "0.16.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "164y5g8sici45hxy67g33y2p9kq2sw17wfi4bq7xg9z6hj7d0mds";
    inherit dependencies buildDependencies features;
  };
  diesel_cli_0_16_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_cli";
    version = "0.16.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "diesel_cli";
    crateBin = [ {  name = "diesel";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  diesel_codegen_0_13_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_codegen";
    version = "0.13.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0y47r5m6lynmzywhdnl54nac1gs9b5d7p0f9ddzan45jr0kfhkhr";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  diesel_codegen_0_16_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_codegen";
    version = "0.16.1";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "01ri2bag4k3psz4pncsjpgn68gig7nakv0xabyqhkdhxixhzdmgk";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_1_mysql_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_1_mysql";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/mysql/getting_started_step_1";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_1_pg_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_1_pg";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/postgres/getting_started_step_1";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_1_sqlite_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_1_sqlite";
    version = "0.1.0";
    authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
    src = ./.;
    workspace_member = "examples/sqlite/getting_started_step_1";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_2_mysql_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_2_mysql";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/mysql/getting_started_step_2";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_2_pg_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_2_pg";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/postgres/getting_started_step_2";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_2_sqlite_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_2_sqlite";
    version = "0.1.0";
    authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
    src = ./.;
    workspace_member = "examples/sqlite/getting_started_step_2";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_3_mysql_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_3_mysql";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/mysql/getting_started_step_3";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_3_pg_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_3_pg";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "examples/postgres/getting_started_step_3";
    inherit dependencies buildDependencies features;
  };
  diesel_demo_step_3_sqlite_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_demo_step_3_sqlite";
    version = "0.1.0";
    authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
    src = ./.;
    workspace_member = "examples/sqlite/getting_started_step_3";
    inherit dependencies buildDependencies features;
  };
  diesel_infer_schema_0_16_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_infer_schema";
    version = "0.16.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1y13vid5ywslk6nvx8q3dfm8qfcxj76wi4cydnyrv03b91g2slf8";
    inherit dependencies buildDependencies features;
  };
  diesel_tests_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_tests";
    version = "0.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    src = ./.;
    workspace_member = "diesel_tests";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  difference_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "difference";
    version = "1.0.0";
    authors = [ "Johann Hofmann <mail@johann-hofmann.com>" ];
    sha256 = "0r1p2diin8zykfiifv6v9i3ajimdb1rg6qzxkrfw2n2iy57846qn";
    crateBin = [ {  name = "difference"; } ];
    inherit dependencies buildDependencies features;
  };
  dotenv_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dotenv";
    version = "0.8.0";
    authors = [ "Santiago Lapresta <santiago.lapresta@gmail.com>" "Craig Hills <chills@gmail.com>" "Mike Piccolo <mfpiccolo@gmail.com>" "Alice Maz <alice@alicemaz.com>" "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0rcsdmg2dmm6jniy2knhj0ns0r4wypa7rkyrvs7m9zx3sn84p3c3";
    inherit dependencies buildDependencies features;
  };
  dotenv_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dotenv";
    version = "0.9.0";
    authors = [ "Santiago Lapresta <santiago.lapresta@gmail.com>" "Craig Hills <chills@gmail.com>" "Mike Piccolo <mfpiccolo@gmail.com>" "Alice Maz <alice@alicemaz.com>" "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1jh1dvbhdjdalm13r1rxmfwfa9jfm6sy8qlbz7q53b7c569hlzq9";
    inherit dependencies buildDependencies features;
  };
  dotenv_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dotenv";
    version = "0.10.1";
    authors = [ "Santiago Lapresta <santiago.lapresta@gmail.com>" "Craig Hills <chills@gmail.com>" "Mike Piccolo <mfpiccolo@gmail.com>" "Alice Maz <alice@alicemaz.com>" "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1dhkc41yqchvyxpb9k711pqgfpv0ly44ghmqqfi31mjpirdlg09v";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1xysdxdm24sk5ysim7lps4r2qaxfnj0sbakhmps4d42yssx30cw8";
    inherit dependencies buildDependencies features;
  };
  either_1_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.5.0";
    authors = [ "bluss" ];
    sha256 = "1f7kl2ln01y02m8fpd2zrdjiwqmgfvl9nxxrfry3k19d1gd2bsvz";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.3.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1mvxiaaqsyjliv1mm1qaagjqiccw11mdyi3n9h9rf8y6wj15zycw";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.10.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  getopts_0_2_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "getopts";
    version = "0.2.18";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0c1m95wg8pkvdq4mwcd2v78r1lb6a5s3ljm7158dsl56mvzcwd5y";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.5";
    authors = [ "The rust-url developers" ];
    sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
    inherit dependencies buildDependencies features;
  };
  ipnetwork_0_12_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ipnetwork";
    version = "0.12.8";
    authors = [ "Abhishek Chanda <abhishek.becs@gmail.com>" "Linus Färnstrand <faern@faern.net>" ];
    sha256 = "0jgvj0rfa8zv5p1gc18n2yjd7hnmibq42hkllwgi2xw97yvmsnhf";
    inherit dependencies buildDependencies features;
  };
  itertools_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.6.5";
    authors = [ "bluss" ];
    sha256 = "0gbhgn7s8qkxxw10i514fzpqnc3aissn4kcgylm2cvnv9zmg8mw1";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "193a744yd74rmk13hl8xvd9p2hqhdkyf8xkvi1mxm5s10bby0h8v";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.2";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0ix4dmy6zb4v3m75l4alg84fk06y145z52z9pyysc9labw2x5r3r";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "064v49hz1zpl081w8c4vwikrkhaxp06y4i9l7x7wx6bjpwp19pjx";
    inherit dependencies buildDependencies features;
  };
  libsqlite3_sys_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libsqlite3-sys";
    version = "0.8.1";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "131bjlxzni2aw3048p7sj8cs3v0jpkb3fxdpc5i7ndyhvpz3gdza";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gdmwrbm7s18zcdz4lcdhz975m4gwhi854c7j1rvj1gsr8aca250";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.7";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0zx9gi5flyzkh9nx52fyc3k2zz08b9ww1c4yndlfrw72kr8m7yfy";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  memchr_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "0.1.11";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0x73jghamvxxq5fsw9wb0shk5m6qp3q6fsf0nibn0i6bbqkw91s8";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  mysqlclient_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mysqlclient-sys";
    version = "0.2.3";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "082acm7xn8sgvm6x5yk8isdqzd0mllrz9pdxvjw8criximz2zpf6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_44_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.44";
    authors = [ "The Rust Project Developers" ];
    sha256 = "13sf3jhjs6y7cnfrdxns0k8vmbxwjl038wm3yl08b3dbrla7hvx1";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.37";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rglyvi4yjfxfvfm2s7i60g1dkl5xmsyi77g6vy53jb11r6wl8ly";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0ql203ca6lzppksy4fsfnpz3kq96vwlwvyn3ahvnd9g6k9f5ncj0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.12";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0k343rlyv9qmplxwxn8clzkyx1zbplhnvm0psjl6s111fjqmgsgh";
    inherit dependencies buildDependencies features;
  };
  pq_sys_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pq-sys";
    version = "0.4.6";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0qsy79igizb54x34m1p7zf28ffvadsm3hyj52djq3rwb56kb95n6";
    libName = "pq_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1qmfx3z2xvsgwsqqkhri339i4spk5wkxf5y4j8sg47ggig2y00rh";
    inherit dependencies buildDependencies features;
  };
  pulldown_cmark_0_0_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pulldown-cmark";
    version = "0.0.15";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "1b9ixhcff5mqk8m9jkvxw2yjpc8y30ykkqk5a377jcjywj7jlvy6";
    crateBin = [ {  name = "pulldown-cmark"; } ];
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  quickcheck_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quickcheck";
    version = "0.3.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02iq368l5b7a7jl50qd5rcrwpjiza1wmifk2an0f6xhr3hsfwcjw";
    inherit dependencies buildDependencies features;
  };
  quine_mc_cluskey_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quine-mc_cluskey";
    version = "0.2.4";
    authors = [ "Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>" ];
    sha256 = "08l9w7ydvxqyd8m1jcv37pv55w1m1ppkjbrvi8wqmyv3rfv0bi3q";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1x3sxi9vpn4sayj4lbi0wh483b4iphwfsfkkk2gj3z89sqw3wkwg";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_1_80_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.1.80";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y4s8ghhx6sgzb35irwivm3w0l2hhqhmdcd2px9hirqnkagal9l6";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0r50cymxdqp0fv1dxd22mjr6y32q450nwacd279p9s7lh0cafijj";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1mzhphkbwppwd1zam2jkgjk550cqgf6506i87bw2yzrvcsraiw7m";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1pch2dmdnh712c9d2k7mxbkl6wbr433x6asip65mp76cn8syrqdw";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "10vf3r34bgjnbrnqd5aszn35bjvm8insw498l1vjy8zx5yms3427";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00ma4r9haq0zv5krps617mym6y74056pfcivyld0kpci156vfaax";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  semver_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.6.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" "The Rust Project Developers" ];
    sha256 = "00qr8a6ds4brcmji799vwms41m46mw2g68zjr9j6sfbk7grrzk7q";
    inherit dependencies buildDependencies features;
  };
  semver_parser_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver-parser";
    version = "0.7.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" ];
    sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_70_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.70";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1z1gyjf5rrs1k3j1civfzqjqs790651bwf8m31bw2pagclhnazs4";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_70_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.70";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "15vn8fs56x0qmv3203m8wkbm9gc95fcwns9djv9aldhrgz25aw41";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.24";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1wvvc3y0202my2p00ah8ygl1794nspar9pf39fz1525jd6m6k8a1";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.5";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0b3xx5aa1shaz2i8mrvc7pmrj5lq2n6gmxyv2h1d7637gdky9smg";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.10.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "1s8d5cna12smhgj0x2y1xphklyk2an1yzbadnj89p1vy5vnjpsas";
    inherit dependencies buildDependencies features;
  };
  thread_id_2_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread-id";
    version = "2.0.0";
    authors = [ "Ruud van Asseldonk <dev@veniogames.com>" ];
    sha256 = "06i3c8ckn97i5rp16civ2vpqbknlkx66dkrl070iw60nawi0kjc3";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_2_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.2.7";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "19p0zrs24rdwjvpi10jig5ms3sxj00pv8shkr9cpddri8cdghqp7";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0rfl7lyb5f67spk69s604nw87f97g7fvv36hj9v88qlr2bwyrn8v";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.7";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  url_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.1";
    authors = [ "The rust-url developers" ];
    sha256 = "1l36pbvlwdnh3zqz4wp5n6jg332wkis9pi2g3vy12xr8k4nfyk8i";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "0.1.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1cj548a91a93j8375p78qikaiam548xh84cb0ck8y119adbmsvbp";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.5.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "17d4csjmy7fa3ckrm40d3c3v411rw5d4400w756mcrzyw2pm1i2r";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.4";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "0xgk5axv1qhj4rfn2rca7768wnvzihccnajkgc6im8ndsx371nml";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.5";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0cfdsxa5yf832r5i2z7dhdvnryyvhfp3nb32gpcaq502zgjdm3w6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_5_3 = { features?(aho_corasick_0_5_3_features {}) }: aho_corasick_0_5_3_ {
    dependencies = mapFeatures features ([ memchr_0_1_11 ]);
  };
  aho_corasick_0_5_3_features = f: updateFeatures f (rec {
    aho_corasick_0_5_3.default = (f.aho_corasick_0_5_3.default or true);
    memchr_0_1_11.default = true;
  }) [ memchr_0_1_11_features ];
  aho_corasick_0_6_6 = { features?(aho_corasick_0_6_6_features {}) }: aho_corasick_0_6_6_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_6_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = (f.aho_corasick_0_6_6.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  all_about_updates_0_1_0 = { features?(all_about_updates_0_1_0_features {}) }: all_about_updates_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 ]);
  };
  all_about_updates_0_1_0_features = f: updateFeatures f (rec {
    all_about_updates_0_1_0.default = (f.all_about_updates_0_1_0.default or true);
    diesel_0_16_0.default = true;
    diesel_0_16_0.postgres = true;
    diesel_codegen_0_16_1.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features ];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.processenv = true;
  }) [ winapi_0_3_5_features ];
  assert_matches_1_3_0 = { features?(assert_matches_1_3_0_features {}) }: assert_matches_1_3_0_ {};
  assert_matches_1_3_0_features = f: updateFeatures f (rec {
    assert_matches_1_3_0.default = (f.assert_matches_1_3_0.default or true);
  }) [];
  atty_0_2_11 = { features?(atty_0_2_11_features {}) }: atty_0_2_11_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  atty_0_2_11_features = f: updateFeatures f (rec {
    atty_0_2_11.default = (f.atty_0_2_11.default or true);
    libc_0_2_42.default = (f.libc_0_2_42.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processenv = true;
    winapi_0_3_5.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_42_features winapi_0_3_5_features ];
  backtrace_0_3_9 = { features?(backtrace_0_3_9_features {}) }: backtrace_0_3_9_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_4 rustc_demangle_0_1_9 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9."backtrace-sys" or false then [ backtrace_sys_0_1_23 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.winapi or false then [ winapi_0_3_5 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_9 or {});
  };
  backtrace_0_3_9_features = f: updateFeatures f (rec {
    backtrace_0_3_9."addr2line" =
      (f.backtrace_0_3_9."addr2line" or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9."backtrace-sys" =
      (f.backtrace_0_3_9."backtrace-sys" or false) ||
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (backtrace_0_3_9.libbacktrace or false);
    backtrace_0_3_9."rustc-serialize" =
      (f.backtrace_0_3_9."rustc-serialize" or false) ||
      (f.backtrace_0_3_9."serialize-rustc" or false) ||
      (backtrace_0_3_9."serialize-rustc" or false);
    backtrace_0_3_9.coresymbolication =
      (f.backtrace_0_3_9.coresymbolication or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.dbghelp =
      (f.backtrace_0_3_9.dbghelp or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.default = (f.backtrace_0_3_9.default or true);
    backtrace_0_3_9.dladdr =
      (f.backtrace_0_3_9.dladdr or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.findshlibs =
      (f.backtrace_0_3_9.findshlibs or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.gimli =
      (f.backtrace_0_3_9.gimli or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.libbacktrace =
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.libunwind =
      (f.backtrace_0_3_9.libunwind or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.memmap =
      (f.backtrace_0_3_9.memmap or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.object =
      (f.backtrace_0_3_9.object or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.serde =
      (f.backtrace_0_3_9.serde or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.serde_derive =
      (f.backtrace_0_3_9.serde_derive or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.winapi =
      (f.backtrace_0_3_9.winapi or false) ||
      (f.backtrace_0_3_9.dbghelp or false) ||
      (backtrace_0_3_9.dbghelp or false);
    backtrace_sys_0_1_23.default = true;
    cfg_if_0_1_4.default = true;
    libc_0_2_42.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_3_5.dbghelp = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winnt = true;
  }) [ cfg_if_0_1_4_features rustc_demangle_0_1_9_features backtrace_sys_0_1_23_features libc_0_2_42_features winapi_0_3_5_features ];
  backtrace_sys_0_1_23 = { features?(backtrace_sys_0_1_23_features {}) }: backtrace_sys_0_1_23_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_18 ]);
  };
  backtrace_sys_0_1_23_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_23.default = (f.backtrace_sys_0_1_23.default or true);
    cc_1_0_18.default = true;
    libc_0_2_42.default = true;
  }) [ libc_0_2_42_features cc_1_0_18_features ];
  bigdecimal_0_0_10 = { features?(bigdecimal_0_0_10_features {}) }: bigdecimal_0_0_10_ {
    dependencies = mapFeatures features ([ num_0_1_42 num_traits_0_1_43 ]);
  };
  bigdecimal_0_0_10_features = f: updateFeatures f (rec {
    bigdecimal_0_0_10.default = (f.bigdecimal_0_0_10.default or true);
    num_0_1_42.bigint = true;
    num_0_1_42.default = (f.num_0_1_42.default or false);
    num_traits_0_1_43.default = true;
  }) [ num_0_1_42_features num_traits_0_1_43_features ];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_3 = { features?(bitflags_1_0_3_features {}) }: bitflags_1_0_3_ {
    features = mkFeatures (features.bitflags_1_0_3 or {});
  };
  bitflags_1_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = (f.bitflags_1_0_3.default or true);
  }) [];
  byteorder_1_2_3 = { features?(byteorder_1_2_3_features {}) }: byteorder_1_2_3_ {
    features = mkFeatures (features.byteorder_1_2_3 or {});
  };
  byteorder_1_2_3_features = f: updateFeatures f (rec {
    byteorder_1_2_3.default = (f.byteorder_1_2_3.default or true);
    byteorder_1_2_3.std =
      (f.byteorder_1_2_3.std or false) ||
      (f.byteorder_1_2_3.default or false) ||
      (byteorder_1_2_3.default or false);
  }) [];
  cargo_metadata_0_2_3 = { features?(cargo_metadata_0_2_3_features {}) }: cargo_metadata_0_2_3_ {
    dependencies = mapFeatures features ([ serde_1_0_70 serde_derive_1_0_70 serde_json_1_0_24 ]);
  };
  cargo_metadata_0_2_3_features = f: updateFeatures f (rec {
    cargo_metadata_0_2_3.default = (f.cargo_metadata_0_2_3.default or true);
    serde_1_0_70.default = true;
    serde_derive_1_0_70.default = true;
    serde_json_1_0_24.default = true;
  }) [ serde_1_0_70_features serde_derive_1_0_70_features serde_json_1_0_24_features ];
  cc_1_0_18 = { features?(cc_1_0_18_features {}) }: cc_1_0_18_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_18 or {});
  };
  cc_1_0_18_features = f: updateFeatures f (rec {
    cc_1_0_18.default = (f.cc_1_0_18.default or true);
    cc_1_0_18.rayon =
      (f.cc_1_0_18.rayon or false) ||
      (f.cc_1_0_18.parallel or false) ||
      (cc_1_0_18.parallel or false);
  }) [];
  cfg_if_0_1_4 = { features?(cfg_if_0_1_4_features {}) }: cfg_if_0_1_4_ {};
  cfg_if_0_1_4_features = f: updateFeatures f (rec {
    cfg_if_0_1_4.default = (f.cfg_if_0_1_4.default or true);
  }) [];
  chrono_0_4_4 = { features?(chrono_0_4_4_features {}) }: chrono_0_4_4_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.chrono_0_4_4.time or false then [ time_0_1_40 ] else []));
    features = mkFeatures (features.chrono_0_4_4 or {});
  };
  chrono_0_4_4_features = f: updateFeatures f (rec {
    chrono_0_4_4.clock =
      (f.chrono_0_4_4.clock or false) ||
      (f.chrono_0_4_4.default or false) ||
      (chrono_0_4_4.default or false);
    chrono_0_4_4.default = (f.chrono_0_4_4.default or true);
    chrono_0_4_4.time =
      (f.chrono_0_4_4.time or false) ||
      (f.chrono_0_4_4.clock or false) ||
      (chrono_0_4_4.clock or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    time_0_1_40.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features time_0_1_40_features ];
  clap_2_32_0 = { features?(clap_2_32_0_features {}) }: clap_2_32_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 textwrap_0_10_0 unicode_width_0_1_5 ]
      ++ (if features.clap_2_32_0.atty or false then [ atty_0_2_11 ] else [])
      ++ (if features.clap_2_32_0.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_32_0.vec_map or false then [ vec_map_0_8_1 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_32_0.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_32_0 or {});
  };
  clap_2_32_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_11.default = true;
    bitflags_1_0_3.default = true;
    clap_2_32_0."yaml-rust" =
      (f.clap_2_32_0."yaml-rust" or false) ||
      (f.clap_2_32_0.yaml or false) ||
      (clap_2_32_0.yaml or false);
    clap_2_32_0.ansi_term =
      (f.clap_2_32_0.ansi_term or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.atty =
      (f.clap_2_32_0.atty or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.clippy =
      (f.clap_2_32_0.clippy or false) ||
      (f.clap_2_32_0.lints or false) ||
      (clap_2_32_0.lints or false);
    clap_2_32_0.color =
      (f.clap_2_32_0.color or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.default = (f.clap_2_32_0.default or true);
    clap_2_32_0.strsim =
      (f.clap_2_32_0.strsim or false) ||
      (f.clap_2_32_0.suggestions or false) ||
      (clap_2_32_0.suggestions or false);
    clap_2_32_0.suggestions =
      (f.clap_2_32_0.suggestions or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.term_size =
      (f.clap_2_32_0.term_size or false) ||
      (f.clap_2_32_0.wrap_help or false) ||
      (clap_2_32_0.wrap_help or false);
    clap_2_32_0.vec_map =
      (f.clap_2_32_0.vec_map or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.yaml =
      (f.clap_2_32_0.yaml or false) ||
      (f.clap_2_32_0.doc or false) ||
      (clap_2_32_0.doc or false);
    strsim_0_7_0.default = true;
    textwrap_0_10_0.default = true;
    textwrap_0_10_0.term_size =
      (f.textwrap_0_10_0.term_size or false) ||
      (clap_2_32_0.wrap_help or false) ||
      (f.clap_2_32_0.wrap_help or false);
    unicode_width_0_1_5.default = true;
    vec_map_0_8_1.default = true;
  }) [ atty_0_2_11_features bitflags_1_0_3_features strsim_0_7_0_features textwrap_0_10_0_features unicode_width_0_1_5_features vec_map_0_8_1_features ansi_term_0_11_0_features ];
  clippy_0_0_138 = { features?(clippy_0_0_138_features {}) }: clippy_0_0_138_ {
    dependencies = mapFeatures features ([ cargo_metadata_0_2_3 clippy_lints_0_0_138 ]);
    features = mkFeatures (features.clippy_0_0_138 or {});
  };
  clippy_0_0_138_features = f: updateFeatures f (rec {
    cargo_metadata_0_2_3.default = true;
    clippy_0_0_138.default = (f.clippy_0_0_138.default or true);
    clippy_lints_0_0_138.default = true;
  }) [ cargo_metadata_0_2_3_features clippy_lints_0_0_138_features ];
  clippy_0_0_155 = { features?(clippy_0_0_155_features {}) }: clippy_0_0_155_ {
    dependencies = mapFeatures features ([ cargo_metadata_0_2_3 clippy_lints_0_0_155 ]);
    features = mkFeatures (features.clippy_0_0_155 or {});
  };
  clippy_0_0_155_features = f: updateFeatures f (rec {
    cargo_metadata_0_2_3.default = true;
    clippy_0_0_155.default = (f.clippy_0_0_155.default or true);
    clippy_lints_0_0_155.default = true;
  }) [ cargo_metadata_0_2_3_features clippy_lints_0_0_155_features ];
  clippy_lints_0_0_138 = { features?(clippy_lints_0_0_138_features {}) }: clippy_lints_0_0_138_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 matches_0_1_7 quine_mc_cluskey_0_2_4 regex_syntax_0_4_2 semver_0_6_0 serde_1_0_70 serde_derive_1_0_70 toml_0_4_6 unicode_normalization_0_1_7 ]);
    features = mkFeatures (features.clippy_lints_0_0_138 or {});
  };
  clippy_lints_0_0_138_features = f: updateFeatures f (rec {
    clippy_lints_0_0_138.default = (f.clippy_lints_0_0_138.default or true);
    lazy_static_0_2_11.default = true;
    matches_0_1_7.default = true;
    quine_mc_cluskey_0_2_4.default = true;
    regex_syntax_0_4_2.default = true;
    semver_0_6_0.default = true;
    serde_1_0_70.default = true;
    serde_derive_1_0_70.default = true;
    toml_0_4_6.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ lazy_static_0_2_11_features matches_0_1_7_features quine_mc_cluskey_0_2_4_features regex_syntax_0_4_2_features semver_0_6_0_features serde_1_0_70_features serde_derive_1_0_70_features toml_0_4_6_features unicode_normalization_0_1_7_features ];
  clippy_lints_0_0_155 = { features?(clippy_lints_0_0_155_features {}) }: clippy_lints_0_0_155_ {
    dependencies = mapFeatures features ([ itertools_0_6_5 lazy_static_0_2_11 matches_0_1_7 pulldown_cmark_0_0_15 quine_mc_cluskey_0_2_4 regex_syntax_0_4_2 semver_0_6_0 serde_1_0_70 serde_derive_1_0_70 toml_0_4_6 unicode_normalization_0_1_7 ]);
    features = mkFeatures (features.clippy_lints_0_0_155 or {});
  };
  clippy_lints_0_0_155_features = f: updateFeatures f (rec {
    clippy_lints_0_0_155.default = (f.clippy_lints_0_0_155.default or true);
    itertools_0_6_5.default = true;
    lazy_static_0_2_11.default = true;
    matches_0_1_7.default = true;
    pulldown_cmark_0_0_15.default = true;
    quine_mc_cluskey_0_2_4.default = true;
    regex_syntax_0_4_2.default = true;
    semver_0_6_0.default = true;
    serde_1_0_70.default = true;
    serde_derive_1_0_70.default = true;
    toml_0_4_6.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ itertools_0_6_5_features lazy_static_0_2_11_features matches_0_1_7_features pulldown_cmark_0_0_15_features quine_mc_cluskey_0_2_4_features regex_syntax_0_4_2_features semver_0_6_0_features serde_1_0_70_features serde_derive_1_0_70_features toml_0_4_6_features unicode_normalization_0_1_7_features ];
  derive_error_chain_0_10_1 = { features?(derive_error_chain_0_10_1_features {}) }: derive_error_chain_0_10_1_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  derive_error_chain_0_10_1_features = f: updateFeatures f (rec {
    derive_error_chain_0_10_1.default = (f.derive_error_chain_0_10_1.default or true);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.full = true;
    syn_0_11_11.parsing = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  diesel_0_13_1 = { features?(diesel_0_13_1_features {}) }: diesel_0_13_1_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 ]);
    features = mkFeatures (features.diesel_0_13_1 or {});
  };
  diesel_0_13_1_features = f: updateFeatures f (rec {
    byteorder_1_2_3.default = true;
    diesel_0_13_1."deprecated-time" =
      (f.diesel_0_13_1."deprecated-time" or false) ||
      (f.diesel_0_13_1.extras or false) ||
      (diesel_0_13_1.extras or false);
    diesel_0_13_1."large-tables" =
      (f.diesel_0_13_1."large-tables" or false) ||
      (f.diesel_0_13_1."huge-tables" or false) ||
      (diesel_0_13_1."huge-tables" or false);
    diesel_0_13_1."libsqlite3-sys" =
      (f.diesel_0_13_1."libsqlite3-sys" or false) ||
      (f.diesel_0_13_1.sqlite or false) ||
      (diesel_0_13_1.sqlite or false);
    diesel_0_13_1."mysqlclient-sys" =
      (f.diesel_0_13_1."mysqlclient-sys" or false) ||
      (f.diesel_0_13_1.mysql or false) ||
      (diesel_0_13_1.mysql or false);
    diesel_0_13_1."network-address" =
      (f.diesel_0_13_1."network-address" or false) ||
      (f.diesel_0_13_1.extras or false) ||
      (diesel_0_13_1.extras or false);
    diesel_0_13_1."pq-sys" =
      (f.diesel_0_13_1."pq-sys" or false) ||
      (f.diesel_0_13_1.postgres or false) ||
      (diesel_0_13_1.postgres or false);
    diesel_0_13_1."with-deprecated" =
      (f.diesel_0_13_1."with-deprecated" or false) ||
      (f.diesel_0_13_1.default or false) ||
      (diesel_0_13_1.default or false);
    diesel_0_13_1.chrono =
      (f.diesel_0_13_1.chrono or false) ||
      (f.diesel_0_13_1.extras or false) ||
      (diesel_0_13_1.extras or false);
    diesel_0_13_1.clippy =
      (f.diesel_0_13_1.clippy or false) ||
      (f.diesel_0_13_1.lint or false) ||
      (diesel_0_13_1.lint or false);
    diesel_0_13_1.default = (f.diesel_0_13_1.default or true);
    diesel_0_13_1.ipnetwork =
      (f.diesel_0_13_1.ipnetwork or false) ||
      (f.diesel_0_13_1."network-address" or false) ||
      (diesel_0_13_1."network-address" or false);
    diesel_0_13_1.libc =
      (f.diesel_0_13_1.libc or false) ||
      (f.diesel_0_13_1."network-address" or false) ||
      (diesel_0_13_1."network-address" or false);
    diesel_0_13_1.serde_json =
      (f.diesel_0_13_1.serde_json or false) ||
      (f.diesel_0_13_1.extras or false) ||
      (diesel_0_13_1.extras or false);
    diesel_0_13_1.time =
      (f.diesel_0_13_1.time or false) ||
      (f.diesel_0_13_1."deprecated-time" or false) ||
      (diesel_0_13_1."deprecated-time" or false);
    diesel_0_13_1.url =
      (f.diesel_0_13_1.url or false) ||
      (f.diesel_0_13_1.mysql or false) ||
      (diesel_0_13_1.mysql or false);
    diesel_0_13_1.uuid =
      (f.diesel_0_13_1.uuid or false) ||
      (f.diesel_0_13_1.extras or false) ||
      (diesel_0_13_1.extras or false);
  }) [ byteorder_1_2_3_features ];
  diesel_0_16_0 = { features?(diesel_0_16_0_features {}) }: diesel_0_16_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 ]
      ++ (if features.diesel_0_16_0.bigdecimal or false then [ bigdecimal_0_0_10 ] else [])
      ++ (if features.diesel_0_16_0.bitflags or false then [ bitflags_0_9_1 ] else [])
      ++ (if features.diesel_0_16_0.chrono or false then [ chrono_0_4_4 ] else [])
      ++ (if features.diesel_0_16_0.clippy or false then [ clippy_0_0_155 ] else [])
      ++ (if features.diesel_0_16_0.ipnetwork or false then [ ipnetwork_0_12_8 ] else [])
      ++ (if features.diesel_0_16_0.libc or false then [ libc_0_2_42 ] else [])
      ++ (if features.diesel_0_16_0."libsqlite3-sys" or false then [ libsqlite3_sys_0_8_1 ] else [])
      ++ (if features.diesel_0_16_0."mysqlclient-sys" or false then [ mysqlclient_sys_0_2_3 ] else [])
      ++ (if features.diesel_0_16_0."num-bigint" or false then [ num_bigint_0_1_44 ] else [])
      ++ (if features.diesel_0_16_0."num-integer" or false then [ num_integer_0_1_39 ] else [])
      ++ (if features.diesel_0_16_0."num-traits" or false then [ num_traits_0_1_43 ] else [])
      ++ (if features.diesel_0_16_0."pq-sys" or false then [ pq_sys_0_4_6 ] else [])
      ++ (if features.diesel_0_16_0.quickcheck or false then [ quickcheck_0_3_2 ] else [])
      ++ (if features.diesel_0_16_0.serde_json or false then [ serde_json_1_0_24 ] else [])
      ++ (if features.diesel_0_16_0.time or false then [ time_0_1_40 ] else [])
      ++ (if features.diesel_0_16_0.url or false then [ url_1_7_1 ] else [])
      ++ (if features.diesel_0_16_0.uuid or false then [ uuid_0_5_1 ] else []));
    features = mkFeatures (features.diesel_0_16_0 or {});
  };
  diesel_0_16_0_features = f: updateFeatures f (rec {
    bigdecimal_0_0_10.default = true;
    bitflags_0_9_1.default = true;
    byteorder_1_2_3.default = true;
    chrono_0_4_4.default = true;
    clippy_0_0_155.default = true;
    diesel_0_16_0."deprecated-time" =
      (f.diesel_0_16_0."deprecated-time" or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    diesel_0_16_0."large-tables" =
      (f.diesel_0_16_0."large-tables" or false) ||
      (f.diesel_0_16_0."huge-tables" or false) ||
      (diesel_0_16_0."huge-tables" or false);
    diesel_0_16_0."libsqlite3-sys" =
      (f.diesel_0_16_0."libsqlite3-sys" or false) ||
      (f.diesel_0_16_0.sqlite or false) ||
      (diesel_0_16_0.sqlite or false);
    diesel_0_16_0."mysqlclient-sys" =
      (f.diesel_0_16_0."mysqlclient-sys" or false) ||
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_0_16_0.mysql or false);
    diesel_0_16_0."network-address" =
      (f.diesel_0_16_0."network-address" or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    diesel_0_16_0."num-bigint" =
      (f.diesel_0_16_0."num-bigint" or false) ||
      (f.diesel_0_16_0.numeric or false) ||
      (diesel_0_16_0.numeric or false);
    diesel_0_16_0."num-integer" =
      (f.diesel_0_16_0."num-integer" or false) ||
      (f.diesel_0_16_0.numeric or false) ||
      (diesel_0_16_0.numeric or false);
    diesel_0_16_0."num-traits" =
      (f.diesel_0_16_0."num-traits" or false) ||
      (f.diesel_0_16_0.numeric or false) ||
      (diesel_0_16_0.numeric or false);
    diesel_0_16_0."pq-sys" =
      (f.diesel_0_16_0."pq-sys" or false) ||
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_0_16_0.postgres or false);
    diesel_0_16_0."with-deprecated" =
      (f.diesel_0_16_0."with-deprecated" or false) ||
      (f.diesel_0_16_0.default or false) ||
      (diesel_0_16_0.default or false);
    diesel_0_16_0.bigdecimal =
      (f.diesel_0_16_0.bigdecimal or false) ||
      (f.diesel_0_16_0.numeric or false) ||
      (diesel_0_16_0.numeric or false);
    diesel_0_16_0.bitflags =
      (f.diesel_0_16_0.bitflags or false) ||
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_0_16_0.postgres or false);
    diesel_0_16_0.chrono =
      (f.diesel_0_16_0.chrono or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    diesel_0_16_0.clippy =
      (f.diesel_0_16_0.clippy or false) ||
      (f.diesel_0_16_0.lint or false) ||
      (diesel_0_16_0.lint or false);
    diesel_0_16_0.default = (f.diesel_0_16_0.default or true);
    diesel_0_16_0.ipnetwork =
      (f.diesel_0_16_0.ipnetwork or false) ||
      (f.diesel_0_16_0."network-address" or false) ||
      (diesel_0_16_0."network-address" or false);
    diesel_0_16_0.libc =
      (f.diesel_0_16_0.libc or false) ||
      (f.diesel_0_16_0."network-address" or false) ||
      (diesel_0_16_0."network-address" or false);
    diesel_0_16_0.numeric =
      (f.diesel_0_16_0.numeric or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    diesel_0_16_0.serde_json =
      (f.diesel_0_16_0.serde_json or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    diesel_0_16_0.time =
      (f.diesel_0_16_0.time or false) ||
      (f.diesel_0_16_0."deprecated-time" or false) ||
      (diesel_0_16_0."deprecated-time" or false);
    diesel_0_16_0.url =
      (f.diesel_0_16_0.url or false) ||
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_0_16_0.mysql or false);
    diesel_0_16_0.uuid =
      (f.diesel_0_16_0.uuid or false) ||
      (f.diesel_0_16_0.extras or false) ||
      (diesel_0_16_0.extras or false);
    ipnetwork_0_12_8.default = true;
    libc_0_2_42.default = true;
    libsqlite3_sys_0_8_1."min_sqlite_version_3_7_16" = true;
    libsqlite3_sys_0_8_1.default = true;
    mysqlclient_sys_0_2_3.default = true;
    num_bigint_0_1_44.default = true;
    num_integer_0_1_39.default = true;
    num_traits_0_1_43.default = true;
    pq_sys_0_4_6.default = true;
    quickcheck_0_3_2.default = true;
    serde_json_1_0_24.default = true;
    time_0_1_40.default = true;
    url_1_7_1.default = true;
    uuid_0_5_1.default = true;
    uuid_0_5_1.use_std = true;
  }) [ bigdecimal_0_0_10_features bitflags_0_9_1_features byteorder_1_2_3_features chrono_0_4_4_features clippy_0_0_155_features ipnetwork_0_12_8_features libc_0_2_42_features libsqlite3_sys_0_8_1_features mysqlclient_sys_0_2_3_features num_bigint_0_1_44_features num_integer_0_1_39_features num_traits_0_1_43_features pq_sys_0_4_6_features quickcheck_0_3_2_features serde_json_1_0_24_features time_0_1_40_features url_1_7_1_features uuid_0_5_1_features ];
  diesel_cli_0_16_0 = { features?(diesel_cli_0_16_0_features {}) }: diesel_cli_0_16_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_4 clap_2_32_0 diesel_0_16_0 diesel_infer_schema_0_16_0 dotenv_0_10_1 ]
      ++ (if features.diesel_cli_0_16_0.clippy or false then [ clippy_0_0_155 ] else []));
    features = mkFeatures (features.diesel_cli_0_16_0 or {});
  };
  diesel_cli_0_16_0_features = f: updateFeatures f (rec {
    chrono_0_4_4.default = true;
    clap_2_32_0.default = true;
    clippy_0_0_155.default = true;
    diesel_0_16_0.default = (f.diesel_0_16_0.default or false);
    diesel_0_16_0.mysql =
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_cli_0_16_0.mysql or false) ||
      (f.diesel_cli_0_16_0.mysql or false);
    diesel_0_16_0.postgres =
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_cli_0_16_0.postgres or false) ||
      (f.diesel_cli_0_16_0.postgres or false);
    diesel_0_16_0.sqlite =
      (f.diesel_0_16_0.sqlite or false) ||
      (diesel_cli_0_16_0.sqlite or false) ||
      (f.diesel_cli_0_16_0.sqlite or false);
    diesel_cli_0_16_0.clippy =
      (f.diesel_cli_0_16_0.clippy or false) ||
      (f.diesel_cli_0_16_0.lint or false) ||
      (diesel_cli_0_16_0.lint or false);
    diesel_cli_0_16_0.default = (f.diesel_cli_0_16_0.default or true);
    diesel_cli_0_16_0.mysql =
      (f.diesel_cli_0_16_0.mysql or false) ||
      (f.diesel_cli_0_16_0.default or false) ||
      (diesel_cli_0_16_0.default or false);
    diesel_cli_0_16_0.postgres =
      (f.diesel_cli_0_16_0.postgres or false) ||
      (f.diesel_cli_0_16_0.default or false) ||
      (diesel_cli_0_16_0.default or false);
    diesel_cli_0_16_0.sqlite =
      (f.diesel_cli_0_16_0.sqlite or false) ||
      (f.diesel_cli_0_16_0.default or false) ||
      (diesel_cli_0_16_0.default or false);
    diesel_infer_schema_0_16_0.default = true;
    diesel_infer_schema_0_16_0.mysql =
      (f.diesel_infer_schema_0_16_0.mysql or false) ||
      (diesel_cli_0_16_0.mysql or false) ||
      (f.diesel_cli_0_16_0.mysql or false);
    diesel_infer_schema_0_16_0.postgres =
      (f.diesel_infer_schema_0_16_0.postgres or false) ||
      (diesel_cli_0_16_0.postgres or false) ||
      (f.diesel_cli_0_16_0.postgres or false);
    diesel_infer_schema_0_16_0.sqlite =
      (f.diesel_infer_schema_0_16_0.sqlite or false) ||
      (diesel_cli_0_16_0.sqlite or false) ||
      (f.diesel_cli_0_16_0.sqlite or false);
    dotenv_0_10_1.default = true;
  }) [ chrono_0_4_4_features clap_2_32_0_features clippy_0_0_155_features diesel_0_16_0_features diesel_infer_schema_0_16_0_features dotenv_0_10_1_features ];
  diesel_codegen_0_13_0 = { features?(diesel_codegen_0_13_0_features {}) }: diesel_codegen_0_13_0_ {
    dependencies = mapFeatures features ([ diesel_0_13_1 quote_0_3_15 syn_0_11_11 ]
      ++ (if features.diesel_codegen_0_13_0.dotenv or false then [ dotenv_0_9_0 ] else []));
    features = mkFeatures (features.diesel_codegen_0_13_0 or {});
  };
  diesel_codegen_0_13_0_features = f: updateFeatures f (rec {
    diesel_0_13_1.default = (f.diesel_0_13_1.default or false);
    diesel_0_13_1.mysql =
      (f.diesel_0_13_1.mysql or false) ||
      (diesel_codegen_0_13_0.mysql or false) ||
      (f.diesel_codegen_0_13_0.mysql or false);
    diesel_0_13_1.postgres =
      (f.diesel_0_13_1.postgres or false) ||
      (diesel_codegen_0_13_0.postgres or false) ||
      (f.diesel_codegen_0_13_0.postgres or false);
    diesel_0_13_1.sqlite =
      (f.diesel_0_13_1.sqlite or false) ||
      (diesel_codegen_0_13_0.sqlite or false) ||
      (f.diesel_codegen_0_13_0.sqlite or false);
    diesel_codegen_0_13_0.clippy =
      (f.diesel_codegen_0_13_0.clippy or false) ||
      (f.diesel_codegen_0_13_0.lint or false) ||
      (diesel_codegen_0_13_0.lint or false);
    diesel_codegen_0_13_0.default = (f.diesel_codegen_0_13_0.default or true);
    diesel_codegen_0_13_0.dotenv =
      (f.diesel_codegen_0_13_0.dotenv or false) ||
      (f.diesel_codegen_0_13_0.default or false) ||
      (diesel_codegen_0_13_0.default or false);
    dotenv_0_9_0.default = true;
    quote_0_3_15.default = true;
    syn_0_11_11.aster = true;
    syn_0_11_11.default = true;
  }) [ diesel_0_13_1_features dotenv_0_9_0_features quote_0_3_15_features syn_0_11_11_features ];
  diesel_codegen_0_16_1 = { features?(diesel_codegen_0_16_1_features {}) }: diesel_codegen_0_16_1_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 quote_0_3_15 serde_1_0_70 serde_json_1_0_24 syn_0_11_11 ]
      ++ (if features.diesel_codegen_0_16_1.clippy or false then [ clippy_0_0_138 ] else [])
      ++ (if features.diesel_codegen_0_16_1.diesel_infer_schema or false then [ diesel_infer_schema_0_16_0 ] else [])
      ++ (if features.diesel_codegen_0_16_1.dotenv or false then [ dotenv_0_10_1 ] else []));
    features = mkFeatures (features.diesel_codegen_0_16_1 or {});
  };
  diesel_codegen_0_16_1_features = f: updateFeatures f (rec {
    clippy_0_0_138.default = true;
    diesel_0_16_0.default = (f.diesel_0_16_0.default or false);
    diesel_0_16_0.mysql =
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_codegen_0_16_1.mysql or false) ||
      (f.diesel_codegen_0_16_1.mysql or false);
    diesel_0_16_0.postgres =
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_codegen_0_16_1.postgres or false) ||
      (f.diesel_codegen_0_16_1.postgres or false);
    diesel_0_16_0.sqlite =
      (f.diesel_0_16_0.sqlite or false) ||
      (diesel_codegen_0_16_1.sqlite or false) ||
      (f.diesel_codegen_0_16_1.sqlite or false);
    diesel_codegen_0_16_1.clippy =
      (f.diesel_codegen_0_16_1.clippy or false) ||
      (f.diesel_codegen_0_16_1.lint or false) ||
      (diesel_codegen_0_16_1.lint or false);
    diesel_codegen_0_16_1.default = (f.diesel_codegen_0_16_1.default or true);
    diesel_codegen_0_16_1.dotenv =
      (f.diesel_codegen_0_16_1.dotenv or false) ||
      (f.diesel_codegen_0_16_1.default or false) ||
      (diesel_codegen_0_16_1.default or false);
    diesel_infer_schema_0_16_0.default = (f.diesel_infer_schema_0_16_0.default or false);
    diesel_infer_schema_0_16_0.mysql =
      (f.diesel_infer_schema_0_16_0.mysql or false) ||
      (diesel_codegen_0_16_1.mysql or false) ||
      (f.diesel_codegen_0_16_1.mysql or false);
    diesel_infer_schema_0_16_0.postgres =
      (f.diesel_infer_schema_0_16_0.postgres or false) ||
      (diesel_codegen_0_16_1.postgres or false) ||
      (f.diesel_codegen_0_16_1.postgres or false);
    diesel_infer_schema_0_16_0.sqlite =
      (f.diesel_infer_schema_0_16_0.sqlite or false) ||
      (diesel_codegen_0_16_1.sqlite or false) ||
      (f.diesel_codegen_0_16_1.sqlite or false);
    dotenv_0_10_1.default = (f.dotenv_0_10_1.default or false);
    quote_0_3_15.default = true;
    serde_1_0_70.default = true;
    serde_1_0_70.derive = true;
    serde_json_1_0_24.default = true;
    syn_0_11_11.aster = true;
    syn_0_11_11.default = true;
  }) [ clippy_0_0_138_features diesel_0_16_0_features diesel_infer_schema_0_16_0_features dotenv_0_10_1_features quote_0_3_15_features serde_1_0_70_features serde_json_1_0_24_features syn_0_11_11_features ];
  diesel_demo_step_1_mysql_0_1_0 = { features?(diesel_demo_step_1_mysql_0_1_0_features {}) }: diesel_demo_step_1_mysql_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_1_mysql_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.mysql = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.mysql = true;
    diesel_demo_step_1_mysql_0_1_0.default = (f.diesel_demo_step_1_mysql_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_1_pg_0_1_0 = { features?(diesel_demo_step_1_pg_0_1_0_features {}) }: diesel_demo_step_1_pg_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_1_pg_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.postgres = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.postgres = true;
    diesel_demo_step_1_pg_0_1_0.default = (f.diesel_demo_step_1_pg_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_1_sqlite_0_1_0 = { features?(diesel_demo_step_1_sqlite_0_1_0_features {}) }: diesel_demo_step_1_sqlite_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_1_sqlite_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.sqlite = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.sqlite = true;
    diesel_demo_step_1_sqlite_0_1_0.default = (f.diesel_demo_step_1_sqlite_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_2_mysql_0_1_0 = { features?(diesel_demo_step_2_mysql_0_1_0_features {}) }: diesel_demo_step_2_mysql_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_2_mysql_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.mysql = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.mysql = true;
    diesel_demo_step_2_mysql_0_1_0.default = (f.diesel_demo_step_2_mysql_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_2_pg_0_1_0 = { features?(diesel_demo_step_2_pg_0_1_0_features {}) }: diesel_demo_step_2_pg_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_2_pg_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.postgres = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.postgres = true;
    diesel_demo_step_2_pg_0_1_0.default = (f.diesel_demo_step_2_pg_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_2_sqlite_0_1_0 = { features?(diesel_demo_step_2_sqlite_0_1_0_features {}) }: diesel_demo_step_2_sqlite_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_2_sqlite_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.sqlite = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.sqlite = true;
    diesel_demo_step_2_sqlite_0_1_0.default = (f.diesel_demo_step_2_sqlite_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_3_mysql_0_1_0 = { features?(diesel_demo_step_3_mysql_0_1_0_features {}) }: diesel_demo_step_3_mysql_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_3_mysql_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.mysql = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.mysql = true;
    diesel_demo_step_3_mysql_0_1_0.default = (f.diesel_demo_step_3_mysql_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_3_pg_0_1_0 = { features?(diesel_demo_step_3_pg_0_1_0_features {}) }: diesel_demo_step_3_pg_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_3_pg_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.postgres = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.postgres = true;
    diesel_demo_step_3_pg_0_1_0.default = (f.diesel_demo_step_3_pg_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_demo_step_3_sqlite_0_1_0 = { features?(diesel_demo_step_3_sqlite_0_1_0_features {}) }: diesel_demo_step_3_sqlite_0_1_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_8_0 ]);
  };
  diesel_demo_step_3_sqlite_0_1_0_features = f: updateFeatures f (rec {
    diesel_0_16_0.default = true;
    diesel_0_16_0.sqlite = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.sqlite = true;
    diesel_demo_step_3_sqlite_0_1_0.default = (f.diesel_demo_step_3_sqlite_0_1_0.default or true);
    dotenv_0_8_0.default = true;
  }) [ diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_8_0_features ];
  diesel_infer_schema_0_16_0 = { features?(diesel_infer_schema_0_16_0_features {}) }: diesel_infer_schema_0_16_0_ {
    dependencies = mapFeatures features ([ diesel_0_16_0 ]
      ++ (if features.diesel_infer_schema_0_16_0.clippy or false then [ clippy_0_0_155 ] else []));
    features = mkFeatures (features.diesel_infer_schema_0_16_0 or {});
  };
  diesel_infer_schema_0_16_0_features = f: updateFeatures f (rec {
    clippy_0_0_155.default = true;
    diesel_0_16_0.default = (f.diesel_0_16_0.default or false);
    diesel_0_16_0.mysql =
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_infer_schema_0_16_0.mysql or false) ||
      (f.diesel_infer_schema_0_16_0.mysql or false);
    diesel_0_16_0.postgres =
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_infer_schema_0_16_0.postgres or false) ||
      (f.diesel_infer_schema_0_16_0.postgres or false);
    diesel_0_16_0.sqlite =
      (f.diesel_0_16_0.sqlite or false) ||
      (diesel_infer_schema_0_16_0.sqlite or false) ||
      (f.diesel_infer_schema_0_16_0.sqlite or false);
    diesel_infer_schema_0_16_0.clippy =
      (f.diesel_infer_schema_0_16_0.clippy or false) ||
      (f.diesel_infer_schema_0_16_0.lint or false) ||
      (diesel_infer_schema_0_16_0.lint or false);
    diesel_infer_schema_0_16_0.default = (f.diesel_infer_schema_0_16_0.default or true);
    diesel_infer_schema_0_16_0.uses_information_schema =
      (f.diesel_infer_schema_0_16_0.uses_information_schema or false) ||
      (f.diesel_infer_schema_0_16_0.mysql or false) ||
      (diesel_infer_schema_0_16_0.mysql or false) ||
      (f.diesel_infer_schema_0_16_0.postgres or false) ||
      (diesel_infer_schema_0_16_0.postgres or false);
  }) [ clippy_0_0_155_features diesel_0_16_0_features ];
  diesel_tests_0_1_0 = { features?(diesel_tests_0_1_0_features {}) }: diesel_tests_0_1_0_ {
    dependencies = mapFeatures features ([ assert_matches_1_3_0 bigdecimal_0_0_10 chrono_0_4_4 diesel_0_16_0 diesel_codegen_0_16_1 dotenv_0_10_1 ipnetwork_0_12_8 quickcheck_0_3_2 serde_json_1_0_24 uuid_0_5_1 ]);
    buildDependencies = mapFeatures features ([ diesel_0_16_0 dotenv_0_10_1 ]);
    features = mkFeatures (features.diesel_tests_0_1_0 or {});
  };
  diesel_tests_0_1_0_features = f: updateFeatures f (rec {
    assert_matches_1_3_0.default = true;
    bigdecimal_0_0_10.default = true;
    chrono_0_4_4.default = true;
    diesel_0_16_0."network-address" = true;
    diesel_0_16_0.chrono = true;
    diesel_0_16_0.default = (f.diesel_0_16_0.default or false);
    diesel_0_16_0.lint =
      (f.diesel_0_16_0.lint or false) ||
      (diesel_tests_0_1_0.lint or false) ||
      (f.diesel_tests_0_1_0.lint or false);
    diesel_0_16_0.mysql =
      (f.diesel_0_16_0.mysql or false) ||
      (diesel_tests_0_1_0.mysql or false) ||
      (f.diesel_tests_0_1_0.mysql or false);
    diesel_0_16_0.numeric = true;
    diesel_0_16_0.postgres =
      (f.diesel_0_16_0.postgres or false) ||
      (diesel_tests_0_1_0.postgres or false) ||
      (f.diesel_tests_0_1_0.postgres or false);
    diesel_0_16_0.quickcheck = true;
    diesel_0_16_0.serde_json = true;
    diesel_0_16_0.sqlite =
      (f.diesel_0_16_0.sqlite or false) ||
      (diesel_tests_0_1_0.sqlite or false) ||
      (f.diesel_tests_0_1_0.sqlite or false);
    diesel_0_16_0.unstable =
      (f.diesel_0_16_0.unstable or false) ||
      (diesel_tests_0_1_0.unstable or false) ||
      (f.diesel_tests_0_1_0.unstable or false);
    diesel_0_16_0.uuid = true;
    diesel_codegen_0_16_1.default = true;
    diesel_codegen_0_16_1.lint =
      (f.diesel_codegen_0_16_1.lint or false) ||
      (diesel_tests_0_1_0.lint or false) ||
      (f.diesel_tests_0_1_0.lint or false);
    diesel_codegen_0_16_1.mysql =
      (f.diesel_codegen_0_16_1.mysql or false) ||
      (diesel_tests_0_1_0.mysql or false) ||
      (f.diesel_tests_0_1_0.mysql or false);
    diesel_codegen_0_16_1.postgres =
      (f.diesel_codegen_0_16_1.postgres or false) ||
      (diesel_tests_0_1_0.postgres or false) ||
      (f.diesel_tests_0_1_0.postgres or false);
    diesel_codegen_0_16_1.sqlite =
      (f.diesel_codegen_0_16_1.sqlite or false) ||
      (diesel_tests_0_1_0.sqlite or false) ||
      (f.diesel_tests_0_1_0.sqlite or false);
    diesel_tests_0_1_0.default = (f.diesel_tests_0_1_0.default or true);
    dotenv_0_10_1.default = true;
    ipnetwork_0_12_8.default = true;
    quickcheck_0_3_2.default = true;
    quickcheck_0_3_2.unstable = true;
    serde_json_1_0_24.default = true;
    uuid_0_5_1.default = true;
  }) [ assert_matches_1_3_0_features bigdecimal_0_0_10_features chrono_0_4_4_features diesel_0_16_0_features diesel_codegen_0_16_1_features dotenv_0_10_1_features ipnetwork_0_12_8_features quickcheck_0_3_2_features serde_json_1_0_24_features uuid_0_5_1_features diesel_0_16_0_features dotenv_0_10_1_features ];
  difference_1_0_0 = { features?(difference_1_0_0_features {}) }: difference_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.difference_1_0_0 or {});
  };
  difference_1_0_0_features = f: updateFeatures f (rec {
    difference_1_0_0.default = (f.difference_1_0_0.default or true);
    difference_1_0_0.getopts =
      (f.difference_1_0_0.getopts or false) ||
      (f.difference_1_0_0.bin or false) ||
      (difference_1_0_0.bin or false);
  }) [];
  dotenv_0_8_0 = { features?(dotenv_0_8_0_features {}) }: dotenv_0_8_0_ {
    dependencies = mapFeatures features ([ regex_0_1_80 ]);
  };
  dotenv_0_8_0_features = f: updateFeatures f (rec {
    dotenv_0_8_0.default = (f.dotenv_0_8_0.default or true);
    regex_0_1_80.default = true;
  }) [ regex_0_1_80_features ];
  dotenv_0_9_0 = { features?(dotenv_0_9_0_features {}) }: dotenv_0_9_0_ {
    dependencies = mapFeatures features ([ regex_0_2_11 ]);
  };
  dotenv_0_9_0_features = f: updateFeatures f (rec {
    dotenv_0_9_0.default = (f.dotenv_0_9_0.default or true);
    regex_0_2_11.default = true;
  }) [ regex_0_2_11_features ];
  dotenv_0_10_1 = { features?(dotenv_0_10_1_features {}) }: dotenv_0_10_1_ {
    dependencies = mapFeatures features ([ derive_error_chain_0_10_1 error_chain_0_10_0 regex_0_2_11 ]);
    features = mkFeatures (features.dotenv_0_10_1 or {});
  };
  dotenv_0_10_1_features = f: updateFeatures f (rec {
    derive_error_chain_0_10_1.default = true;
    dotenv_0_10_1.backtrace =
      (f.dotenv_0_10_1.backtrace or false) ||
      (f.dotenv_0_10_1.default or false) ||
      (dotenv_0_10_1.default or false);
    dotenv_0_10_1.default = (f.dotenv_0_10_1.default or true);
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (dotenv_0_10_1.backtrace or false) ||
      (f.dotenv_0_10_1.backtrace or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or false);
    regex_0_2_11.default = true;
  }) [ derive_error_chain_0_10_1_features error_chain_0_10_0_features regex_0_2_11_features ];
  dtoa_0_4_3 = { features?(dtoa_0_4_3_features {}) }: dtoa_0_4_3_ {};
  dtoa_0_4_3_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = (f.dtoa_0_4_3.default or true);
  }) [];
  either_1_5_0 = { features?(either_1_5_0_features {}) }: either_1_5_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_5_0 or {});
  };
  either_1_5_0_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or true);
    either_1_5_0.use_std =
      (f.either_1_5_0.use_std or false) ||
      (f.either_1_5_0.default or false) ||
      (either_1_5_0.default or false);
  }) [];
  env_logger_0_3_5 = { features?(env_logger_0_3_5_features {}) }: env_logger_0_3_5_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]
      ++ (if features.env_logger_0_3_5.regex or false then [ regex_0_1_80 ] else []));
    features = mkFeatures (features.env_logger_0_3_5 or {});
  };
  env_logger_0_3_5_features = f: updateFeatures f (rec {
    env_logger_0_3_5.default = (f.env_logger_0_3_5.default or true);
    env_logger_0_3_5.regex =
      (f.env_logger_0_3_5.regex or false) ||
      (f.env_logger_0_3_5.default or false) ||
      (env_logger_0_3_5.default or false);
    log_0_3_9.default = true;
    regex_0_1_80.default = true;
  }) [ log_0_3_9_features regex_0_1_80_features ];
  error_chain_0_10_0 = { features?(error_chain_0_10_0_features {}) }: error_chain_0_10_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_10_0.backtrace or false then [ backtrace_0_3_9 ] else []));
    features = mkFeatures (features.error_chain_0_10_0 or {});
  };
  error_chain_0_10_0_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or true);
    error_chain_0_10_0.example_generated =
      (f.error_chain_0_10_0.example_generated or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
  }) [ backtrace_0_3_9_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_3_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  getopts_0_2_18 = { features?(getopts_0_2_18_features {}) }: getopts_0_2_18_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  getopts_0_2_18_features = f: updateFeatures f (rec {
    getopts_0_2_18.default = (f.getopts_0_2_18.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  idna_0_1_5 = { features?(idna_0_1_5_features {}) }: idna_0_1_5_ {
    dependencies = mapFeatures features ([ matches_0_1_7 unicode_bidi_0_3_4 unicode_normalization_0_1_7 ]);
  };
  idna_0_1_5_features = f: updateFeatures f (rec {
    idna_0_1_5.default = (f.idna_0_1_5.default or true);
    matches_0_1_7.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ matches_0_1_7_features unicode_bidi_0_3_4_features unicode_normalization_0_1_7_features ];
  ipnetwork_0_12_8 = { features?(ipnetwork_0_12_8_features {}) }: ipnetwork_0_12_8_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.ipnetwork_0_12_8 or {});
  };
  ipnetwork_0_12_8_features = f: updateFeatures f (rec {
    ipnetwork_0_12_8.clippy =
      (f.ipnetwork_0_12_8.clippy or false) ||
      (f.ipnetwork_0_12_8.dev or false) ||
      (ipnetwork_0_12_8.dev or false);
    ipnetwork_0_12_8.default = (f.ipnetwork_0_12_8.default or true);
    ipnetwork_0_12_8.serde =
      (f.ipnetwork_0_12_8.serde or false) ||
      (f.ipnetwork_0_12_8."with-serde" or false) ||
      (ipnetwork_0_12_8."with-serde" or false);
    ipnetwork_0_12_8.serde_derive =
      (f.ipnetwork_0_12_8.serde_derive or false) ||
      (f.ipnetwork_0_12_8."with-serde" or false) ||
      (ipnetwork_0_12_8."with-serde" or false);
  }) [];
  itertools_0_6_5 = { features?(itertools_0_6_5_features {}) }: itertools_0_6_5_ {
    dependencies = mapFeatures features ([ either_1_5_0 ]);
  };
  itertools_0_6_5_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    itertools_0_6_5.default = (f.itertools_0_6_5.default or true);
  }) [ either_1_5_0_features ];
  itoa_0_4_2 = { features?(itoa_0_4_2_features {}) }: itoa_0_4_2_ {
    features = mkFeatures (features.itoa_0_4_2 or {});
  };
  itoa_0_4_2_features = f: updateFeatures f (rec {
    itoa_0_4_2.default = (f.itoa_0_4_2.default or true);
    itoa_0_4_2.std =
      (f.itoa_0_4_2.std or false) ||
      (f.itoa_0_4_2.default or false) ||
      (itoa_0_4_2.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_2 = { features?(lazy_static_1_0_2_features {}) }: lazy_static_1_0_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_2 or {});
  };
  lazy_static_1_0_2_features = f: updateFeatures f (rec {
    lazy_static_1_0_2.default = (f.lazy_static_1_0_2.default or true);
    lazy_static_1_0_2.nightly =
      (f.lazy_static_1_0_2.nightly or false) ||
      (f.lazy_static_1_0_2.spin_no_std or false) ||
      (lazy_static_1_0_2.spin_no_std or false);
    lazy_static_1_0_2.spin =
      (f.lazy_static_1_0_2.spin or false) ||
      (f.lazy_static_1_0_2.spin_no_std or false) ||
      (lazy_static_1_0_2.spin_no_std or false);
  }) [];
  libc_0_2_42 = { features?(libc_0_2_42_features {}) }: libc_0_2_42_ {
    features = mkFeatures (features.libc_0_2_42 or {});
  };
  libc_0_2_42_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or true);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (f.libc_0_2_42.default or false) ||
      (libc_0_2_42.default or false);
  }) [];
  libsqlite3_sys_0_8_1 = { features?(libsqlite3_sys_0_8_1_features {}) }: libsqlite3_sys_0_8_1_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ ]
      ++ (if features.libsqlite3_sys_0_8_1."pkg-config" or false then [ pkg_config_0_3_12 ] else []));
    features = mkFeatures (features.libsqlite3_sys_0_8_1 or {});
  };
  libsqlite3_sys_0_8_1_features = f: updateFeatures f (rec {
    libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" =
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_8_1.default or false) ||
      (libsqlite3_sys_0_8_1.default or false);
    libsqlite3_sys_0_8_1."pkg-config" =
      (f.libsqlite3_sys_0_8_1."pkg-config" or false) ||
      (f.libsqlite3_sys_0_8_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_8_1.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_11" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_11" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_23" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_23" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_16" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_16" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_3" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_3" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_4" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_4" or false);
    libsqlite3_sys_0_8_1.bindgen =
      (f.libsqlite3_sys_0_8_1.bindgen or false) ||
      (f.libsqlite3_sys_0_8_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_8_1.buildtime_bindgen or false);
    libsqlite3_sys_0_8_1.default = (f.libsqlite3_sys_0_8_1.default or true);
    libsqlite3_sys_0_8_1.gcc =
      (f.libsqlite3_sys_0_8_1.gcc or false) ||
      (f.libsqlite3_sys_0_8_1.bundled or false) ||
      (libsqlite3_sys_0_8_1.bundled or false);
    libsqlite3_sys_0_8_1.vcpkg =
      (f.libsqlite3_sys_0_8_1.vcpkg or false) ||
      (f.libsqlite3_sys_0_8_1.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_8_1.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_11" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_11" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_23" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_23" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_16" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_16" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_3" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_3" or false) ||
      (f.libsqlite3_sys_0_8_1."min_sqlite_version_3_7_4" or false) ||
      (libsqlite3_sys_0_8_1."min_sqlite_version_3_7_4" or false);
    pkg_config_0_3_12.default = true;
  }) [ pkg_config_0_3_12_features ];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_3 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_3.default = true;
    log_0_4_3.max_level_debug =
      (f.log_0_4_3.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_3.max_level_error =
      (f.log_0_4_3.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_3.max_level_info =
      (f.log_0_4_3.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_3.max_level_off =
      (f.log_0_4_3.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_3.max_level_trace =
      (f.log_0_4_3.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_3.max_level_warn =
      (f.log_0_4_3.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_3.release_max_level_debug =
      (f.log_0_4_3.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_3.release_max_level_error =
      (f.log_0_4_3.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_3.release_max_level_info =
      (f.log_0_4_3.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_3.release_max_level_off =
      (f.log_0_4_3.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_3.release_max_level_trace =
      (f.log_0_4_3.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_3.release_max_level_warn =
      (f.log_0_4_3.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_3.std =
      (f.log_0_4_3.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_3_features ];
  log_0_4_3 = { features?(log_0_4_3_features {}) }: log_0_4_3_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_4 ]);
    features = mkFeatures (features.log_0_4_3 or {});
  };
  log_0_4_3_features = f: updateFeatures f (rec {
    cfg_if_0_1_4.default = true;
    log_0_4_3.default = (f.log_0_4_3.default or true);
  }) [ cfg_if_0_1_4_features ];
  matches_0_1_7 = { features?(matches_0_1_7_features {}) }: matches_0_1_7_ {};
  matches_0_1_7_features = f: updateFeatures f (rec {
    matches_0_1_7.default = (f.matches_0_1_7.default or true);
  }) [];
  memchr_0_1_11 = { features?(memchr_0_1_11_features {}) }: memchr_0_1_11_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
  };
  memchr_0_1_11_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    memchr_0_1_11.default = (f.memchr_0_1_11.default or true);
  }) [ libc_0_2_42_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_42 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or false);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_42_features ];
  mysqlclient_sys_0_2_3 = { features?(mysqlclient_sys_0_2_3_features {}) }: mysqlclient_sys_0_2_3_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_12 ]);
  };
  mysqlclient_sys_0_2_3_features = f: updateFeatures f (rec {
    mysqlclient_sys_0_2_3.default = (f.mysqlclient_sys_0_2_3.default or true);
    pkg_config_0_3_12.default = true;
  }) [ pkg_config_0_3_12_features ];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_iter_0_1_37 num_traits_0_2_5 ]
      ++ (if features.num_0_1_42."num-bigint" or false then [ num_bigint_0_1_44 ] else []));
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42."num-bigint" =
      (f.num_0_1_42."num-bigint" or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42."num-complex" =
      (f.num_0_1_42."num-complex" or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42."num-rational" =
      (f.num_0_1_42."num-rational" or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42."rustc-serialize" =
      (f.num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_bigint_0_1_44."rustc-serialize" =
      (f.num_bigint_0_1_44."rustc-serialize" or false) ||
      (num_0_1_42."rustc-serialize" or false) ||
      (f.num_0_1_42."rustc-serialize" or false);
    num_bigint_0_1_44.default = true;
    num_bigint_0_1_44.serde =
      (f.num_bigint_0_1_44.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_integer_0_1_39.default = true;
    num_iter_0_1_37.default = true;
    num_traits_0_2_5.default = true;
  }) [ num_bigint_0_1_44_features num_integer_0_1_39_features num_iter_0_1_37_features num_traits_0_2_5_features ];
  num_bigint_0_1_44 = { features?(num_bigint_0_1_44_features {}) }: num_bigint_0_1_44_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.num_bigint_0_1_44.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.num_bigint_0_1_44."rustc-serialize" or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_44 or {});
  };
  num_bigint_0_1_44_features = f: updateFeatures f (rec {
    num_bigint_0_1_44."rustc-serialize" =
      (f.num_bigint_0_1_44."rustc-serialize" or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_bigint_0_1_44.default = (f.num_bigint_0_1_44.default or true);
    num_bigint_0_1_44.rand =
      (f.num_bigint_0_1_44.rand or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.std = true;
    rand_0_4_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features rand_0_4_2_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_39 = { features?(num_integer_0_1_39_features {}) }: num_integer_0_1_39_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
    features = mkFeatures (features.num_integer_0_1_39 or {});
  };
  num_integer_0_1_39_features = f: updateFeatures f (rec {
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or true);
    num_integer_0_1_39.std =
      (f.num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.default or false) ||
      (num_integer_0_1_39.default or false);
    num_traits_0_2_5."i128" =
      (f.num_traits_0_2_5."i128" or false) ||
      (num_integer_0_1_39."i128" or false) ||
      (f.num_integer_0_1_39."i128" or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.std or false);
  }) [ num_traits_0_2_5_features ];
  num_iter_0_1_37 = { features?(num_iter_0_1_37_features {}) }: num_iter_0_1_37_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]);
    features = mkFeatures (features.num_iter_0_1_37 or {});
  };
  num_iter_0_1_37_features = f: updateFeatures f (rec {
    num_integer_0_1_39."i128" =
      (f.num_integer_0_1_39."i128" or false) ||
      (num_iter_0_1_37."i128" or false) ||
      (f.num_iter_0_1_37."i128" or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_integer_0_1_39.std =
      (f.num_integer_0_1_39.std or false) ||
      (num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.std or false);
    num_iter_0_1_37.default = (f.num_iter_0_1_37.default or true);
    num_iter_0_1_37.std =
      (f.num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.default or false) ||
      (num_iter_0_1_37.default or false);
    num_traits_0_2_5."i128" =
      (f.num_traits_0_2_5."i128" or false) ||
      (num_iter_0_1_37."i128" or false) ||
      (f.num_iter_0_1_37."i128" or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (num_iter_0_1_37.std or false) ||
      (f.num_iter_0_1_37.std or false);
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_5.default = true;
  }) [ num_traits_0_2_5_features ];
  num_traits_0_2_5 = { features?(num_traits_0_2_5_features {}) }: num_traits_0_2_5_ {
    features = mkFeatures (features.num_traits_0_2_5 or {});
  };
  num_traits_0_2_5_features = f: updateFeatures f (rec {
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or true);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (f.num_traits_0_2_5.default or false) ||
      (num_traits_0_2_5.default or false);
  }) [];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  pkg_config_0_3_12 = { features?(pkg_config_0_3_12_features {}) }: pkg_config_0_3_12_ {};
  pkg_config_0_3_12_features = f: updateFeatures f (rec {
    pkg_config_0_3_12.default = (f.pkg_config_0_3_12.default or true);
  }) [];
  pq_sys_0_4_6 = { features?(pq_sys_0_4_6_features {}) }: pq_sys_0_4_6_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([]);
  };
  pq_sys_0_4_6_features = f: updateFeatures f (rec {
    pq_sys_0_4_6.default = (f.pq_sys_0_4_6.default or true);
  }) [];
  proc_macro2_0_4_9 = { features?(proc_macro2_0_4_9_features {}) }: proc_macro2_0_4_9_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_9 or {});
  };
  proc_macro2_0_4_9_features = f: updateFeatures f (rec {
    proc_macro2_0_4_9."proc-macro" =
      (f.proc_macro2_0_4_9."proc-macro" or false) ||
      (f.proc_macro2_0_4_9.default or false) ||
      (proc_macro2_0_4_9.default or false) ||
      (f.proc_macro2_0_4_9.nightly or false) ||
      (proc_macro2_0_4_9.nightly or false);
    proc_macro2_0_4_9.default = (f.proc_macro2_0_4_9.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  pulldown_cmark_0_0_15 = { features?(pulldown_cmark_0_0_15_features {}) }: pulldown_cmark_0_0_15_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 ]
      ++ (if features.pulldown_cmark_0_0_15.getopts or false then [ getopts_0_2_18 ] else []));
    features = mkFeatures (features.pulldown_cmark_0_0_15 or {});
  };
  pulldown_cmark_0_0_15_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    getopts_0_2_18.default = true;
    pulldown_cmark_0_0_15.default = (f.pulldown_cmark_0_0_15.default or true);
    pulldown_cmark_0_0_15.getopts =
      (f.pulldown_cmark_0_0_15.getopts or false) ||
      (f.pulldown_cmark_0_0_15.default or false) ||
      (pulldown_cmark_0_0_15.default or false);
  }) [ bitflags_0_9_1_features getopts_0_2_18_features ];
  quickcheck_0_3_2 = { features?(quickcheck_0_3_2_features {}) }: quickcheck_0_3_2_ {
    dependencies = mapFeatures features ([ rand_0_3_22 ]
      ++ (if features.quickcheck_0_3_2.env_logger or false then [ env_logger_0_3_5 ] else [])
      ++ (if features.quickcheck_0_3_2.log or false then [ log_0_3_9 ] else []));
    features = mkFeatures (features.quickcheck_0_3_2 or {});
  };
  quickcheck_0_3_2_features = f: updateFeatures f (rec {
    env_logger_0_3_5.default = true;
    log_0_3_9.default = true;
    quickcheck_0_3_2.default = (f.quickcheck_0_3_2.default or true);
    quickcheck_0_3_2.env_logger =
      (f.quickcheck_0_3_2.env_logger or false) ||
      (f.quickcheck_0_3_2.use_logging or false) ||
      (quickcheck_0_3_2.use_logging or false);
    quickcheck_0_3_2.log =
      (f.quickcheck_0_3_2.log or false) ||
      (f.quickcheck_0_3_2.use_logging or false) ||
      (quickcheck_0_3_2.use_logging or false);
    quickcheck_0_3_2.use_logging =
      (f.quickcheck_0_3_2.use_logging or false) ||
      (f.quickcheck_0_3_2.default or false) ||
      (quickcheck_0_3_2.default or false);
    rand_0_3_22.default = true;
  }) [ env_logger_0_3_5_features log_0_3_9_features rand_0_3_22_features ];
  quine_mc_cluskey_0_2_4 = { features?(quine_mc_cluskey_0_2_4_features {}) }: quine_mc_cluskey_0_2_4_ {
    dependencies = mapFeatures features ([]);
  };
  quine_mc_cluskey_0_2_4_features = f: updateFeatures f (rec {
    quine_mc_cluskey_0_2_4.default = (f.quine_mc_cluskey_0_2_4.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_6_4 = { features?(quote_0_6_4_features {}) }: quote_0_6_4_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_9 ]);
    features = mkFeatures (features.quote_0_6_4 or {});
  };
  quote_0_6_4_features = f: updateFeatures f (rec {
    proc_macro2_0_4_9."proc-macro" =
      (f.proc_macro2_0_4_9."proc-macro" or false) ||
      (quote_0_6_4."proc-macro" or false) ||
      (f.quote_0_6_4."proc-macro" or false);
    proc_macro2_0_4_9.default = (f.proc_macro2_0_4_9.default or false);
    quote_0_6_4."proc-macro" =
      (f.quote_0_6_4."proc-macro" or false) ||
      (f.quote_0_6_4.default or false) ||
      (quote_0_6_4.default or false);
    quote_0_6_4.default = (f.quote_0_6_4.default or true);
  }) [ proc_macro2_0_4_9_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_42 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_3_22."i128_support" =
      (f.rand_0_3_22."i128_support" or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_4_2.default = true;
  }) [ libc_0_2_42_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_42 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_4_2."i128_support" =
      (f.rand_0_4_2."i128_support" or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_42_features winapi_0_3_5_features ];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_40 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_40_features ];
  regex_0_1_80 = { features?(regex_0_1_80_features {}) }: regex_0_1_80_ {
    dependencies = mapFeatures features ([ aho_corasick_0_5_3 memchr_0_1_11 regex_syntax_0_3_9 thread_local_0_2_7 utf8_ranges_0_1_3 ]);
    features = mkFeatures (features.regex_0_1_80 or {});
  };
  regex_0_1_80_features = f: updateFeatures f (rec {
    aho_corasick_0_5_3.default = true;
    memchr_0_1_11.default = true;
    regex_0_1_80.default = (f.regex_0_1_80.default or true);
    regex_0_1_80.simd =
      (f.regex_0_1_80.simd or false) ||
      (f.regex_0_1_80."simd-accel" or false) ||
      (regex_0_1_80."simd-accel" or false);
    regex_syntax_0_3_9.default = true;
    thread_local_0_2_7.default = true;
    utf8_ranges_0_1_3.default = true;
  }) [ aho_corasick_0_5_3_features memchr_0_1_11_features regex_syntax_0_3_9_features thread_local_0_2_7_features utf8_ranges_0_1_3_features ];
  regex_0_2_11 = { features?(regex_0_2_11_features {}) }: regex_0_2_11_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_6 memchr_2_0_1 regex_syntax_0_5_6 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_11 or {});
  };
  regex_0_2_11_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_11.default = (f.regex_0_2_11.default or true);
    regex_0_2_11.pattern =
      (f.regex_0_2_11.pattern or false) ||
      (f.regex_0_2_11.unstable or false) ||
      (regex_0_2_11.unstable or false);
    regex_syntax_0_5_6.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_6_features memchr_2_0_1_features regex_syntax_0_5_6_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_3_9 = { features?(regex_syntax_0_3_9_features {}) }: regex_syntax_0_3_9_ {};
  regex_syntax_0_3_9_features = f: updateFeatures f (rec {
    regex_syntax_0_3_9.default = (f.regex_syntax_0_3_9.default or true);
  }) [];
  regex_syntax_0_4_2 = { features?(regex_syntax_0_4_2_features {}) }: regex_syntax_0_4_2_ {};
  regex_syntax_0_4_2_features = f: updateFeatures f (rec {
    regex_syntax_0_4_2.default = (f.regex_syntax_0_4_2.default or true);
  }) [];
  regex_syntax_0_5_6 = { features?(regex_syntax_0_5_6_features {}) }: regex_syntax_0_5_6_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_6_features = f: updateFeatures f (rec {
    regex_syntax_0_5_6.default = (f.regex_syntax_0_5_6.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ winapi_0_3_5_features ];
  rustc_demangle_0_1_9 = { features?(rustc_demangle_0_1_9_features {}) }: rustc_demangle_0_1_9_ {};
  rustc_demangle_0_1_9_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_9.default = (f.rustc_demangle_0_1_9.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  semver_0_6_0 = { features?(semver_0_6_0_features {}) }: semver_0_6_0_ {
    dependencies = mapFeatures features ([ semver_parser_0_7_0 ]);
    features = mkFeatures (features.semver_0_6_0 or {});
  };
  semver_0_6_0_features = f: updateFeatures f (rec {
    semver_0_6_0.default = (f.semver_0_6_0.default or true);
    semver_parser_0_7_0.default = true;
  }) [ semver_parser_0_7_0_features ];
  semver_parser_0_7_0 = { features?(semver_parser_0_7_0_features {}) }: semver_parser_0_7_0_ {};
  semver_parser_0_7_0_features = f: updateFeatures f (rec {
    semver_parser_0_7_0.default = (f.semver_parser_0_7_0.default or true);
  }) [];
  serde_1_0_70 = { features?(serde_1_0_70_features {}) }: serde_1_0_70_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.serde_1_0_70.serde_derive or false then [ serde_derive_1_0_70 ] else []));
    features = mkFeatures (features.serde_1_0_70 or {});
  };
  serde_1_0_70_features = f: updateFeatures f (rec {
    serde_1_0_70.default = (f.serde_1_0_70.default or true);
    serde_1_0_70.serde_derive =
      (f.serde_1_0_70.serde_derive or false) ||
      (f.serde_1_0_70.derive or false) ||
      (serde_1_0_70.derive or false);
    serde_1_0_70.std =
      (f.serde_1_0_70.std or false) ||
      (f.serde_1_0_70.default or false) ||
      (serde_1_0_70.default or false);
    serde_1_0_70.unstable =
      (f.serde_1_0_70.unstable or false) ||
      (f.serde_1_0_70.alloc or false) ||
      (serde_1_0_70.alloc or false);
    serde_derive_1_0_70.default = true;
  }) [ serde_derive_1_0_70_features ];
  serde_derive_1_0_70 = { features?(serde_derive_1_0_70_features {}) }: serde_derive_1_0_70_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_9 quote_0_6_4 syn_0_14_5 ]);
    features = mkFeatures (features.serde_derive_1_0_70 or {});
  };
  serde_derive_1_0_70_features = f: updateFeatures f (rec {
    proc_macro2_0_4_9.default = true;
    quote_0_6_4.default = true;
    serde_derive_1_0_70.default = (f.serde_derive_1_0_70.default or true);
    syn_0_14_5.default = true;
    syn_0_14_5.visit = true;
  }) [ proc_macro2_0_4_9_features quote_0_6_4_features syn_0_14_5_features ];
  serde_json_1_0_24 = { features?(serde_json_1_0_24_features {}) }: serde_json_1_0_24_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_4_2 serde_1_0_70 ]);
    features = mkFeatures (features.serde_json_1_0_24 or {});
  };
  serde_json_1_0_24_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_4_2.default = true;
    serde_1_0_70.default = true;
    serde_json_1_0_24.default = (f.serde_json_1_0_24.default or true);
    serde_json_1_0_24.indexmap =
      (f.serde_json_1_0_24.indexmap or false) ||
      (f.serde_json_1_0_24.preserve_order or false) ||
      (serde_json_1_0_24.preserve_order or false);
  }) [ dtoa_0_4_3_features itoa_0_4_2_features serde_1_0_70_features ];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11."unicode-xid" or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11."unicode-xid" =
      (f.syn_0_11_11."unicode-xid" or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_14_5 = { features?(syn_0_14_5_features {}) }: syn_0_14_5_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_9 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_5.quote or false then [ quote_0_6_4 ] else []));
    features = mkFeatures (features.syn_0_14_5 or {});
  };
  syn_0_14_5_features = f: updateFeatures f (rec {
    proc_macro2_0_4_9."proc-macro" =
      (f.proc_macro2_0_4_9."proc-macro" or false) ||
      (syn_0_14_5."proc-macro" or false) ||
      (f.syn_0_14_5."proc-macro" or false);
    proc_macro2_0_4_9.default = (f.proc_macro2_0_4_9.default or false);
    quote_0_6_4."proc-macro" =
      (f.quote_0_6_4."proc-macro" or false) ||
      (syn_0_14_5."proc-macro" or false) ||
      (f.syn_0_14_5."proc-macro" or false);
    quote_0_6_4.default = (f.quote_0_6_4.default or false);
    syn_0_14_5."clone-impls" =
      (f.syn_0_14_5."clone-impls" or false) ||
      (f.syn_0_14_5.default or false) ||
      (syn_0_14_5.default or false);
    syn_0_14_5."proc-macro" =
      (f.syn_0_14_5."proc-macro" or false) ||
      (f.syn_0_14_5.default or false) ||
      (syn_0_14_5.default or false);
    syn_0_14_5.default = (f.syn_0_14_5.default or true);
    syn_0_14_5.derive =
      (f.syn_0_14_5.derive or false) ||
      (f.syn_0_14_5.default or false) ||
      (syn_0_14_5.default or false);
    syn_0_14_5.parsing =
      (f.syn_0_14_5.parsing or false) ||
      (f.syn_0_14_5.default or false) ||
      (syn_0_14_5.default or false);
    syn_0_14_5.printing =
      (f.syn_0_14_5.printing or false) ||
      (f.syn_0_14_5.default or false) ||
      (syn_0_14_5.default or false);
    syn_0_14_5.quote =
      (f.syn_0_14_5.quote or false) ||
      (f.syn_0_14_5.printing or false) ||
      (syn_0_14_5.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_9_features quote_0_6_4_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_1_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_42_features redox_syscall_0_1_40_features redox_termios_0_1_1_features ];
  textwrap_0_10_0 = { features?(textwrap_0_10_0_features {}) }: textwrap_0_10_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  textwrap_0_10_0_features = f: updateFeatures f (rec {
    textwrap_0_10_0.default = (f.textwrap_0_10_0.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  thread_id_2_0_0 = { features?(thread_id_2_0_0_features {}) }: thread_id_2_0_0_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 libc_0_2_42 ]);
  };
  thread_id_2_0_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_42.default = true;
    thread_id_2_0_0.default = (f.thread_id_2_0_0.default or true);
  }) [ kernel32_sys_0_2_2_features libc_0_2_42_features ];
  thread_local_0_2_7 = { features?(thread_local_0_2_7_features {}) }: thread_local_0_2_7_ {
    dependencies = mapFeatures features ([ thread_id_2_0_0 ]);
  };
  thread_local_0_2_7_features = f: updateFeatures f (rec {
    thread_id_2_0_0.default = true;
    thread_local_0_2_7.default = (f.thread_local_0_2_7.default or true);
  }) [ thread_id_2_0_0_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_2 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_2.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_2_features unreachable_1_0_0_features ];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntdef = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
  }) [ libc_0_2_42_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  toml_0_4_6 = { features?(toml_0_4_6_features {}) }: toml_0_4_6_ {
    dependencies = mapFeatures features ([ serde_1_0_70 ]);
  };
  toml_0_4_6_features = f: updateFeatures f (rec {
    serde_1_0_70.default = true;
    toml_0_4_6.default = (f.toml_0_4_6.default or true);
  }) [ serde_1_0_70_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_7 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_7.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_7_features ];
  unicode_normalization_0_1_7 = { features?(unicode_normalization_0_1_7_features {}) }: unicode_normalization_0_1_7_ {};
  unicode_normalization_0_1_7_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_7.default = (f.unicode_normalization_0_1_7.default or true);
  }) [];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  url_1_7_1 = { features?(url_1_7_1_features {}) }: url_1_7_1_ {
    dependencies = mapFeatures features ([ idna_0_1_5 matches_0_1_7 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_1 or {});
  };
  url_1_7_1_features = f: updateFeatures f (rec {
    idna_0_1_5.default = true;
    matches_0_1_7.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_1.default = (f.url_1_7_1.default or true);
    url_1_7_1.encoding =
      (f.url_1_7_1.encoding or false) ||
      (f.url_1_7_1.query_encoding or false) ||
      (url_1_7_1.query_encoding or false);
    url_1_7_1.heapsize =
      (f.url_1_7_1.heapsize or false) ||
      (f.url_1_7_1.heap_size or false) ||
      (url_1_7_1.heap_size or false);
  }) [ idna_0_1_5_features matches_0_1_7_features percent_encoding_1_0_1_features ];
  utf8_ranges_0_1_3 = { features?(utf8_ranges_0_1_3_features {}) }: utf8_ranges_0_1_3_ {};
  utf8_ranges_0_1_3_features = f: updateFeatures f (rec {
    utf8_ranges_0_1_3.default = (f.utf8_ranges_0_1_3.default or true);
  }) [];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_5_1 = { features?(uuid_0_5_1_features {}) }: uuid_0_5_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.uuid_0_5_1 or {});
  };
  uuid_0_5_1_features = f: updateFeatures f (rec {
    uuid_0_5_1."md5" =
      (f.uuid_0_5_1."md5" or false) ||
      (f.uuid_0_5_1."v3" or false) ||
      (uuid_0_5_1."v3" or false);
    uuid_0_5_1."sha1" =
      (f.uuid_0_5_1."sha1" or false) ||
      (f.uuid_0_5_1."v5" or false) ||
      (uuid_0_5_1."v5" or false);
    uuid_0_5_1.default = (f.uuid_0_5_1.default or true);
    uuid_0_5_1.rand =
      (f.uuid_0_5_1.rand or false) ||
      (f.uuid_0_5_1."v1" or false) ||
      (uuid_0_5_1."v1" or false) ||
      (f.uuid_0_5_1."v4" or false) ||
      (uuid_0_5_1."v4" or false);
  }) [];
  vcpkg_0_2_4 = { features?(vcpkg_0_2_4_features {}) }: vcpkg_0_2_4_ {};
  vcpkg_0_2_4_features = f: updateFeatures f (rec {
    vcpkg_0_2_4.default = (f.vcpkg_0_2_4.default or true);
  }) [];
  vec_map_0_8_1 = { features?(vec_map_0_8_1_features {}) }: vec_map_0_8_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_1 or {});
  };
  vec_map_0_8_1_features = f: updateFeatures f (rec {
    vec_map_0_8_1.default = (f.vec_map_0_8_1.default or true);
    vec_map_0_8_1.serde =
      (f.vec_map_0_8_1.serde or false) ||
      (f.vec_map_0_8_1.eders or false) ||
      (vec_map_0_8_1.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_5 = { features?(winapi_0_3_5_features {}) }: winapi_0_3_5_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_5 or {});
  };
  winapi_0_3_5_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = (f.winapi_0_3_5.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
}
