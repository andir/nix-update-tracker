# Generated by carnix 0.7.2: carnix nix --src .
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  nix_vuln_scanner = f: nix_vuln_scanner_0_1_0 { features = nix_vuln_scanner_0_1_0_features { nix_vuln_scanner_0_1_0 = f; }; };
  __all = [ (nix_vuln_scanner {}) ];
  actix_0_7_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "actix";
    version = "0.7.4";
    authors = [ "Nikolay Kim <fafhrd91@gmail.com>" ];
    sha256 = "0w964rr94g7libiigp15rxrjsk0d56z1qi0viklfcixbrjlrirq2";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  actix_web_0_7_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "actix-web";
    version = "0.7.5";
    authors = [ "Nikolay Kim <fafhrd91@gmail.com>" ];
    sha256 = "0cknrpljrqmaz9kny78p694ap0s38y42pvlv1iyhpl9my2sa42x4";
    libPath = "src/lib.rs";
    libName = "actix_web";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  actix_derive_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "actix_derive";
    version = "0.3.0";
    authors = [ "Callym <hi@callym.com>" "Nikolay Kim <fafhrd91@gmail.com>" ];
    sha256 = "00ksax9ggfn6cfamp4zxmayrf2x81mwdpdgj1i2pnxw4q8x9gh3l";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.3";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "1z3mvjgw02mbqk98kizzibrca01d5wfkpazsrp3vkkv3i56pn6fb";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.8";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "04bz5m32ykyn946iwxgbrl8nwca7ssxsqma140hgmkchaay80nfr";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  alloc_no_stdlib_1_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "alloc-no-stdlib";
    version = "1.3.0";
    authors = [ "Daniel Reiter Horn <danielrh@dropbox.com>" ];
    sha256 = "1jcp27pzmqdszgp80y484g4kwbjbg7x8a589drcwbxg0i8xwkir9";
    crateBin = [ {  name = "example"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.11";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.2.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "12bv0zibls8wckz082jnky2ixykhixc7f72n652nd7l3ljlmkzim";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "137pjkcn89b7fqk78w65ggj92pynmf1hkr1sjz53aga4b50lkmwm";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.24";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "15d6jlknykiijcin3vqbx33760w24ss5qw3l1xd3hms5k4vc8305";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.2";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0g4xxl8jhwjhvr69qlxdmbzd521xcn5j67lhkr20nh7ajvl6k0l1";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.4";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1g1wmz2001qmfrd37dnd5qiss5njrw26aywmg6yhkmkbyrhjxb08";
    inherit dependencies buildDependencies features;
  };
  brotli_2_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "brotli";
    version = "2.5.0";
    authors = [ "Daniel Reiter Horn <danielrh@dropbox.com>" "The Brotli Authors" ];
    sha256 = "1ynw4hkdwnp0kj30p86ls44ahv4s99258s019bqrq4mya8hlsb5b";
    crateBin = [ {  name = "brotli"; } ];
    inherit dependencies buildDependencies features;
  };
  brotli_decompressor_1_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "brotli-decompressor";
    version = "1.3.1";
    authors = [ "Daniel Reiter Horn <danielrh@dropbox.com>" "The Brotli Authors" ];
    sha256 = "022g69q1xzwdj0130qm3fa4qwpn4q1jx3lc8yz0v0v201p7bm8fb";
    crateBin = [ {  name = "brotli-decompressor"; } ];
    inherit dependencies buildDependencies features;
  };
  brotli_sys_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "brotli-sys";
    version = "0.3.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0b68xckd06a5gvdykimgr5f0f2whrhj0lwqq6scy0viaargqkdnl";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  brotli2_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "brotli2";
    version = "0.3.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1daqrhn50rr8k03h7dd2zkjc0qn2c45q6hrmi642fnz0y5rfwm5y";
    inherit dependencies buildDependencies features;
  };
  build_const_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "build_const";
    version = "0.2.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "15249xzi3qlm72p4glxgavwyq70fx2sp4df6ii0sdlrixrrp77pl";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "12p5ms2jsqr5l1d3fskpqzjvnn4b41pzwbjbz9zfaj22ndhkk87d";
    inherit dependencies buildDependencies features;
  };
  bytes_0_4_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bytes";
    version = "0.4.10";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0g7c9qc6g5vjajha0ykxv63fmpg39i9w204j6pc1lknr99i7w19a";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1zlh26mrrqlwb18ndzn8gpinfnvqw8qwkqs264s068y5lxrkdhs7";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1i0w5v51fxnlfsfs9asrnx5bs2di4hcq363gbaw39wya3cmw6vky";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.6";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "0cxgqgf4lknsii1k806dpmzapi2zccjpa350ns5wpb568mij096x";
    inherit dependencies buildDependencies features;
  };
  clap_2_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.32.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1hdjf0janvpjkwrjdjx1mm2aayzr54k72w6mriyr0n5anjkcj1lx";
    inherit dependencies buildDependencies features;
  };
  cloudabi_0_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cloudabi";
    version = "0.0.3";
    authors = [ "Nuxi (https://nuxi.nl/) and contributors" ];
    sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
    libPath = "cloudabi.rs";
    inherit dependencies buildDependencies features;
  };
  cmake_0_1_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cmake";
    version = "0.1.33";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0jbhb365f7wamy2qdvfb7mjj4fi34b0khzkfy2h0papkjwbj1mip";
    inherit dependencies buildDependencies features;
  };
  cookie_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cookie";
    version = "0.11.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0a2mwk3fzm16nsmlpmh4jxkb42p8yvxkwx6a4r5cpa14na98ix16";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  crc_1_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crc";
    version = "1.8.1";
    authors = [ "Rui Hu <code@mrhooray.com>" ];
    sha256 = "00m9jjqrddp3bqyanvyxv0hf6s56bx1wy51vcdcxg4n2jdhg109s";
    inherit dependencies buildDependencies features;
  };
  crossbeam_channel_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-channel";
    version = "0.2.4";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1yy8wrjhzs16i8xzpy9jbachnws7nma2nm0bxvd2j2iczs709wc2";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.2.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.6.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "00n2179ci0w3aw1k579y3g13rhckl631m41c25q689li8i36416m";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.3.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1ljrrpvalabi3r2nnpcz7rqkbl2ydmd0mrrr2fv335f7d46xgfxa";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.5.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1xv8ggicdjwsqsbawflyjwlq5nj4xks96yzp5w3sw9qby6l16wnd";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.5.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1sx0s9lnv9ja3q9l649w7rn23d7mgvb3cl08zx69vp9x4rdpxdpn";
    inherit dependencies buildDependencies features;
  };
  curl_sys_0_4_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "curl-sys";
    version = "0.4.8";
    authors = [ "Carl Lerche <me@carllerche.com>" "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1sgcj6j6sy0srvk4crb9g1zis3m0r55ppsyjwmw888755cr2s3n1";
    libPath = "lib.rs";
    libName = "curl_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  dbghelp_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbghelp-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0ylpi3bbiy233m57hnisn1df1v0lbl7nsxn34b0anzsgg440hqpq";
    libName = "dbghelp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  diesel_1_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel";
    version = "1.3.2";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "03xf0va6z10ki84g2b8n2asw1hp2vssxvdcz9r64r0f2799jwc8z";
    inherit dependencies buildDependencies features;
  };
  diesel_derives_1_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_derives";
    version = "1.3.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0iig5nfd85w2x23v8dh3w80k66wrwixxfj4kxinsdaab3b9cds0m";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1xysdxdm24sk5ysim7lps4r2qaxfnj0sbakhmps4d42yssx30cw8";
    inherit dependencies buildDependencies features;
  };
  either_1_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.5.0";
    authors = [ "bluss" ];
    sha256 = "1f7kl2ln01y02m8fpd2zrdjiwqmgfvl9nxxrfry3k19d1gd2bsvz";
    inherit dependencies buildDependencies features;
  };
  encoding_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding";
    version = "0.2.33";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "16ls6avhv5ll28zajl5q1jbiz1g80c4ygnw13zzqmij14wsp5329";
    inherit dependencies buildDependencies features;
  };
  encoding_index_japanese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-japanese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1pmfaabps0x6v6cd4fbk9ssykhkmc799dma2y78fhk7gvyr5gyl4";
    libPath = "lib.rs";
    libName = "encoding_index_japanese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_korean_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-korean";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1b756n7gcilkx07y7zjrikcg0b8v8yd6mw8w01ji8sp3k1cabcf2";
    libPath = "lib.rs";
    libName = "encoding_index_korean";
    inherit dependencies buildDependencies features;
  };
  encoding_index_simpchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-simpchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0rb4xd8cqymhqffqqxdk18mf9n354vs50ar66jrysb1z6ymcvvpy";
    libPath = "lib.rs";
    libName = "encoding_index_simpchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_singlebyte_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-singlebyte";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "07df3jrfwfmzi2s352lvcpvy5dqpy2s45d2xx2dz1x7zh3q5284d";
    libPath = "lib.rs";
    libName = "encoding_index_singlebyte";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tradchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-tradchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0lb12nbv29cy41gx26yz3v4kfi8h1xbn1ppja8szgqi2zm1wlywn";
    libPath = "lib.rs";
    libName = "encoding_index_tradchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tests_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_index_tests";
    version = "0.1.4";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0z09kwh4z76q00cfr081rgjbnai4s2maq2vk88lgrq9d6bkf93f6";
    libPath = "index_tests.rs";
    inherit dependencies buildDependencies features;
  };
  encoding_rs_0_8_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_rs";
    version = "0.8.6";
    authors = [ "Henri Sivonen <hsivonen@hsivonen.fi>" ];
    sha256 = "04hwjxskd0z4lbdbhmaz4s0wxg9xd6kjday448q6hny330b4005k";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.1.12";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0pc1b8zbmim3qhlb0wfpxbvjhpq411rs0l9jzxplyr7j0b0wgbg1";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.8.1";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "0jaipqr2l2v84raynz3bvb0vnzysk7515j3mnb9i7g1qqprg2waq";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_12_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.12.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "1m6wk1r6wqg1mn69bxxvk5k081cb4xy6bfhsxb99rv408x9wjcnl";
    inherit dependencies buildDependencies features;
  };
  failure_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure";
    version = "0.1.2";
    authors = [ "Without Boats <boats@mozilla.com>" ];
    sha256 = "0xlvmy42sjv63pgbbb0l9bdmvanlchyzbyd9mv1fs0yhw8np73x1";
    inherit dependencies buildDependencies features;
  };
  failure_derive_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure_derive";
    version = "0.1.2";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "16zw2n9rmjisk8n4rxxqm7ffmxgd5dspf04b97lh7ns1nypk54w3";
    procMacro = true;
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  fern_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fern";
    version = "0.5.6";
    authors = [ "David Ross <daboross@daboross.net>" ];
    sha256 = "0vf9brd013qmgrsj6q90i64wcihywxzy79i1ill2ljh6g2shfis6";
    inherit dependencies buildDependencies features;
  };
  flate2_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "flate2";
    version = "1.0.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1rky6f7r5whg39gy9z70plrgirlj17zfrjg41dwknjc3z6j6y26l";
    inherit dependencies buildDependencies features;
  };
  fnv_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fnv";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fs2_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fs2";
    version = "0.4.3";
    authors = [ "Dan Burkert <dan@danburkert.com>" ];
    sha256 = "1crj36rhhpk3qby9yj7r77w7sld0mzab2yicmphbdkfymbmp3ldp";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "075s7sv1iqzf2r3lvb4hk81k5c9xzfcyb8q92h2s35fnypxyqd21";
    inherit dependencies buildDependencies features;
  };
  futures_cpupool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-cpupool";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
    inherit dependencies buildDependencies features;
  };
  git2_0_7_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "git2";
    version = "0.7.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0niyjy68vb790x5hl72qbpp1145xfbfrlf0rgmc8fq4qwbz4p5pb";
    inherit dependencies buildDependencies features;
  };
  h2_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "h2";
    version = "0.1.12";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0l2afllhl1hp133v7x0zlvnf7yhdx89z92cc54wyrphjclwwlcjr";
    inherit dependencies buildDependencies features;
  };
  hostname_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hostname";
    version = "0.1.5";
    authors = [ "fengcen <fengcen.love@gmail.com>" ];
    sha256 = "1383lcnzmiqm0bz0i0h33rvbl5ma125ca5lfnx4qzx1dzdz0wl2a";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  htmlescape_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "htmlescape";
    version = "0.3.1";
    authors = [ "Viktor Dahl <pazaconyoman@gmail.com>" ];
    sha256 = "108bqh02yy09mr69957q4m5zf4xnxi1mam59r1gzfwmms8lxjf0z";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  http_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "http";
    version = "0.1.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Carl Lerche <me@carllerche.com>" "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1rvqbrma2biy3bg52m5m6frxcrlpw9rdqi4mv514ljnhmn0f5hbh";
    inherit dependencies buildDependencies features;
  };
  httparse_1_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.3.2";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1mm10m2hv1inxzzvm85s6fdmwl9a3q9vik0nzh5qrx2hx5x8fcwl";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  hyper_0_11_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.11.27";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0q5as4lhvh31bzk4qm7j84snrmxyxyaqk040rfk72b42dn98mryi";
    inherit dependencies buildDependencies features;
  };
  hyper_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-tls";
    version = "0.1.4";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1242mxvkgkm936fcsfcmmwwb5blclf0xld4d6gqzbvhlfc9yhnl8";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.5";
    authors = [ "The rust-url developers" ];
    sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
    inherit dependencies buildDependencies features;
  };
  indexmap_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "indexmap";
    version = "1.0.1";
    authors = [ "bluss" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "10ak26zp3i5iyb03l99312q66jl20qs45cm5jnghm9ymdhspw3r4";
    inherit dependencies buildDependencies features;
  };
  iovec_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iovec";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0vjymmb7wj4v4kza5jjn48fcdb85j3k37y7msjl3ifz0p9yiyp2r";
    inherit dependencies buildDependencies features;
  };
  ipconfig_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ipconfig";
    version = "0.1.7";
    authors = [ "Liran Ringel <liranringel@gmail.com>" ];
    sha256 = "0ivph9631x24cgbfjw6ssnd53ldqi1375lk3kiza0hnwzf6c1kdk";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.8";
    authors = [ "bluss" ];
    sha256 = "0ib30cd7d1icjxsa13mji1gry3grp72kx8p33yd84mphdbc3d357";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "193a744yd74rmk13hl8xvd9p2hqhdkyf8xkvi1mxm5s10bby0h8v";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.1.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1da2b6nxfc2l547qgl9kd1pn9sh1af96a6qx6xw8xdnv6hh5fag0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazycell_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "0.6.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1ax148clinbvp6alxcih8s5i2bg3mc5mi69n3hvzvzbwlm6k532r";
    inherit dependencies buildDependencies features;
  };
  lazycell_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "1.0.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1q5a72sjpy7ylirq7i9csrd7ggzm0cllwlcdsj5iarip6lmhvvrx";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0pshydmsq71kl9276zc2928ld50sp524ixcqkcqsgq410dx6c50b";
    inherit dependencies buildDependencies features;
  };
  libflate_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libflate";
    version = "0.1.16";
    authors = [ "Takeru Ohta <phjgt308@gmail.com>" ];
    sha256 = "0l15g61h10bznxsjirwq9c43w17mjpqx6wz0357agskardkdh14n";
    inherit dependencies buildDependencies features;
  };
  libgit2_sys_0_7_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libgit2-sys";
    version = "0.7.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "170w1fxr24zaa9fp6shrplzw2c5312jq5ffl9dk935hgmvxag1wv";
    libPath = "lib.rs";
    libName = "libgit2_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libsqlite3_sys_0_9_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libsqlite3-sys";
    version = "0.9.3";
    authors = [ "John Gallagher <jgallagher@bignerdranch.com>" ];
    sha256 = "128bv2y342iksv693bffvybr3zzi04vd8p0307zi9wixbdxyp021";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libssh2_sys_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libssh2-sys";
    version = "0.2.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1zn1nka2hgg968bs44ya2cs8j2qg63zv3bd044xm8bpa5z1n2c40";
    libPath = "lib.rs";
    libName = "libssh2_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libz_sys_1_0_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libz-sys";
    version = "1.0.20";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "05nxpgp9zlilwyp4zcmrm90fhpp84q5zpyqi94m3a8acy99f6pw1";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.4.2";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "04da208h6jb69f46j37jnvsw2i1wqplglp4d61csqcrhh83avbgl";
    inherit dependencies buildDependencies features;
  };
  lock_api_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lock_api";
    version = "0.1.3";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "19m77g5pbpshd27srm4ppwxpddvdy15vmxpmnjd6afgj4scsiz8l";
    inherit dependencies buildDependencies features;
  };
  log_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hdcj17al94ga90q7jx2y1rmxi68n3akra1awv3hr3s9b9zipgq6";
    inherit dependencies buildDependencies features;
  };
  lru_cache_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lru-cache";
    version = "0.1.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "1hl6kii1g54sq649gnscv858mmw7a02xj081l4vcgvrswdi2z8fw";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.8";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  md5_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "md5";
    version = "0.3.8";
    authors = [ "Ivan Ukhov <ivan.ukhov@gmail.com>" "Kamal Ahmad <shibe@openmailbox.org>" "Konstantin Stepanov <milezv@gmail.com>" "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>" "Nathan Musoke <nathan.musoke@gmail.com>" "Tony Arcieri <bascule@gmail.com>" "Wim de With <register@dewith.io>" ];
    sha256 = "0ciydcf5y3zmygzschhg4f242p9rf1d75jfj0hay4xjj29l319yd";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "1rjn5bjyn6wia7wm1cm0af5mjrd91sypnmwz5ndq4xnfmx52a67z";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.3.9";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0fns19sr62gqdzw3jy6pwqm1iy1q1ainb6cdvsg0kfwzy7nvyjww";
    inherit dependencies buildDependencies features;
  };
  mime_guess_2_0_0_alpha_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime_guess";
    version = "2.0.0-alpha.6";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "1k2mdq43gi2qr63b7m5zs624rfi40ysk33cay49jlhq97jwnk9db";
    inherit dependencies buildDependencies features;
  };
  miniz_sys_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz-sys";
    version = "0.1.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "11vg6phafxil87nbxgrlhcx5hjr3145wsbwwkfmibvnmzxfdmvln";
    libPath = "lib.rs";
    libName = "miniz_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  mio_0_6_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio";
    version = "0.6.15";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0a93wxsmkh8x38wxivhn6qdj08pj9f0j3y46p4wv3xclbq8i4aaa";
    inherit dependencies buildDependencies features;
  };
  mio_uds_0_6_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio-uds";
    version = "0.6.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1gff9908pvvysv7zgxvyxy7x34fnhs088cr0j8mgwj8j24mswrhm";
    inherit dependencies buildDependencies features;
  };
  miow_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miow";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
    inherit dependencies buildDependencies features;
  };
  native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "native-tls";
    version = "0.1.5";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
    inherit dependencies buildDependencies features;
  };
  net2_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "net2";
    version = "0.2.33";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1qnmajafgybj5wyxz9iffa8x5wgbwd2znfklmhqj7vl6lw1m65mq";
    inherit dependencies buildDependencies features;
  };
  nix_vuln_scanner_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix-vuln-scanner";
    version = "0.1.0";
    authors = [ "Andreas Rammhold <andreas@rammhold.de>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0ql203ca6lzppksy4fsfnpz3kq96vwlwvyn3ahvnd9g6k9f5ncj0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  openat_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openat";
    version = "0.1.16";
    authors = [ "paul@colomiets.name" ];
    sha256 = "12bcllarsyyd3xhn4fb5qx83a4sya2267m4h8pbzc1r9j2yblvca";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_probe_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-probe";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1a89fznx26vvaxyrxdvgf6iwai5xvs6xjvpjin68fgvrslv6n15a";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.35";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0z6lh8pzchqqqahd11f9xx0rz23rqprzlyhhgqfcmn6b97w5qx26";
    build = "build/main.rs";
    inherit dependencies buildDependencies features;
  };
  owning_ref_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "owning_ref";
    version = "0.3.3";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "13ivn0ydc0hf957ix0f5si9nnplzzykbr70hni1qz9m19i9kvmrh";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.6.4";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0qwfysx8zfkj72sfcrqvd6pp7lgjmklyixsi3y0g6xjspw876rax";
    inherit dependencies buildDependencies features;
  };
  parking_lot_core_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot_core";
    version = "0.3.0";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "05qwaxx7sbaxnvlrd9yzhf9w2xgw9mbvbmy5176dpcv2jm6p7ab5";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_0_7_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf";
    version = "0.7.23";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0annmaf9mmm12g2cdwpip32p674pmsf6xpiwa27mz3glmz73y8aq";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_codegen_0_7_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_codegen";
    version = "0.7.23";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0k5ly0qykw56fxd19iy236wzghqdxq9zxnzcg8nm22cfzw4a35n0";
    inherit dependencies buildDependencies features;
  };
  phf_generator_0_7_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_generator";
    version = "0.7.23";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "106cd0bx3jf7mf2gaa8nx62c1las1w95c5gwsd4yqm5lj2rj4mza";
    inherit dependencies buildDependencies features;
  };
  phf_shared_0_7_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_shared";
    version = "0.7.23";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "04gzsq9vg9j8cr39hpkddxb0yqjdknvcpnylw112rqamy7ml4fy1";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.14";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0207fsarrm412j0dh87lfcas72n8mxar7q3mgflsbsrqnb140sv6";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.3.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ixnavxcd6sk1861hjgnfxly7qgq4ch1iplsx0nclvjjkwg39qdc";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.17";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0py0zn1xws3csi3p7nmiqaqdqxkns0vlyiaq6f4rhhvx4ml202w1";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.2";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
    inherit dependencies buildDependencies features;
  };
  quote_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.5.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "062cnp12j09x0z0nj4j5pfh26h35zlrks07asxgqhfhcym1ba595";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.8";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0dq6j23w6pmc4l6v490arixdwypy0b82z76nrzaingqhqri4p3mh";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1644wri45l147822xy7dgdm4k7myxzs66cb795ga0x7dan11ci4f";
    inherit dependencies buildDependencies features;
  };
  rand_0_5_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.5.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0d7pnsh57qxhz1ghrzk113ddkn13kf2g758ffnbxq4nhwjfzhlc9";
    inherit dependencies buildDependencies features;
  };
  rand_core_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand_core";
    version = "0.2.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12mbdma0is3a43s6xkz5g48ndx3zn4hb611gngv1yrbaghpw8nrw";
    inherit dependencies buildDependencies features;
  };
  rayon_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "1.0.2";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "1lg926rxx5g263ym9hzpfkgmrwdd8g1xy6jchb64y4wiw2dpyzph";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rayon_core_1_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon-core";
    version = "1.4.1";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "01xf3mwmmji7yaarrpzpqjhz928ajxkwmjczbwmnpy39y95m4fbn";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "1.0.4";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0nsrn3b6bh9f9s1q6l6p5cbf73wrv1qna5bpp082nqfw9c63wpsd";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.6.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "109426mj7nhwr6szdzbcvn1a8g5zy52f9maqxjd9agm8wg87ylyw";
    inherit dependencies buildDependencies features;
  };
  relay_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "relay";
    version = "0.1.1";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "16csfaslbmj25iaxs88p8wcfh2zfpkh9isg9adid0nxjxvknh07r";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  reqwest_0_8_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "reqwest";
    version = "0.8.8";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0116x2aj1mw8bk4wfid234xbqjc40fni5ay3yn7n5q26p6py4mcn";
    inherit dependencies buildDependencies features;
  };
  resolv_conf_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "resolv-conf";
    version = "0.6.1";
    authors = [ "paul@colomiets.name" ];
    sha256 = "175yx5vb88rvh8fcm1hgqyk2gj12a0wx45cxhyi4g68vikjapfk8";
    libPath = "src/lib.rs";
    libName = "resolv_conf";
    inherit dependencies buildDependencies features;
  };
  ring_0_13_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ring";
    version = "0.13.2";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "0j1g3b5znqyivs9a5r8n1y65sc3jwzapy36sb5626s77r2qvzwpr";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00ma4r9haq0zv5krps617mym6y74056pfcivyld0kpci156vfaax";
    inherit dependencies buildDependencies features;
  };
  ryu_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ryu";
    version = "0.2.6";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1vdh6z4aysc9kiiqhl7vxkqz3fykcnp24kgfizshlwfsz2j0p9dr";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  schannel_0_1_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "schannel";
    version = "0.1.13";
    authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
    sha256 = "033zavvq2k6z5akk38vzaglzbxzljaixgmhj9am27nr21dgaj6b3";
    inherit dependencies buildDependencies features;
  };
  scoped_tls_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped-tls";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0nblksgki698cqsclsnd6f1pq4yy34350dn2slaah9dlmx9z5xla";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
    inherit dependencies buildDependencies features;
  };
  security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework-sys";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_76_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.76";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "036k26s39ckx4iq6hlbpxw71sn7j8ikz662fczr7n3if6xfjp4z8";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_76_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.76";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "153mayfyrp101kpf1ccxljm923j4hr4r0ngxx53ikpxjvb5gz469";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_26_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.26";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0sg6v7d3yb21sxfp8m9zdxbpvqpnjqa74wphn0h5baih1iypyfnf";
    inherit dependencies buildDependencies features;
  };
  serde_urlencoded_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_urlencoded";
    version = "0.5.3";
    authors = [ "Anthony Ramine <n.oxyde@gmail.com>" ];
    sha256 = "0fr4qfwwfva43dzb6di1c9w3alrn6q5r4plpbgplcx052w25dmfs";
    inherit dependencies buildDependencies features;
  };
  sha1_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sha1";
    version = "0.6.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "12cp2b8f3hbwhfpnv1j1afl285xxmmbxh9w4npzvwbdh7xfyww8v";
    inherit dependencies buildDependencies features;
  };
  siphasher_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "siphasher";
    version = "0.2.3";
    authors = [ "Frank Denis <github@pureftpd.org>" ];
    sha256 = "1ganj1grxqnkvv4ds3vby039bm999jrr58nfq2x3kjhzkw2bnqkw";
    inherit dependencies buildDependencies features;
  };
  slab_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.4.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0njmznhcjp4aiznybxm7wacnb4q49ch98wizyf4lpn3rg6sjrak4";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.6.5";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0jx49nb1c91936jaq30axc96wncdp2wdmspf1qc8iv85f1i44vvf";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  socket2_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "socket2";
    version = "0.3.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1a71m20jxmf9kqqinksphc7wj1j7q672q29cpza7p9siyzyfx598";
    inherit dependencies buildDependencies features;
  };
  stable_deref_trait_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stable_deref_trait";
    version = "1.1.1";
    authors = [ "Robert Grosse <n210241048576@gmail.com>" ];
    sha256 = "1xy9slzslrzr31nlnw52sl1d820b09y61b7f13lqgsn8n7y0l4g8";
    inherit dependencies buildDependencies features;
  };
  string_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "string";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1s76nwh2gsv5z1i2ccbk2nw74nz5fcgmx2rwsnvkdfbv43c8xrsq";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_13_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.13.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "06ybhxbyv8zshli47w0ihcnix74d6ss5yic3imns895q8pqgia2k";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.9";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1ia0qbrnqz40s8886b2jpcjiqfbziigd96lqjfin06xk6i28vr7b";
    inherit dependencies buildDependencies features;
  };
  synstructure_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synstructure";
    version = "0.9.0";
    authors = [ "Nika Layzell <nika@thelayzells.com>" ];
    sha256 = "1ipvy750zdyrxn9d60ns5r2niqnv8k3dky5ila725s25gxsxrq19";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.10.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "1s8d5cna12smhgj0x2y1xphklyk2an1yzbadnj89p1vy5vnjpsas";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.6";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
    inherit dependencies buildDependencies features;
  };
  threadpool_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "threadpool";
    version = "1.7.1";
    authors = [ "The Rust Project Developers" "Corey Farwell <coreyf@rwell.org>" "Stefan Schindler <dns2utf8@estada.ch>" ];
    sha256 = "09g715plrn59kasvigqjrjqzcgqnaf6v6pia0xx03f18kvfmkq06";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  tokio_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio";
    version = "0.1.8";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "12vd2lc1w28d21875jff4wy28vghjyfbpyy2ndmd6sbmxgya2vq0";
    inherit dependencies buildDependencies features;
  };
  tokio_codec_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-codec";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" "Bryan Burgers <bryan@burgers.io>" ];
    sha256 = "0347ygccbj05yn9krjk4ifcy5xbv41xk7yyi9cl2cnxrc285xnm7";
    inherit dependencies buildDependencies features;
  };
  tokio_core_0_1_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-core";
    version = "0.1.17";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1j6c5q3aakvb1hjx4r95xwl5ms8rp19k4qsr6v6ngwbvr6f9z6rs";
    inherit dependencies buildDependencies features;
  };
  tokio_current_thread_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-current-thread";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "18ggx8k5yqig8w98ig2fcrh60xzikchqdakiz6pv46rxzk4z1z34";
    inherit dependencies buildDependencies features;
  };
  tokio_executor_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-executor";
    version = "0.1.4";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1mvc7hk1kfh8ms97w8wmxg5wm9lg8vhv6scnsal0f74j3kddv1id";
    inherit dependencies buildDependencies features;
  };
  tokio_fs_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-fs";
    version = "0.1.3";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "10xy1qzc975xp1bjfr62k4rlwm0v9p57mfzfb3yr6zpr4a7hjdbg";
    inherit dependencies buildDependencies features;
  };
  tokio_io_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-io";
    version = "0.1.8";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1463v6yfmcncn565wmdifskrhyndr7dk2zvcc2ghdkhy4n9k4hv0";
    inherit dependencies buildDependencies features;
  };
  tokio_reactor_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-reactor";
    version = "0.1.5";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1s0gb2cwpyrfny48i1zg5wxwqdg79w9yxcfh5z60qiar6pvsrlyp";
    inherit dependencies buildDependencies features;
  };
  tokio_service_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-service";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c85wm5qz9fabg0k6k763j89m43n6max72d3a8sxcs940id6qmih";
    inherit dependencies buildDependencies features;
  };
  tokio_signal_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-signal";
    version = "0.2.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "058s71fqdbxlzjpzgcl3sgpr6b9slqrpinmqjs9izi1cz4zfmd27";
    inherit dependencies buildDependencies features;
  };
  tokio_tcp_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tcp";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0ln4v75m417xs3chbi6ranmdrbl3scdd2hmgq4lvd8hps3gm6y27";
    inherit dependencies buildDependencies features;
  };
  tokio_threadpool_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-threadpool";
    version = "0.1.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0x3yx6fh824l0appbhiaj0wijb41za29qp0snkdh3yn7ivfbv6hw";
    inherit dependencies buildDependencies features;
  };
  tokio_timer_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-timer";
    version = "0.2.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "16l9n6crmin9b706aggfqy52xalhvjbfjl5i623bzl3fra50j5m8";
    inherit dependencies buildDependencies features;
  };
  tokio_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tls";
    version = "0.1.4";
    authors = [ "Carl Lerche <me@carllerche.com>" "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07rwv3q6jbg65ln1ahzb4g648l8lcn4hvc0ax3r12bnsi1py7agp";
    inherit dependencies buildDependencies features;
  };
  tokio_udp_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-udp";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0wl30g8i66pylg1xgaqa5vwjg4hw7m714r6qx7jz0a42dc11ij48";
    inherit dependencies buildDependencies features;
  };
  tokio_uds_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-uds";
    version = "0.2.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c11nx0iijih1ndxw72a7mdhvwbwfac1zm0mp6xj6snpsbfxp3dy";
    inherit dependencies buildDependencies features;
  };
  trust_dns_proto_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "trust-dns-proto";
    version = "0.4.0";
    authors = [ "Benjamin Fry <benjaminfry@me.com>" ];
    sha256 = "1mrdp58g7a94h9zbbqxymbkmhxzslf2nqdc2kf7w7abi8lgvgzjw";
    libPath = "src/lib.rs";
    libName = "trust_dns_proto";
    inherit dependencies buildDependencies features;
  };
  trust_dns_resolver_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "trust-dns-resolver";
    version = "0.9.1";
    authors = [ "Benjamin Fry <benjaminfry@me.com>" ];
    sha256 = "0q4zgic7jaldl08kpnj81mzvsg8hc5wjj4fsssyvs674f849jvrs";
    libPath = "src/lib.rs";
    libName = "trust_dns_resolver";
    inherit dependencies buildDependencies features;
  };
  try_lock_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "try-lock";
    version = "0.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0kfrqrb2xkjig54s3qfy80dpldknr19p3rmp0n82yk5929j879k3";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.7";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  untrusted_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "untrusted";
    version = "0.6.2";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "189ir1h2xgb290bhjchwczr9ygia1f3ipsydf6pwnnb95lb8fihg";
    libPath = "src/untrusted.rs";
    inherit dependencies buildDependencies features;
  };
  url_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.1";
    authors = [ "The rust-url developers" ];
    sha256 = "1l36pbvlwdnh3zqz4wp5n6jg332wkis9pi2g3vy12xr8k4nfyk8i";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1s56ihd2c8ba6191078wivvv59247szaiszrh8x2rxqfsxlfrnpp";
    inherit dependencies buildDependencies features;
  };
  uuid_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.6.5";
    authors = [ "Ashley Mannix<ashleymannix@live.com.au>" "Christopher Armstrong" "Dylan DPC<dylan.dpc@gmail.com>" "Hunar Roop Kahlon<hunar.roop@gmail.com>" ];
    sha256 = "1jy15m4yxxwma0jsy070garhbgfprky23i77rawjkk75vqhnnhlf";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.6";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "1ig6jqpzzl1z9vk4qywgpfr4hfbd8ny8frqsgm3r449wkc4n1i5x";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.4";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "1ghi6bw2qsj53x2vyprs883dbrq8cjzmshlamjsxvmwd2zp13bck";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  want_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "want";
    version = "0.0.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1l1qy4pvg5q71nrzfjldw9xzqhhgicj4slly1bal89hr2aaibpy0";
    inherit dependencies buildDependencies features;
  };
  widestring_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "widestring";
    version = "0.2.2";
    authors = [ "Kathryn Long <squeeself@gmail.com>" ];
    sha256 = "07n6cmk47h8v4bvg7cwawipcn6ijqcfwhf9w6x3r2nw3ghsm2h0a";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.5";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0cfdsxa5yf832r5i2z7dhdvnryyvhfp3nb32gpcaq502zgjdm3w6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winreg_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winreg";
    version = "0.5.1";
    authors = [ "Igor Shaula <gentoo90@gmail.com>" ];
    sha256 = "1l7xs3lnjrnam6d3ms8c9b3xkiv6x6zj5siigr9zcbgw9w3kq5nh";
    inherit dependencies buildDependencies features;
  };
  winutil_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winutil";
    version = "0.1.1";
    authors = [ "Dave Lancaster <lancaster.dave@gmail.com>" ];
    sha256 = "1wvq440hl1v3a65agjbp031gw5jim3qasfvmz703dlz95pbjv45r";
    inherit dependencies buildDependencies features;
  };
  ws2_32_sys_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ws2_32-sys";
    version = "0.2.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
    libName = "ws2_32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  actix_0_7_4 = { features?(actix_0_7_4_features {}) }: actix_0_7_4_ {
    dependencies = mapFeatures features ([ actix_derive_0_3_0 bitflags_1_0_4 bytes_0_4_10 crossbeam_channel_0_2_4 failure_0_1_2 fnv_1_0_6 futures_0_1_23 log_0_4_5 parking_lot_0_6_4 smallvec_0_6_5 tokio_0_1_8 tokio_codec_0_1_0 tokio_executor_0_1_4 tokio_io_0_1_8 tokio_reactor_0_1_5 tokio_tcp_0_1_1 tokio_timer_0_2_6 uuid_0_6_5 ]
      ++ (if features.actix_0_7_4."tokio-signal" or false then [ tokio_signal_0_2_5 ] else [])
      ++ (if features.actix_0_7_4."trust-dns-resolver" or false then [ trust_dns_resolver_0_9_1 ] else []))
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else []);
    features = mkFeatures (features.actix_0_7_4 or {});
  };
  actix_0_7_4_features = f: updateFeatures f (rec {
    actix_0_7_4."tokio-signal" =
      (f.actix_0_7_4."tokio-signal" or false) ||
      (f.actix_0_7_4.signal or false) ||
      (actix_0_7_4.signal or false);
    actix_0_7_4."trust-dns-resolver" =
      (f.actix_0_7_4."trust-dns-resolver" or false) ||
      (f.actix_0_7_4.resolver or false) ||
      (actix_0_7_4.resolver or false);
    actix_0_7_4.default = (f.actix_0_7_4.default or true);
    actix_0_7_4.resolver =
      (f.actix_0_7_4.resolver or false) ||
      (f.actix_0_7_4.default or false) ||
      (actix_0_7_4.default or false);
    actix_0_7_4.signal =
      (f.actix_0_7_4.signal or false) ||
      (f.actix_0_7_4.default or false) ||
      (actix_0_7_4.default or false);
    actix_derive_0_3_0.default = true;
    bitflags_1_0_4.default = true;
    bytes_0_4_10.default = true;
    crossbeam_channel_0_2_4.default = true;
    failure_0_1_2.default = true;
    fnv_1_0_6.default = true;
    futures_0_1_23.default = true;
    libc_0_2_43.default = true;
    log_0_4_5.default = true;
    parking_lot_0_6_4.default = true;
    smallvec_0_6_5.default = true;
    tokio_0_1_8.default = true;
    tokio_codec_0_1_0.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_signal_0_2_5.default = true;
    tokio_tcp_0_1_1.default = true;
    tokio_timer_0_2_6.default = true;
    trust_dns_resolver_0_9_1.default = true;
    uuid_0_6_5."v4" = true;
    uuid_0_6_5.default = true;
  }) [ actix_derive_0_3_0_features bitflags_1_0_4_features bytes_0_4_10_features crossbeam_channel_0_2_4_features failure_0_1_2_features fnv_1_0_6_features futures_0_1_23_features log_0_4_5_features parking_lot_0_6_4_features smallvec_0_6_5_features tokio_0_1_8_features tokio_codec_0_1_0_features tokio_executor_0_1_4_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features tokio_signal_0_2_5_features tokio_tcp_0_1_1_features tokio_timer_0_2_6_features trust_dns_resolver_0_9_1_features uuid_0_6_5_features libc_0_2_43_features ];
  actix_web_0_7_5 = { features?(actix_web_0_7_5_features {}) }: actix_web_0_7_5_ {
    dependencies = mapFeatures features ([ actix_0_7_4 base64_0_9_2 bitflags_1_0_4 byteorder_1_2_6 bytes_0_4_10 cookie_0_11_0 encoding_0_2_33 failure_0_1_2 futures_0_1_23 futures_cpupool_0_1_8 h2_0_1_12 htmlescape_0_3_1 http_0_1_10 httparse_1_3_2 language_tags_0_2_2 lazy_static_1_1_0 lazycell_1_0_0 log_0_4_5 mime_0_3_9 mime_guess_2_0_0_alpha_6 mio_0_6_15 net2_0_2_33 num_cpus_1_8_0 parking_lot_0_6_4 percent_encoding_1_0_1 rand_0_5_5 regex_1_0_4 serde_1_0_76 serde_json_1_0_26 serde_urlencoded_0_5_3 sha1_0_6_0 slab_0_4_1 smallvec_0_6_5 time_0_1_40 tokio_0_1_8 tokio_io_0_1_8 tokio_reactor_0_1_5 tokio_tcp_0_1_1 tokio_timer_0_2_6 url_1_7_1 ]
      ++ (if features.actix_web_0_7_5."brotli2" or false then [ brotli2_0_3_2 ] else [])
      ++ (if features.actix_web_0_7_5."flate2" or false then [ flate2_1_0_2 ] else []));
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.actix_web_0_7_5 or {});
  };
  actix_web_0_7_5_features = f: updateFeatures f (rec {
    actix_0_7_4.default = true;
    actix_web_0_7_5."brotli2" =
      (f.actix_web_0_7_5."brotli2" or false) ||
      (f.actix_web_0_7_5.brotli or false) ||
      (actix_web_0_7_5.brotli or false);
    actix_web_0_7_5."flate2-c" =
      (f.actix_web_0_7_5."flate2-c" or false) ||
      (f.actix_web_0_7_5.default or false) ||
      (actix_web_0_7_5.default or false);
    actix_web_0_7_5."native-tls" =
      (f.actix_web_0_7_5."native-tls" or false) ||
      (f.actix_web_0_7_5.tls or false) ||
      (actix_web_0_7_5.tls or false);
    actix_web_0_7_5."tokio-openssl" =
      (f.actix_web_0_7_5."tokio-openssl" or false) ||
      (f.actix_web_0_7_5.alpn or false) ||
      (actix_web_0_7_5.alpn or false);
    actix_web_0_7_5."tokio-rustls" =
      (f.actix_web_0_7_5."tokio-rustls" or false) ||
      (f.actix_web_0_7_5."rust-tls" or false) ||
      (actix_web_0_7_5."rust-tls" or false);
    actix_web_0_7_5."tokio-tls" =
      (f.actix_web_0_7_5."tokio-tls" or false) ||
      (f.actix_web_0_7_5.tls or false) ||
      (actix_web_0_7_5.tls or false);
    actix_web_0_7_5."tokio-uds" =
      (f.actix_web_0_7_5."tokio-uds" or false) ||
      (f.actix_web_0_7_5.uds or false) ||
      (actix_web_0_7_5.uds or false);
    actix_web_0_7_5."webpki-roots" =
      (f.actix_web_0_7_5."webpki-roots" or false) ||
      (f.actix_web_0_7_5."rust-tls" or false) ||
      (actix_web_0_7_5."rust-tls" or false);
    actix_web_0_7_5.brotli =
      (f.actix_web_0_7_5.brotli or false) ||
      (f.actix_web_0_7_5.default or false) ||
      (actix_web_0_7_5.default or false);
    actix_web_0_7_5.default = (f.actix_web_0_7_5.default or true);
    actix_web_0_7_5.openssl =
      (f.actix_web_0_7_5.openssl or false) ||
      (f.actix_web_0_7_5.alpn or false) ||
      (actix_web_0_7_5.alpn or false);
    actix_web_0_7_5.rustls =
      (f.actix_web_0_7_5.rustls or false) ||
      (f.actix_web_0_7_5."rust-tls" or false) ||
      (actix_web_0_7_5."rust-tls" or false);
    actix_web_0_7_5.session =
      (f.actix_web_0_7_5.session or false) ||
      (f.actix_web_0_7_5.default or false) ||
      (actix_web_0_7_5.default or false);
    actix_web_0_7_5.webpki =
      (f.actix_web_0_7_5.webpki or false) ||
      (f.actix_web_0_7_5."rust-tls" or false) ||
      (actix_web_0_7_5."rust-tls" or false);
    base64_0_9_2.default = true;
    bitflags_1_0_4.default = true;
    brotli2_0_3_2.default = true;
    byteorder_1_2_6.default = true;
    bytes_0_4_10.default = true;
    cookie_0_11_0."percent-encode" = true;
    cookie_0_11_0.default = true;
    cookie_0_11_0.secure =
      (f.cookie_0_11_0.secure or false) ||
      (actix_web_0_7_5.session or false) ||
      (f.actix_web_0_7_5.session or false);
    encoding_0_2_33.default = true;
    failure_0_1_2.default = true;
    flate2_1_0_2."miniz-sys" =
      (f.flate2_1_0_2."miniz-sys" or false) ||
      (actix_web_0_7_5."flate2-c" or false) ||
      (f.actix_web_0_7_5."flate2-c" or false);
    flate2_1_0_2.default = (f.flate2_1_0_2.default or false);
    flate2_1_0_2.rust_backend =
      (f.flate2_1_0_2.rust_backend or false) ||
      (actix_web_0_7_5."flate2-rust" or false) ||
      (f.actix_web_0_7_5."flate2-rust" or false);
    futures_0_1_23.default = true;
    futures_cpupool_0_1_8.default = true;
    h2_0_1_12.default = true;
    htmlescape_0_3_1.default = true;
    http_0_1_10.default = true;
    httparse_1_3_2.default = true;
    language_tags_0_2_2.default = true;
    lazy_static_1_1_0.default = true;
    lazycell_1_0_0.default = true;
    log_0_4_5.default = true;
    mime_0_3_9.default = true;
    mime_guess_2_0_0_alpha_6.default = true;
    mio_0_6_15.default = true;
    net2_0_2_33.default = true;
    num_cpus_1_8_0.default = true;
    parking_lot_0_6_4.default = true;
    percent_encoding_1_0_1.default = true;
    rand_0_5_5.default = true;
    regex_1_0_4.default = true;
    serde_1_0_76.default = true;
    serde_json_1_0_26.default = true;
    serde_urlencoded_0_5_3.default = true;
    sha1_0_6_0.default = true;
    slab_0_4_1.default = true;
    smallvec_0_6_5.default = true;
    time_0_1_40.default = true;
    tokio_0_1_8.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_tcp_0_1_1.default = true;
    tokio_timer_0_2_6.default = true;
    url_1_7_1.default = true;
    url_1_7_1.query_encoding = true;
    version_check_0_1_4.default = true;
  }) [ actix_0_7_4_features base64_0_9_2_features bitflags_1_0_4_features brotli2_0_3_2_features byteorder_1_2_6_features bytes_0_4_10_features cookie_0_11_0_features encoding_0_2_33_features failure_0_1_2_features flate2_1_0_2_features futures_0_1_23_features futures_cpupool_0_1_8_features h2_0_1_12_features htmlescape_0_3_1_features http_0_1_10_features httparse_1_3_2_features language_tags_0_2_2_features lazy_static_1_1_0_features lazycell_1_0_0_features log_0_4_5_features mime_0_3_9_features mime_guess_2_0_0_alpha_6_features mio_0_6_15_features net2_0_2_33_features num_cpus_1_8_0_features parking_lot_0_6_4_features percent_encoding_1_0_1_features rand_0_5_5_features regex_1_0_4_features serde_1_0_76_features serde_json_1_0_26_features serde_urlencoded_0_5_3_features sha1_0_6_0_features slab_0_4_1_features smallvec_0_6_5_features time_0_1_40_features tokio_0_1_8_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features tokio_tcp_0_1_1_features tokio_timer_0_2_6_features url_1_7_1_features version_check_0_1_4_features ];
  actix_derive_0_3_0 = { features?(actix_derive_0_3_0_features {}) }: actix_derive_0_3_0_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 quote_0_6_8 syn_0_14_9 ]);
  };
  actix_derive_0_3_0_features = f: updateFeatures f (rec {
    actix_derive_0_3_0.default = (f.actix_derive_0_3_0.default or true);
    proc_macro2_0_4_17.default = true;
    quote_0_6_8.default = true;
    syn_0_14_9.default = true;
    syn_0_14_9.full = true;
  }) [ proc_macro2_0_4_17_features quote_0_6_8_features syn_0_14_9_features ];
  adler32_1_0_3 = { features?(adler32_1_0_3_features {}) }: adler32_1_0_3_ {};
  adler32_1_0_3_features = f: updateFeatures f (rec {
    adler32_1_0_3.default = (f.adler32_1_0_3.default or true);
  }) [];
  aho_corasick_0_6_8 = { features?(aho_corasick_0_6_8_features {}) }: aho_corasick_0_6_8_ {
    dependencies = mapFeatures features ([ memchr_2_0_2 ]);
  };
  aho_corasick_0_6_8_features = f: updateFeatures f (rec {
    aho_corasick_0_6_8.default = (f.aho_corasick_0_6_8.default or true);
    memchr_2_0_2.default = true;
  }) [ memchr_2_0_2_features ];
  alloc_no_stdlib_1_3_0 = { features?(alloc_no_stdlib_1_3_0_features {}) }: alloc_no_stdlib_1_3_0_ {
    features = mkFeatures (features.alloc_no_stdlib_1_3_0 or {});
  };
  alloc_no_stdlib_1_3_0_features = f: updateFeatures f (rec {
    alloc_no_stdlib_1_3_0.default = (f.alloc_no_stdlib_1_3_0.default or true);
  }) [];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.processenv = true;
  }) [ winapi_0_3_5_features ];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7."serde-1" or false) ||
      (arrayvec_0_4_7."serde-1" or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_11 = { features?(atty_0_2_11_features {}) }: atty_0_2_11_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  atty_0_2_11_features = f: updateFeatures f (rec {
    atty_0_2_11.default = (f.atty_0_2_11.default or true);
    libc_0_2_43.default = (f.libc_0_2_43.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processenv = true;
    winapi_0_3_5.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_43_features winapi_0_3_5_features ];
  backtrace_0_2_3 = { features?(backtrace_0_2_3_features {}) }: backtrace_0_2_3_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 libc_0_2_43 rustc_demangle_0_1_9 ]
      ++ (if features.backtrace_0_2_3."backtrace-sys" or false then [ backtrace_sys_0_1_24 ] else [])
      ++ (if features.backtrace_0_2_3."dbghelp-sys" or false then [ dbghelp_sys_0_2_0 ] else [])
      ++ (if features.backtrace_0_2_3."kernel32-sys" or false then [ kernel32_sys_0_2_2 ] else [])
      ++ (if features.backtrace_0_2_3.winapi or false then [ winapi_0_2_8 ] else []));
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.backtrace_0_2_3 or {});
  };
  backtrace_0_2_3_features = f: updateFeatures f (rec {
    backtrace_0_2_3."backtrace-sys" =
      (f.backtrace_0_2_3."backtrace-sys" or false) ||
      (f.backtrace_0_2_3.libbacktrace or false) ||
      (backtrace_0_2_3.libbacktrace or false);
    backtrace_0_2_3."dbghelp-sys" =
      (f.backtrace_0_2_3."dbghelp-sys" or false) ||
      (f.backtrace_0_2_3.dbghelp or false) ||
      (backtrace_0_2_3.dbghelp or false);
    backtrace_0_2_3."kernel32-sys" =
      (f.backtrace_0_2_3."kernel32-sys" or false) ||
      (f.backtrace_0_2_3.dbghelp or false) ||
      (backtrace_0_2_3.dbghelp or false);
    backtrace_0_2_3."rustc-serialize" =
      (f.backtrace_0_2_3."rustc-serialize" or false) ||
      (f.backtrace_0_2_3."serialize-rustc" or false) ||
      (backtrace_0_2_3."serialize-rustc" or false);
    backtrace_0_2_3.dbghelp =
      (f.backtrace_0_2_3.dbghelp or false) ||
      (f.backtrace_0_2_3.default or false) ||
      (backtrace_0_2_3.default or false);
    backtrace_0_2_3.default = (f.backtrace_0_2_3.default or true);
    backtrace_0_2_3.dladdr =
      (f.backtrace_0_2_3.dladdr or false) ||
      (f.backtrace_0_2_3.default or false) ||
      (backtrace_0_2_3.default or false);
    backtrace_0_2_3.libbacktrace =
      (f.backtrace_0_2_3.libbacktrace or false) ||
      (f.backtrace_0_2_3.default or false) ||
      (backtrace_0_2_3.default or false);
    backtrace_0_2_3.libunwind =
      (f.backtrace_0_2_3.libunwind or false) ||
      (f.backtrace_0_2_3.default or false) ||
      (backtrace_0_2_3.default or false);
    backtrace_0_2_3.serde =
      (f.backtrace_0_2_3.serde or false) ||
      (f.backtrace_0_2_3."serialize-serde" or false) ||
      (backtrace_0_2_3."serialize-serde" or false);
    backtrace_0_2_3.serde_codegen =
      (f.backtrace_0_2_3.serde_codegen or false) ||
      (f.backtrace_0_2_3."serialize-serde" or false) ||
      (backtrace_0_2_3."serialize-serde" or false);
    backtrace_0_2_3.winapi =
      (f.backtrace_0_2_3.winapi or false) ||
      (f.backtrace_0_2_3.dbghelp or false) ||
      (backtrace_0_2_3.dbghelp or false);
    backtrace_sys_0_1_24.default = true;
    cfg_if_0_1_5.default = true;
    dbghelp_sys_0_2_0.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_43.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_2_8.default = true;
  }) [ backtrace_sys_0_1_24_features cfg_if_0_1_5_features dbghelp_sys_0_2_0_features kernel32_sys_0_2_2_features libc_0_2_43_features rustc_demangle_0_1_9_features winapi_0_2_8_features ];
  backtrace_0_3_9 = { features?(backtrace_0_3_9_features {}) }: backtrace_0_3_9_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 rustc_demangle_0_1_9 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9."backtrace-sys" or false then [ backtrace_sys_0_1_24 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.winapi or false then [ winapi_0_3_5 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_9 or {});
  };
  backtrace_0_3_9_features = f: updateFeatures f (rec {
    backtrace_0_3_9."addr2line" =
      (f.backtrace_0_3_9."addr2line" or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9."backtrace-sys" =
      (f.backtrace_0_3_9."backtrace-sys" or false) ||
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (backtrace_0_3_9.libbacktrace or false);
    backtrace_0_3_9."rustc-serialize" =
      (f.backtrace_0_3_9."rustc-serialize" or false) ||
      (f.backtrace_0_3_9."serialize-rustc" or false) ||
      (backtrace_0_3_9."serialize-rustc" or false);
    backtrace_0_3_9.coresymbolication =
      (f.backtrace_0_3_9.coresymbolication or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.dbghelp =
      (f.backtrace_0_3_9.dbghelp or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.default = (f.backtrace_0_3_9.default or true);
    backtrace_0_3_9.dladdr =
      (f.backtrace_0_3_9.dladdr or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.findshlibs =
      (f.backtrace_0_3_9.findshlibs or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.gimli =
      (f.backtrace_0_3_9.gimli or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.libbacktrace =
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.libunwind =
      (f.backtrace_0_3_9.libunwind or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.memmap =
      (f.backtrace_0_3_9.memmap or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.object =
      (f.backtrace_0_3_9.object or false) ||
      (f.backtrace_0_3_9."gimli-symbolize" or false) ||
      (backtrace_0_3_9."gimli-symbolize" or false);
    backtrace_0_3_9.serde =
      (f.backtrace_0_3_9.serde or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.serde_derive =
      (f.backtrace_0_3_9.serde_derive or false) ||
      (f.backtrace_0_3_9."serialize-serde" or false) ||
      (backtrace_0_3_9."serialize-serde" or false);
    backtrace_0_3_9.winapi =
      (f.backtrace_0_3_9.winapi or false) ||
      (f.backtrace_0_3_9.dbghelp or false) ||
      (backtrace_0_3_9.dbghelp or false);
    backtrace_sys_0_1_24.default = true;
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_3_5.dbghelp = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winnt = true;
  }) [ cfg_if_0_1_5_features rustc_demangle_0_1_9_features backtrace_sys_0_1_24_features libc_0_2_43_features winapi_0_3_5_features ];
  backtrace_sys_0_1_24 = { features?(backtrace_sys_0_1_24_features {}) }: backtrace_sys_0_1_24_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_23 ]);
  };
  backtrace_sys_0_1_24_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_24.default = (f.backtrace_sys_0_1_24.default or true);
    cc_1_0_23.default = true;
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features cc_1_0_23_features ];
  base64_0_9_2 = { features?(base64_0_9_2_features {}) }: base64_0_9_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_6 safemem_0_2_0 ]);
  };
  base64_0_9_2_features = f: updateFeatures f (rec {
    base64_0_9_2.default = (f.base64_0_9_2.default or true);
    byteorder_1_2_6.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_6_features safemem_0_2_0_features ];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_4 = { features?(bitflags_1_0_4_features {}) }: bitflags_1_0_4_ {
    features = mkFeatures (features.bitflags_1_0_4 or {});
  };
  bitflags_1_0_4_features = f: updateFeatures f (rec {
    bitflags_1_0_4.default = (f.bitflags_1_0_4.default or true);
  }) [];
  brotli_2_5_0 = { features?(brotli_2_5_0_features {}) }: brotli_2_5_0_ {
    dependencies = mapFeatures features ([ alloc_no_stdlib_1_3_0 brotli_decompressor_1_3_1 ]);
    features = mkFeatures (features.brotli_2_5_0 or {});
  };
  brotli_2_5_0_features = f: updateFeatures f (rec {
    alloc_no_stdlib_1_3_0."no-stdlib" =
      (f.alloc_no_stdlib_1_3_0."no-stdlib" or false) ||
      (brotli_2_5_0."no-stdlib" or false) ||
      (f.brotli_2_5_0."no-stdlib" or false);
    alloc_no_stdlib_1_3_0.default = true;
    brotli_2_5_0.default = (f.brotli_2_5_0.default or true);
    brotli_decompressor_1_3_1."disable-timer" =
      (f.brotli_decompressor_1_3_1."disable-timer" or false) ||
      (brotli_2_5_0."disable-timer" or false) ||
      (f.brotli_2_5_0."disable-timer" or false);
    brotli_decompressor_1_3_1."no-stdlib" =
      (f.brotli_decompressor_1_3_1."no-stdlib" or false) ||
      (brotli_2_5_0."no-stdlib" or false) ||
      (f.brotli_2_5_0."no-stdlib" or false);
    brotli_decompressor_1_3_1.benchmark =
      (f.brotli_decompressor_1_3_1.benchmark or false) ||
      (brotli_2_5_0.benchmark or false) ||
      (f.brotli_2_5_0.benchmark or false);
    brotli_decompressor_1_3_1.default = true;
    brotli_decompressor_1_3_1.seccomp =
      (f.brotli_decompressor_1_3_1.seccomp or false) ||
      (brotli_2_5_0.seccomp or false) ||
      (f.brotli_2_5_0.seccomp or false);
  }) [ alloc_no_stdlib_1_3_0_features brotli_decompressor_1_3_1_features ];
  brotli_decompressor_1_3_1 = { features?(brotli_decompressor_1_3_1_features {}) }: brotli_decompressor_1_3_1_ {
    dependencies = mapFeatures features ([ alloc_no_stdlib_1_3_0 ]);
    features = mkFeatures (features.brotli_decompressor_1_3_1 or {});
  };
  brotli_decompressor_1_3_1_features = f: updateFeatures f (rec {
    alloc_no_stdlib_1_3_0."no-stdlib" =
      (f.alloc_no_stdlib_1_3_0."no-stdlib" or false) ||
      (brotli_decompressor_1_3_1."no-stdlib" or false) ||
      (f.brotli_decompressor_1_3_1."no-stdlib" or false);
    alloc_no_stdlib_1_3_0.default = true;
    alloc_no_stdlib_1_3_0.unsafe =
      (f.alloc_no_stdlib_1_3_0.unsafe or false) ||
      (brotli_decompressor_1_3_1.unsafe or false) ||
      (f.brotli_decompressor_1_3_1.unsafe or false);
    brotli_decompressor_1_3_1.default = (f.brotli_decompressor_1_3_1.default or true);
  }) [ alloc_no_stdlib_1_3_0_features ];
  brotli_sys_0_3_2 = { features?(brotli_sys_0_3_2_features {}) }: brotli_sys_0_3_2_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_23 ]);
  };
  brotli_sys_0_3_2_features = f: updateFeatures f (rec {
    brotli_sys_0_3_2.default = (f.brotli_sys_0_3_2.default or true);
    cc_1_0_23.default = true;
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features cc_1_0_23_features ];
  brotli2_0_3_2 = { features?(brotli2_0_3_2_features {}) }: brotli2_0_3_2_ {
    dependencies = mapFeatures features ([ brotli_sys_0_3_2 libc_0_2_43 ]);
  };
  brotli2_0_3_2_features = f: updateFeatures f (rec {
    brotli2_0_3_2.default = (f.brotli2_0_3_2.default or true);
    brotli_sys_0_3_2.default = true;
    libc_0_2_43.default = true;
  }) [ brotli_sys_0_3_2_features libc_0_2_43_features ];
  build_const_0_2_1 = { features?(build_const_0_2_1_features {}) }: build_const_0_2_1_ {
    features = mkFeatures (features.build_const_0_2_1 or {});
  };
  build_const_0_2_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = (f.build_const_0_2_1.default or true);
    build_const_0_2_1.std =
      (f.build_const_0_2_1.std or false) ||
      (f.build_const_0_2_1.default or false) ||
      (build_const_0_2_1.default or false);
  }) [];
  byteorder_1_2_6 = { features?(byteorder_1_2_6_features {}) }: byteorder_1_2_6_ {
    features = mkFeatures (features.byteorder_1_2_6 or {});
  };
  byteorder_1_2_6_features = f: updateFeatures f (rec {
    byteorder_1_2_6.default = (f.byteorder_1_2_6.default or true);
    byteorder_1_2_6.std =
      (f.byteorder_1_2_6.std or false) ||
      (f.byteorder_1_2_6.default or false) ||
      (byteorder_1_2_6.default or false);
  }) [];
  bytes_0_4_10 = { features?(bytes_0_4_10_features {}) }: bytes_0_4_10_ {
    dependencies = mapFeatures features ([ byteorder_1_2_6 iovec_0_1_2 ]);
    features = mkFeatures (features.bytes_0_4_10 or {});
  };
  bytes_0_4_10_features = f: updateFeatures f (rec {
    byteorder_1_2_6."i128" =
      (f.byteorder_1_2_6."i128" or false) ||
      (bytes_0_4_10."i128" or false) ||
      (f.bytes_0_4_10."i128" or false);
    byteorder_1_2_6.default = true;
    bytes_0_4_10.default = (f.bytes_0_4_10.default or true);
    iovec_0_1_2.default = true;
  }) [ byteorder_1_2_6_features iovec_0_1_2_features ];
  cc_1_0_23 = { features?(cc_1_0_23_features {}) }: cc_1_0_23_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_23 or {});
  };
  cc_1_0_23_features = f: updateFeatures f (rec {
    cc_1_0_23.default = (f.cc_1_0_23.default or true);
    cc_1_0_23.rayon =
      (f.cc_1_0_23.rayon or false) ||
      (f.cc_1_0_23.parallel or false) ||
      (cc_1_0_23.parallel or false);
  }) [];
  cfg_if_0_1_5 = { features?(cfg_if_0_1_5_features {}) }: cfg_if_0_1_5_ {};
  cfg_if_0_1_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = (f.cfg_if_0_1_5.default or true);
  }) [];
  chrono_0_4_6 = { features?(chrono_0_4_6_features {}) }: chrono_0_4_6_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.chrono_0_4_6.time or false then [ time_0_1_40 ] else []));
    features = mkFeatures (features.chrono_0_4_6 or {});
  };
  chrono_0_4_6_features = f: updateFeatures f (rec {
    chrono_0_4_6.clock =
      (f.chrono_0_4_6.clock or false) ||
      (f.chrono_0_4_6.default or false) ||
      (chrono_0_4_6.default or false);
    chrono_0_4_6.default = (f.chrono_0_4_6.default or true);
    chrono_0_4_6.time =
      (f.chrono_0_4_6.time or false) ||
      (f.chrono_0_4_6.clock or false) ||
      (chrono_0_4_6.clock or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    time_0_1_40.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features time_0_1_40_features ];
  clap_2_32_0 = { features?(clap_2_32_0_features {}) }: clap_2_32_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_4 textwrap_0_10_0 unicode_width_0_1_5 ]
      ++ (if features.clap_2_32_0.atty or false then [ atty_0_2_11 ] else [])
      ++ (if features.clap_2_32_0.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_32_0.vec_map or false then [ vec_map_0_8_1 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_32_0.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_32_0 or {});
  };
  clap_2_32_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_11.default = true;
    bitflags_1_0_4.default = true;
    clap_2_32_0."yaml-rust" =
      (f.clap_2_32_0."yaml-rust" or false) ||
      (f.clap_2_32_0.yaml or false) ||
      (clap_2_32_0.yaml or false);
    clap_2_32_0.ansi_term =
      (f.clap_2_32_0.ansi_term or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.atty =
      (f.clap_2_32_0.atty or false) ||
      (f.clap_2_32_0.color or false) ||
      (clap_2_32_0.color or false);
    clap_2_32_0.clippy =
      (f.clap_2_32_0.clippy or false) ||
      (f.clap_2_32_0.lints or false) ||
      (clap_2_32_0.lints or false);
    clap_2_32_0.color =
      (f.clap_2_32_0.color or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.default = (f.clap_2_32_0.default or true);
    clap_2_32_0.strsim =
      (f.clap_2_32_0.strsim or false) ||
      (f.clap_2_32_0.suggestions or false) ||
      (clap_2_32_0.suggestions or false);
    clap_2_32_0.suggestions =
      (f.clap_2_32_0.suggestions or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.term_size =
      (f.clap_2_32_0.term_size or false) ||
      (f.clap_2_32_0.wrap_help or false) ||
      (clap_2_32_0.wrap_help or false);
    clap_2_32_0.vec_map =
      (f.clap_2_32_0.vec_map or false) ||
      (f.clap_2_32_0.default or false) ||
      (clap_2_32_0.default or false);
    clap_2_32_0.yaml =
      (f.clap_2_32_0.yaml or false) ||
      (f.clap_2_32_0.doc or false) ||
      (clap_2_32_0.doc or false);
    strsim_0_7_0.default = true;
    textwrap_0_10_0.default = true;
    textwrap_0_10_0.term_size =
      (f.textwrap_0_10_0.term_size or false) ||
      (clap_2_32_0.wrap_help or false) ||
      (f.clap_2_32_0.wrap_help or false);
    unicode_width_0_1_5.default = true;
    vec_map_0_8_1.default = true;
  }) [ atty_0_2_11_features bitflags_1_0_4_features strsim_0_7_0_features textwrap_0_10_0_features unicode_width_0_1_5_features vec_map_0_8_1_features ansi_term_0_11_0_features ];
  cloudabi_0_0_3 = { features?(cloudabi_0_0_3_features {}) }: cloudabi_0_0_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.cloudabi_0_0_3.bitflags or false then [ bitflags_1_0_4 ] else []));
    features = mkFeatures (features.cloudabi_0_0_3 or {});
  };
  cloudabi_0_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_4.default = true;
    cloudabi_0_0_3.bitflags =
      (f.cloudabi_0_0_3.bitflags or false) ||
      (f.cloudabi_0_0_3.default or false) ||
      (cloudabi_0_0_3.default or false);
    cloudabi_0_0_3.default = (f.cloudabi_0_0_3.default or true);
  }) [ bitflags_1_0_4_features ];
  cmake_0_1_33 = { features?(cmake_0_1_33_features {}) }: cmake_0_1_33_ {
    dependencies = mapFeatures features ([ cc_1_0_23 ]);
  };
  cmake_0_1_33_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    cmake_0_1_33.default = (f.cmake_0_1_33.default or true);
  }) [ cc_1_0_23_features ];
  cookie_0_11_0 = { features?(cookie_0_11_0_features {}) }: cookie_0_11_0_ {
    dependencies = mapFeatures features ([ time_0_1_40 ]
      ++ (if features.cookie_0_11_0."base64" or false then [ base64_0_9_2 ] else [])
      ++ (if features.cookie_0_11_0.ring or false then [ ring_0_13_2 ] else [])
      ++ (if features.cookie_0_11_0.url or false then [ url_1_7_1 ] else []));
    features = mkFeatures (features.cookie_0_11_0 or {});
  };
  cookie_0_11_0_features = f: updateFeatures f (rec {
    base64_0_9_2.default = true;
    cookie_0_11_0."base64" =
      (f.cookie_0_11_0."base64" or false) ||
      (f.cookie_0_11_0.secure or false) ||
      (cookie_0_11_0.secure or false);
    cookie_0_11_0.default = (f.cookie_0_11_0.default or true);
    cookie_0_11_0.ring =
      (f.cookie_0_11_0.ring or false) ||
      (f.cookie_0_11_0.secure or false) ||
      (cookie_0_11_0.secure or false);
    cookie_0_11_0.url =
      (f.cookie_0_11_0.url or false) ||
      (f.cookie_0_11_0."percent-encode" or false) ||
      (cookie_0_11_0."percent-encode" or false);
    ring_0_13_2.default = true;
    time_0_1_40.default = true;
    url_1_7_1.default = true;
  }) [ base64_0_9_2_features ring_0_13_2_features time_0_1_40_features url_1_7_1_features ];
  core_foundation_0_2_3 = { features?(core_foundation_0_2_3_features {}) }: core_foundation_0_2_3_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_43 ]);
  };
  core_foundation_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = (f.core_foundation_0_2_3.default or true);
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
  }) [ core_foundation_sys_0_2_3_features libc_0_2_43_features ];
  core_foundation_sys_0_2_3 = { features?(core_foundation_sys_0_2_3_features {}) }: core_foundation_sys_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  core_foundation_sys_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = (f.core_foundation_sys_0_2_3.default or true);
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features ];
  crc_1_8_1 = { features?(crc_1_8_1_features {}) }: crc_1_8_1_ {
    buildDependencies = mapFeatures features ([ build_const_0_2_1 ]);
    features = mkFeatures (features.crc_1_8_1 or {});
  };
  crc_1_8_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = true;
    crc_1_8_1.default = (f.crc_1_8_1.default or true);
    crc_1_8_1.std =
      (f.crc_1_8_1.std or false) ||
      (f.crc_1_8_1.default or false) ||
      (crc_1_8_1.default or false);
  }) [ build_const_0_2_1_features ];
  crossbeam_channel_0_2_4 = { features?(crossbeam_channel_0_2_4_features {}) }: crossbeam_channel_0_2_4_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_5_2 crossbeam_utils_0_5_0 parking_lot_0_6_4 rand_0_5_5 smallvec_0_6_5 ]);
  };
  crossbeam_channel_0_2_4_features = f: updateFeatures f (rec {
    crossbeam_channel_0_2_4.default = (f.crossbeam_channel_0_2_4.default or true);
    crossbeam_epoch_0_5_2.default = true;
    crossbeam_utils_0_5_0.default = true;
    parking_lot_0_6_4.default = true;
    rand_0_5_5.default = true;
    smallvec_0_6_5.default = true;
  }) [ crossbeam_epoch_0_5_2_features crossbeam_utils_0_5_0_features parking_lot_0_6_4_features rand_0_5_5_features smallvec_0_6_5_features ];
  crossbeam_deque_0_2_0 = { features?(crossbeam_deque_0_2_0_features {}) }: crossbeam_deque_0_2_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_3_1 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_2_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = (f.crossbeam_deque_0_2_0.default or true);
    crossbeam_epoch_0_3_1.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_3_1_features crossbeam_utils_0_2_2_features ];
  crossbeam_deque_0_6_1 = { features?(crossbeam_deque_0_6_1_features {}) }: crossbeam_deque_0_6_1_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_5_2 crossbeam_utils_0_5_0 ]);
  };
  crossbeam_deque_0_6_1_features = f: updateFeatures f (rec {
    crossbeam_deque_0_6_1.default = (f.crossbeam_deque_0_6_1.default or true);
    crossbeam_epoch_0_5_2.default = true;
    crossbeam_utils_0_5_0.default = true;
  }) [ crossbeam_epoch_0_5_2_features crossbeam_utils_0_5_0_features ];
  crossbeam_epoch_0_3_1 = { features?(crossbeam_epoch_0_3_1_features {}) }: crossbeam_epoch_0_3_1_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_5 crossbeam_utils_0_2_2 memoffset_0_2_1 nodrop_0_1_12 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_3_1.lazy_static or false then [ lazy_static_1_1_0 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_3_1 or {});
  };
  crossbeam_epoch_0_3_1_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_3_1.nightly or false) ||
      (f.crossbeam_epoch_0_3_1.nightly or false);
    cfg_if_0_1_5.default = true;
    crossbeam_epoch_0_3_1.default = (f.crossbeam_epoch_0_3_1.default or true);
    crossbeam_epoch_0_3_1.lazy_static =
      (f.crossbeam_epoch_0_3_1.lazy_static or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false);
    crossbeam_epoch_0_3_1.use_std =
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.default or false) ||
      (crossbeam_epoch_0_3_1.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false);
    lazy_static_1_1_0.default = true;
    memoffset_0_2_1.default = true;
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_5_features crossbeam_utils_0_2_2_features lazy_static_1_1_0_features memoffset_0_2_1_features nodrop_0_1_12_features scopeguard_0_3_3_features ];
  crossbeam_epoch_0_5_2 = { features?(crossbeam_epoch_0_5_2_features {}) }: crossbeam_epoch_0_5_2_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_5 crossbeam_utils_0_5_0 memoffset_0_2_1 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_5_2.lazy_static or false then [ lazy_static_1_1_0 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_5_2 or {});
  };
  crossbeam_epoch_0_5_2_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_5_2.nightly or false) ||
      (f.crossbeam_epoch_0_5_2.nightly or false);
    cfg_if_0_1_5.default = true;
    crossbeam_epoch_0_5_2.default = (f.crossbeam_epoch_0_5_2.default or true);
    crossbeam_epoch_0_5_2.lazy_static =
      (f.crossbeam_epoch_0_5_2.lazy_static or false) ||
      (f.crossbeam_epoch_0_5_2.use_std or false) ||
      (crossbeam_epoch_0_5_2.use_std or false);
    crossbeam_epoch_0_5_2.use_std =
      (f.crossbeam_epoch_0_5_2.use_std or false) ||
      (f.crossbeam_epoch_0_5_2.default or false) ||
      (crossbeam_epoch_0_5_2.default or false);
    crossbeam_utils_0_5_0.default = (f.crossbeam_utils_0_5_0.default or false);
    crossbeam_utils_0_5_0.use_std =
      (f.crossbeam_utils_0_5_0.use_std or false) ||
      (crossbeam_epoch_0_5_2.use_std or false) ||
      (f.crossbeam_epoch_0_5_2.use_std or false);
    lazy_static_1_1_0.default = true;
    memoffset_0_2_1.default = true;
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_5_features crossbeam_utils_0_5_0_features lazy_static_1_1_0_features memoffset_0_2_1_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_5_features ];
  crossbeam_utils_0_5_0 = { features?(crossbeam_utils_0_5_0_features {}) }: crossbeam_utils_0_5_0_ {
    features = mkFeatures (features.crossbeam_utils_0_5_0 or {});
  };
  crossbeam_utils_0_5_0_features = f: updateFeatures f (rec {
    crossbeam_utils_0_5_0.default = (f.crossbeam_utils_0_5_0.default or true);
    crossbeam_utils_0_5_0.use_std =
      (f.crossbeam_utils_0_5_0.use_std or false) ||
      (f.crossbeam_utils_0_5_0.default or false) ||
      (crossbeam_utils_0_5_0.default or false);
  }) [];
  curl_sys_0_4_8 = { features?(curl_sys_0_4_8_features {}) }: curl_sys_0_4_8_ {
    dependencies = mapFeatures features ([ libc_0_2_43 libz_sys_1_0_20 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin") then mapFeatures features ([ openssl_sys_0_9_35 ]) else [])
      ++ (if abi == "msvc" then mapFeatures features ([]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_23 pkg_config_0_3_14 ]);
  };
  curl_sys_0_4_8_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    curl_sys_0_4_8.default = (f.curl_sys_0_4_8.default or true);
    libc_0_2_43.default = true;
    libz_sys_1_0_20.default = true;
    openssl_sys_0_9_35.default = true;
    pkg_config_0_3_14.default = true;
    winapi_0_3_5."winsock2" = true;
    winapi_0_3_5."ws2def" = true;
    winapi_0_3_5.default = true;
  }) [ libc_0_2_43_features libz_sys_1_0_20_features cc_1_0_23_features pkg_config_0_3_14_features openssl_sys_0_9_35_features winapi_0_3_5_features ];
  dbghelp_sys_0_2_0 = { features?(dbghelp_sys_0_2_0_features {}) }: dbghelp_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  dbghelp_sys_0_2_0_features = f: updateFeatures f (rec {
    dbghelp_sys_0_2_0.default = (f.dbghelp_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  diesel_1_3_2 = { features?(diesel_1_3_2_features {}) }: diesel_1_3_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_6 diesel_derives_1_3_0 ]
      ++ (if features.diesel_1_3_2."libsqlite3-sys" or false then [ libsqlite3_sys_0_9_3 ] else []));
    features = mkFeatures (features.diesel_1_3_2 or {});
  };
  diesel_1_3_2_features = f: updateFeatures f (rec {
    byteorder_1_2_6.default = true;
    diesel_1_3_2."128-column-tables" =
      (f.diesel_1_3_2."128-column-tables" or false) ||
      (f.diesel_1_3_2."x128-column-tables" or false) ||
      (diesel_1_3_2."x128-column-tables" or false);
    diesel_1_3_2."32-column-tables" =
      (f.diesel_1_3_2."32-column-tables" or false) ||
      (f.diesel_1_3_2."64-column-tables" or false) ||
      (diesel_1_3_2."64-column-tables" or false) ||
      (f.diesel_1_3_2.default or false) ||
      (diesel_1_3_2.default or false) ||
      (f.diesel_1_3_2."large-tables" or false) ||
      (diesel_1_3_2."large-tables" or false) ||
      (f.diesel_1_3_2."x32-column-tables" or false) ||
      (diesel_1_3_2."x32-column-tables" or false);
    diesel_1_3_2."64-column-tables" =
      (f.diesel_1_3_2."64-column-tables" or false) ||
      (f.diesel_1_3_2."128-column-tables" or false) ||
      (diesel_1_3_2."128-column-tables" or false) ||
      (f.diesel_1_3_2."huge-tables" or false) ||
      (diesel_1_3_2."huge-tables" or false) ||
      (f.diesel_1_3_2."x64-column-tables" or false) ||
      (diesel_1_3_2."x64-column-tables" or false);
    diesel_1_3_2."deprecated-time" =
      (f.diesel_1_3_2."deprecated-time" or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2."libsqlite3-sys" =
      (f.diesel_1_3_2."libsqlite3-sys" or false) ||
      (f.diesel_1_3_2.sqlite or false) ||
      (diesel_1_3_2.sqlite or false);
    diesel_1_3_2."mysqlclient-sys" =
      (f.diesel_1_3_2."mysqlclient-sys" or false) ||
      (f.diesel_1_3_2.mysql or false) ||
      (diesel_1_3_2.mysql or false);
    diesel_1_3_2."network-address" =
      (f.diesel_1_3_2."network-address" or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2."num-bigint" =
      (f.diesel_1_3_2."num-bigint" or false) ||
      (f.diesel_1_3_2.numeric or false) ||
      (diesel_1_3_2.numeric or false);
    diesel_1_3_2."num-integer" =
      (f.diesel_1_3_2."num-integer" or false) ||
      (f.diesel_1_3_2.numeric or false) ||
      (diesel_1_3_2.numeric or false);
    diesel_1_3_2."num-traits" =
      (f.diesel_1_3_2."num-traits" or false) ||
      (f.diesel_1_3_2.numeric or false) ||
      (diesel_1_3_2.numeric or false);
    diesel_1_3_2."pq-sys" =
      (f.diesel_1_3_2."pq-sys" or false) ||
      (f.diesel_1_3_2.postgres or false) ||
      (diesel_1_3_2.postgres or false);
    diesel_1_3_2."r2d2" =
      (f.diesel_1_3_2."r2d2" or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2."with-deprecated" =
      (f.diesel_1_3_2."with-deprecated" or false) ||
      (f.diesel_1_3_2.default or false) ||
      (diesel_1_3_2.default or false);
    diesel_1_3_2.bigdecimal =
      (f.diesel_1_3_2.bigdecimal or false) ||
      (f.diesel_1_3_2.numeric or false) ||
      (diesel_1_3_2.numeric or false);
    diesel_1_3_2.bitflags =
      (f.diesel_1_3_2.bitflags or false) ||
      (f.diesel_1_3_2.postgres or false) ||
      (diesel_1_3_2.postgres or false);
    diesel_1_3_2.chrono =
      (f.diesel_1_3_2.chrono or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2.clippy =
      (f.diesel_1_3_2.clippy or false) ||
      (f.diesel_1_3_2.lint or false) ||
      (diesel_1_3_2.lint or false);
    diesel_1_3_2.default = (f.diesel_1_3_2.default or true);
    diesel_1_3_2.ipnetwork =
      (f.diesel_1_3_2.ipnetwork or false) ||
      (f.diesel_1_3_2."network-address" or false) ||
      (diesel_1_3_2."network-address" or false);
    diesel_1_3_2.libc =
      (f.diesel_1_3_2.libc or false) ||
      (f.diesel_1_3_2."network-address" or false) ||
      (diesel_1_3_2."network-address" or false);
    diesel_1_3_2.numeric =
      (f.diesel_1_3_2.numeric or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2.serde_json =
      (f.diesel_1_3_2.serde_json or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_1_3_2.time =
      (f.diesel_1_3_2.time or false) ||
      (f.diesel_1_3_2."deprecated-time" or false) ||
      (diesel_1_3_2."deprecated-time" or false);
    diesel_1_3_2.url =
      (f.diesel_1_3_2.url or false) ||
      (f.diesel_1_3_2.mysql or false) ||
      (diesel_1_3_2.mysql or false);
    diesel_1_3_2.uuid =
      (f.diesel_1_3_2.uuid or false) ||
      (f.diesel_1_3_2.extras or false) ||
      (diesel_1_3_2.extras or false);
    diesel_derives_1_3_0.default = true;
    diesel_derives_1_3_0.mysql =
      (f.diesel_derives_1_3_0.mysql or false) ||
      (diesel_1_3_2.mysql or false) ||
      (f.diesel_1_3_2.mysql or false);
    diesel_derives_1_3_0.nightly =
      (f.diesel_derives_1_3_0.nightly or false) ||
      (diesel_1_3_2.unstable or false) ||
      (f.diesel_1_3_2.unstable or false);
    diesel_derives_1_3_0.postgres =
      (f.diesel_derives_1_3_0.postgres or false) ||
      (diesel_1_3_2.postgres or false) ||
      (f.diesel_1_3_2.postgres or false);
    diesel_derives_1_3_0.sqlite =
      (f.diesel_derives_1_3_0.sqlite or false) ||
      (diesel_1_3_2.sqlite or false) ||
      (f.diesel_1_3_2.sqlite or false);
    libsqlite3_sys_0_9_3."min_sqlite_version_3_7_16" = true;
    libsqlite3_sys_0_9_3.default = true;
  }) [ byteorder_1_2_6_features diesel_derives_1_3_0_features libsqlite3_sys_0_9_3_features ];
  diesel_derives_1_3_0 = { features?(diesel_derives_1_3_0_features {}) }: diesel_derives_1_3_0_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_8 quote_0_5_2 syn_0_13_11 ]);
    features = mkFeatures (features.diesel_derives_1_3_0 or {});
  };
  diesel_derives_1_3_0_features = f: updateFeatures f (rec {
    diesel_derives_1_3_0.clippy =
      (f.diesel_derives_1_3_0.clippy or false) ||
      (f.diesel_derives_1_3_0.lint or false) ||
      (diesel_derives_1_3_0.lint or false);
    diesel_derives_1_3_0.default = (f.diesel_derives_1_3_0.default or true);
    proc_macro2_0_3_8.default = true;
    proc_macro2_0_3_8.nightly =
      (f.proc_macro2_0_3_8.nightly or false) ||
      (diesel_derives_1_3_0.nightly or false) ||
      (f.diesel_derives_1_3_0.nightly or false);
    quote_0_5_2.default = true;
    syn_0_13_11.default = true;
    syn_0_13_11.fold = true;
    syn_0_13_11.full = true;
  }) [ proc_macro2_0_3_8_features quote_0_5_2_features syn_0_13_11_features ];
  dtoa_0_4_3 = { features?(dtoa_0_4_3_features {}) }: dtoa_0_4_3_ {};
  dtoa_0_4_3_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = (f.dtoa_0_4_3.default or true);
  }) [];
  either_1_5_0 = { features?(either_1_5_0_features {}) }: either_1_5_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_5_0 or {});
  };
  either_1_5_0_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or true);
    either_1_5_0.use_std =
      (f.either_1_5_0.use_std or false) ||
      (f.either_1_5_0.default or false) ||
      (either_1_5_0.default or false);
  }) [];
  encoding_0_2_33 = { features?(encoding_0_2_33_features {}) }: encoding_0_2_33_ {
    dependencies = mapFeatures features ([ encoding_index_japanese_1_20141219_5 encoding_index_korean_1_20141219_5 encoding_index_simpchinese_1_20141219_5 encoding_index_singlebyte_1_20141219_5 encoding_index_tradchinese_1_20141219_5 ]);
  };
  encoding_0_2_33_features = f: updateFeatures f (rec {
    encoding_0_2_33.default = (f.encoding_0_2_33.default or true);
    encoding_index_japanese_1_20141219_5.default = true;
    encoding_index_korean_1_20141219_5.default = true;
    encoding_index_simpchinese_1_20141219_5.default = true;
    encoding_index_singlebyte_1_20141219_5.default = true;
    encoding_index_tradchinese_1_20141219_5.default = true;
  }) [ encoding_index_japanese_1_20141219_5_features encoding_index_korean_1_20141219_5_features encoding_index_simpchinese_1_20141219_5_features encoding_index_singlebyte_1_20141219_5_features encoding_index_tradchinese_1_20141219_5_features ];
  encoding_index_japanese_1_20141219_5 = { features?(encoding_index_japanese_1_20141219_5_features {}) }: encoding_index_japanese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_japanese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_japanese_1_20141219_5.default = (f.encoding_index_japanese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_korean_1_20141219_5 = { features?(encoding_index_korean_1_20141219_5_features {}) }: encoding_index_korean_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_korean_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_korean_1_20141219_5.default = (f.encoding_index_korean_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_simpchinese_1_20141219_5 = { features?(encoding_index_simpchinese_1_20141219_5_features {}) }: encoding_index_simpchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_simpchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_simpchinese_1_20141219_5.default = (f.encoding_index_simpchinese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_singlebyte_1_20141219_5 = { features?(encoding_index_singlebyte_1_20141219_5_features {}) }: encoding_index_singlebyte_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_singlebyte_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_singlebyte_1_20141219_5.default = (f.encoding_index_singlebyte_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tradchinese_1_20141219_5 = { features?(encoding_index_tradchinese_1_20141219_5_features {}) }: encoding_index_tradchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_tradchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = true;
    encoding_index_tradchinese_1_20141219_5.default = (f.encoding_index_tradchinese_1_20141219_5.default or true);
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tests_0_1_4 = { features?(encoding_index_tests_0_1_4_features {}) }: encoding_index_tests_0_1_4_ {};
  encoding_index_tests_0_1_4_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = (f.encoding_index_tests_0_1_4.default or true);
  }) [];
  encoding_rs_0_8_6 = { features?(encoding_rs_0_8_6_features {}) }: encoding_rs_0_8_6_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.encoding_rs_0_8_6 or {});
  };
  encoding_rs_0_8_6_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    encoding_rs_0_8_6.default = (f.encoding_rs_0_8_6.default or true);
    encoding_rs_0_8_6.simd =
      (f.encoding_rs_0_8_6.simd or false) ||
      (f.encoding_rs_0_8_6."simd-accel" or false) ||
      (encoding_rs_0_8_6."simd-accel" or false);
  }) [ cfg_if_0_1_5_features ];
  error_chain_0_1_12 = { features?(error_chain_0_1_12_features {}) }: error_chain_0_1_12_ {
    dependencies = mapFeatures features ([ backtrace_0_2_3 ]);
  };
  error_chain_0_1_12_features = f: updateFeatures f (rec {
    backtrace_0_2_3.default = true;
    error_chain_0_1_12.default = (f.error_chain_0_1_12.default or true);
  }) [ backtrace_0_2_3_features ];
  error_chain_0_8_1 = { features?(error_chain_0_8_1_features {}) }: error_chain_0_8_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_8_1.backtrace or false then [ backtrace_0_3_9 ] else []));
    features = mkFeatures (features.error_chain_0_8_1 or {});
  };
  error_chain_0_8_1_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    error_chain_0_8_1.backtrace =
      (f.error_chain_0_8_1.backtrace or false) ||
      (f.error_chain_0_8_1.default or false) ||
      (error_chain_0_8_1.default or false);
    error_chain_0_8_1.default = (f.error_chain_0_8_1.default or true);
    error_chain_0_8_1.example_generated =
      (f.error_chain_0_8_1.example_generated or false) ||
      (f.error_chain_0_8_1.default or false) ||
      (error_chain_0_8_1.default or false);
  }) [ backtrace_0_3_9_features ];
  error_chain_0_12_0 = { features?(error_chain_0_12_0_features {}) }: error_chain_0_12_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_12_0.backtrace or false then [ backtrace_0_3_9 ] else []));
    features = mkFeatures (features.error_chain_0_12_0 or {});
  };
  error_chain_0_12_0_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    error_chain_0_12_0.backtrace =
      (f.error_chain_0_12_0.backtrace or false) ||
      (f.error_chain_0_12_0.default or false) ||
      (error_chain_0_12_0.default or false);
    error_chain_0_12_0.default = (f.error_chain_0_12_0.default or true);
    error_chain_0_12_0.example_generated =
      (f.error_chain_0_12_0.example_generated or false) ||
      (f.error_chain_0_12_0.default or false) ||
      (error_chain_0_12_0.default or false);
  }) [ backtrace_0_3_9_features ];
  failure_0_1_2 = { features?(failure_0_1_2_features {}) }: failure_0_1_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.failure_0_1_2.backtrace or false then [ backtrace_0_3_9 ] else [])
      ++ (if features.failure_0_1_2.failure_derive or false then [ failure_derive_0_1_2 ] else []));
    features = mkFeatures (features.failure_0_1_2 or {});
  };
  failure_0_1_2_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    failure_0_1_2.backtrace =
      (f.failure_0_1_2.backtrace or false) ||
      (f.failure_0_1_2.std or false) ||
      (failure_0_1_2.std or false);
    failure_0_1_2.default = (f.failure_0_1_2.default or true);
    failure_0_1_2.derive =
      (f.failure_0_1_2.derive or false) ||
      (f.failure_0_1_2.default or false) ||
      (failure_0_1_2.default or false);
    failure_0_1_2.failure_derive =
      (f.failure_0_1_2.failure_derive or false) ||
      (f.failure_0_1_2.derive or false) ||
      (failure_0_1_2.derive or false);
    failure_0_1_2.std =
      (f.failure_0_1_2.std or false) ||
      (f.failure_0_1_2.default or false) ||
      (failure_0_1_2.default or false);
    failure_derive_0_1_2.default = true;
  }) [ backtrace_0_3_9_features failure_derive_0_1_2_features ];
  failure_derive_0_1_2 = { features?(failure_derive_0_1_2_features {}) }: failure_derive_0_1_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 quote_0_6_8 syn_0_14_9 synstructure_0_9_0 ]);
    features = mkFeatures (features.failure_derive_0_1_2 or {});
  };
  failure_derive_0_1_2_features = f: updateFeatures f (rec {
    failure_derive_0_1_2.default = (f.failure_derive_0_1_2.default or true);
    proc_macro2_0_4_17.default = true;
    quote_0_6_8.default = true;
    syn_0_14_9.default = true;
    synstructure_0_9_0.default = true;
  }) [ proc_macro2_0_4_17_features quote_0_6_8_features syn_0_14_9_features synstructure_0_9_0_features ];
  fern_0_5_6 = { features?(fern_0_5_6_features {}) }: fern_0_5_6_ {
    dependencies = mapFeatures features ([ log_0_4_5 ]);
    features = mkFeatures (features.fern_0_5_6 or {});
  };
  fern_0_5_6_features = f: updateFeatures f (rec {
    fern_0_5_6."syslog3" =
      (f.fern_0_5_6."syslog3" or false) ||
      (f.fern_0_5_6."syslog-3" or false) ||
      (fern_0_5_6."syslog-3" or false);
    fern_0_5_6.default = (f.fern_0_5_6.default or true);
    fern_0_5_6.syslog =
      (f.fern_0_5_6.syslog or false) ||
      (f.fern_0_5_6."syslog-4" or false) ||
      (fern_0_5_6."syslog-4" or false);
    log_0_4_5.default = true;
    log_0_4_5.std = true;
  }) [ log_0_4_5_features ];
  flate2_1_0_2 = { features?(flate2_1_0_2_features {}) }: flate2_1_0_2_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]
      ++ (if features.flate2_1_0_2."miniz-sys" or false then [ miniz_sys_0_1_10 ] else []));
    features = mkFeatures (features.flate2_1_0_2 or {});
  };
  flate2_1_0_2_features = f: updateFeatures f (rec {
    flate2_1_0_2."libz-sys" =
      (f.flate2_1_0_2."libz-sys" or false) ||
      (f.flate2_1_0_2.zlib or false) ||
      (flate2_1_0_2.zlib or false);
    flate2_1_0_2."miniz-sys" =
      (f.flate2_1_0_2."miniz-sys" or false) ||
      (f.flate2_1_0_2.default or false) ||
      (flate2_1_0_2.default or false);
    flate2_1_0_2."tokio-io" =
      (f.flate2_1_0_2."tokio-io" or false) ||
      (f.flate2_1_0_2.tokio or false) ||
      (flate2_1_0_2.tokio or false);
    flate2_1_0_2.default = (f.flate2_1_0_2.default or true);
    flate2_1_0_2.futures =
      (f.flate2_1_0_2.futures or false) ||
      (f.flate2_1_0_2.tokio or false) ||
      (flate2_1_0_2.tokio or false);
    flate2_1_0_2.miniz_oxide_c_api =
      (f.flate2_1_0_2.miniz_oxide_c_api or false) ||
      (f.flate2_1_0_2.rust_backend or false) ||
      (flate2_1_0_2.rust_backend or false);
    libc_0_2_43.default = true;
    miniz_sys_0_1_10.default = true;
  }) [ libc_0_2_43_features miniz_sys_0_1_10_features ];
  fnv_1_0_6 = { features?(fnv_1_0_6_features {}) }: fnv_1_0_6_ {};
  fnv_1_0_6_features = f: updateFeatures f (rec {
    fnv_1_0_6.default = (f.fnv_1_0_6.default or true);
  }) [];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fs2_0_4_3 = { features?(fs2_0_4_3_features {}) }: fs2_0_4_3_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  fs2_0_4_3_features = f: updateFeatures f (rec {
    fs2_0_4_3.default = (f.fs2_0_4_3.default or true);
    libc_0_2_43.default = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ libc_0_2_43_features winapi_0_3_5_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_4 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_4.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_4_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  futures_0_1_23 = { features?(futures_0_1_23_features {}) }: futures_0_1_23_ {
    features = mkFeatures (features.futures_0_1_23 or {});
  };
  futures_0_1_23_features = f: updateFeatures f (rec {
    futures_0_1_23."with-deprecated" =
      (f.futures_0_1_23."with-deprecated" or false) ||
      (f.futures_0_1_23.default or false) ||
      (futures_0_1_23.default or false);
    futures_0_1_23.default = (f.futures_0_1_23.default or true);
    futures_0_1_23.use_std =
      (f.futures_0_1_23.use_std or false) ||
      (f.futures_0_1_23.default or false) ||
      (futures_0_1_23.default or false);
  }) [];
  futures_cpupool_0_1_8 = { features?(futures_cpupool_0_1_8_features {}) }: futures_cpupool_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_23 num_cpus_1_8_0 ]);
    features = mkFeatures (features.futures_cpupool_0_1_8 or {});
  };
  futures_cpupool_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_23."with-deprecated" =
      (f.futures_0_1_23."with-deprecated" or false) ||
      (futures_cpupool_0_1_8."with-deprecated" or false) ||
      (f.futures_cpupool_0_1_8."with-deprecated" or false);
    futures_0_1_23.default = (f.futures_0_1_23.default or false);
    futures_0_1_23.use_std = true;
    futures_cpupool_0_1_8."with-deprecated" =
      (f.futures_cpupool_0_1_8."with-deprecated" or false) ||
      (f.futures_cpupool_0_1_8.default or false) ||
      (futures_cpupool_0_1_8.default or false);
    futures_cpupool_0_1_8.default = (f.futures_cpupool_0_1_8.default or true);
    num_cpus_1_8_0.default = true;
  }) [ futures_0_1_23_features num_cpus_1_8_0_features ];
  git2_0_7_5 = { features?(git2_0_7_5_features {}) }: git2_0_7_5_ {
    dependencies = mapFeatures features ([ bitflags_1_0_4 libc_0_2_43 libgit2_sys_0_7_7 log_0_4_5 url_1_7_1 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.git2_0_7_5."openssl-probe" or false then [ openssl_probe_0_1_2 ] else [])
      ++ (if features.git2_0_7_5."openssl-sys" or false then [ openssl_sys_0_9_35 ] else [])) else []);
    features = mkFeatures (features.git2_0_7_5 or {});
  };
  git2_0_7_5_features = f: updateFeatures f (rec {
    bitflags_1_0_4.default = true;
    git2_0_7_5."openssl-probe" =
      (f.git2_0_7_5."openssl-probe" or false) ||
      (f.git2_0_7_5.https or false) ||
      (git2_0_7_5.https or false);
    git2_0_7_5."openssl-sys" =
      (f.git2_0_7_5."openssl-sys" or false) ||
      (f.git2_0_7_5.https or false) ||
      (git2_0_7_5.https or false);
    git2_0_7_5.curl =
      (f.git2_0_7_5.curl or false) ||
      (f.git2_0_7_5.default or false) ||
      (git2_0_7_5.default or false);
    git2_0_7_5.default = (f.git2_0_7_5.default or true);
    git2_0_7_5.https =
      (f.git2_0_7_5.https or false) ||
      (f.git2_0_7_5.default or false) ||
      (git2_0_7_5.default or false);
    git2_0_7_5.ssh =
      (f.git2_0_7_5.ssh or false) ||
      (f.git2_0_7_5.default or false) ||
      (git2_0_7_5.default or false);
    git2_0_7_5.ssh_key_from_memory =
      (f.git2_0_7_5.ssh_key_from_memory or false) ||
      (f.git2_0_7_5.default or false) ||
      (git2_0_7_5.default or false);
    libc_0_2_43.default = true;
    libgit2_sys_0_7_7.curl =
      (f.libgit2_sys_0_7_7.curl or false) ||
      (git2_0_7_5.curl or false) ||
      (f.git2_0_7_5.curl or false);
    libgit2_sys_0_7_7.default = true;
    libgit2_sys_0_7_7.https =
      (f.libgit2_sys_0_7_7.https or false) ||
      (git2_0_7_5.https or false) ||
      (f.git2_0_7_5.https or false);
    libgit2_sys_0_7_7.ssh =
      (f.libgit2_sys_0_7_7.ssh or false) ||
      (git2_0_7_5.ssh or false) ||
      (f.git2_0_7_5.ssh or false);
    libgit2_sys_0_7_7.ssh_key_from_memory =
      (f.libgit2_sys_0_7_7.ssh_key_from_memory or false) ||
      (git2_0_7_5.ssh_key_from_memory or false) ||
      (f.git2_0_7_5.ssh_key_from_memory or false);
    log_0_4_5.default = true;
    openssl_probe_0_1_2.default = true;
    openssl_sys_0_9_35.default = true;
    url_1_7_1.default = true;
  }) [ bitflags_1_0_4_features libc_0_2_43_features libgit2_sys_0_7_7_features log_0_4_5_features url_1_7_1_features openssl_probe_0_1_2_features openssl_sys_0_9_35_features ];
  h2_0_1_12 = { features?(h2_0_1_12_features {}) }: h2_0_1_12_ {
    dependencies = mapFeatures features ([ byteorder_1_2_6 bytes_0_4_10 fnv_1_0_6 futures_0_1_23 http_0_1_10 indexmap_1_0_1 log_0_4_5 slab_0_4_1 string_0_1_1 tokio_io_0_1_8 ]);
    features = mkFeatures (features.h2_0_1_12 or {});
  };
  h2_0_1_12_features = f: updateFeatures f (rec {
    byteorder_1_2_6.default = true;
    bytes_0_4_10.default = true;
    fnv_1_0_6.default = true;
    futures_0_1_23.default = true;
    h2_0_1_12.default = (f.h2_0_1_12.default or true);
    http_0_1_10.default = true;
    indexmap_1_0_1.default = true;
    log_0_4_5.default = true;
    slab_0_4_1.default = true;
    string_0_1_1.default = true;
    tokio_io_0_1_8.default = true;
  }) [ byteorder_1_2_6_features bytes_0_4_10_features fnv_1_0_6_features futures_0_1_23_features http_0_1_10_features indexmap_1_0_1_features log_0_4_5_features slab_0_4_1_features string_0_1_1_features tokio_io_0_1_8_features ];
  hostname_0_1_5 = { features?(hostname_0_1_5_features {}) }: hostname_0_1_5_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") || kernel == "redox" then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winutil_0_1_1 ]) else []);
    features = mkFeatures (features.hostname_0_1_5 or {});
  };
  hostname_0_1_5_features = f: updateFeatures f (rec {
    hostname_0_1_5.default = (f.hostname_0_1_5.default or true);
    libc_0_2_43.default = true;
    winutil_0_1_1.default = true;
  }) [ libc_0_2_43_features winutil_0_1_1_features ];
  htmlescape_0_3_1 = { features?(htmlescape_0_3_1_features {}) }: htmlescape_0_3_1_ {};
  htmlescape_0_3_1_features = f: updateFeatures f (rec {
    htmlescape_0_3_1.default = (f.htmlescape_0_3_1.default or true);
  }) [];
  http_0_1_10 = { features?(http_0_1_10_features {}) }: http_0_1_10_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 fnv_1_0_6 itoa_0_4_2 ]);
  };
  http_0_1_10_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    fnv_1_0_6.default = true;
    http_0_1_10.default = (f.http_0_1_10.default or true);
    itoa_0_4_2.default = true;
  }) [ bytes_0_4_10_features fnv_1_0_6_features itoa_0_4_2_features ];
  httparse_1_3_2 = { features?(httparse_1_3_2_features {}) }: httparse_1_3_2_ {
    features = mkFeatures (features.httparse_1_3_2 or {});
  };
  httparse_1_3_2_features = f: updateFeatures f (rec {
    httparse_1_3_2.default = (f.httparse_1_3_2.default or true);
    httparse_1_3_2.std =
      (f.httparse_1_3_2.std or false) ||
      (f.httparse_1_3_2.default or false) ||
      (httparse_1_3_2.default or false);
  }) [];
  hyper_0_11_27 = { features?(hyper_0_11_27_features {}) }: hyper_0_11_27_ {
    dependencies = mapFeatures features ([ base64_0_9_2 bytes_0_4_10 futures_0_1_23 futures_cpupool_0_1_8 httparse_1_3_2 iovec_0_1_2 language_tags_0_2_2 log_0_4_5 mime_0_3_9 net2_0_2_33 percent_encoding_1_0_1 relay_0_1_1 time_0_1_40 tokio_core_0_1_17 tokio_io_0_1_8 tokio_service_0_1_0 unicase_2_1_0 want_0_0_4 ]);
    features = mkFeatures (features.hyper_0_11_27 or {});
  };
  hyper_0_11_27_features = f: updateFeatures f (rec {
    base64_0_9_2.default = true;
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    futures_cpupool_0_1_8.default = true;
    httparse_1_3_2.default = true;
    hyper_0_11_27."server-proto" =
      (f.hyper_0_11_27."server-proto" or false) ||
      (f.hyper_0_11_27.default or false) ||
      (hyper_0_11_27.default or false);
    hyper_0_11_27."tokio-proto" =
      (f.hyper_0_11_27."tokio-proto" or false) ||
      (f.hyper_0_11_27."server-proto" or false) ||
      (hyper_0_11_27."server-proto" or false);
    hyper_0_11_27.default = (f.hyper_0_11_27.default or true);
    hyper_0_11_27.http =
      (f.hyper_0_11_27.http or false) ||
      (f.hyper_0_11_27.compat or false) ||
      (hyper_0_11_27.compat or false);
    iovec_0_1_2.default = true;
    language_tags_0_2_2.default = true;
    log_0_4_5.default = true;
    mime_0_3_9.default = true;
    net2_0_2_33.default = true;
    percent_encoding_1_0_1.default = true;
    relay_0_1_1.default = true;
    time_0_1_40.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_8.default = true;
    tokio_service_0_1_0.default = true;
    unicase_2_1_0.default = true;
    want_0_0_4.default = true;
  }) [ base64_0_9_2_features bytes_0_4_10_features futures_0_1_23_features futures_cpupool_0_1_8_features httparse_1_3_2_features iovec_0_1_2_features language_tags_0_2_2_features log_0_4_5_features mime_0_3_9_features net2_0_2_33_features percent_encoding_1_0_1_features relay_0_1_1_features time_0_1_40_features tokio_core_0_1_17_features tokio_io_0_1_8_features tokio_service_0_1_0_features unicase_2_1_0_features want_0_0_4_features ];
  hyper_tls_0_1_4 = { features?(hyper_tls_0_1_4_features {}) }: hyper_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 hyper_0_11_27 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_8 tokio_service_0_1_0 tokio_tls_0_1_4 ]);
  };
  hyper_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    hyper_0_11_27.default = (f.hyper_0_11_27.default or false);
    hyper_tls_0_1_4.default = (f.hyper_tls_0_1_4.default or true);
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_8.default = true;
    tokio_service_0_1_0.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or false);
  }) [ futures_0_1_23_features hyper_0_11_27_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_8_features tokio_service_0_1_0_features tokio_tls_0_1_4_features ];
  idna_0_1_5 = { features?(idna_0_1_5_features {}) }: idna_0_1_5_ {
    dependencies = mapFeatures features ([ matches_0_1_8 unicode_bidi_0_3_4 unicode_normalization_0_1_7 ]);
  };
  idna_0_1_5_features = f: updateFeatures f (rec {
    idna_0_1_5.default = (f.idna_0_1_5.default or true);
    matches_0_1_8.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ matches_0_1_8_features unicode_bidi_0_3_4_features unicode_normalization_0_1_7_features ];
  indexmap_1_0_1 = { features?(indexmap_1_0_1_features {}) }: indexmap_1_0_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.indexmap_1_0_1 or {});
  };
  indexmap_1_0_1_features = f: updateFeatures f (rec {
    indexmap_1_0_1.default = (f.indexmap_1_0_1.default or true);
    indexmap_1_0_1.serde =
      (f.indexmap_1_0_1.serde or false) ||
      (f.indexmap_1_0_1."serde-1" or false) ||
      (indexmap_1_0_1."serde-1" or false);
  }) [];
  iovec_0_1_2 = { features?(iovec_0_1_2_features {}) }: iovec_0_1_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  iovec_0_1_2_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = (f.iovec_0_1_2.default or true);
    libc_0_2_43.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_43_features winapi_0_2_8_features ];
  ipconfig_0_1_7 = { features?(ipconfig_0_1_7_features {}) }: ipconfig_0_1_7_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ error_chain_0_8_1 socket2_0_3_8 widestring_0_2_2 winapi_0_3_5 winreg_0_5_1 ]) else []);
  };
  ipconfig_0_1_7_features = f: updateFeatures f (rec {
    error_chain_0_8_1.default = true;
    ipconfig_0_1_7.default = (f.ipconfig_0_1_7.default or true);
    socket2_0_3_8.default = true;
    widestring_0_2_2.default = true;
    winapi_0_3_5.default = true;
    winreg_0_5_1.default = true;
  }) [ error_chain_0_8_1_features socket2_0_3_8_features widestring_0_2_2_features winapi_0_3_5_features winreg_0_5_1_features ];
  itertools_0_7_8 = { features?(itertools_0_7_8_features {}) }: itertools_0_7_8_ {
    dependencies = mapFeatures features ([ either_1_5_0 ]);
    features = mkFeatures (features.itertools_0_7_8 or {});
  };
  itertools_0_7_8_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    itertools_0_7_8.default = (f.itertools_0_7_8.default or true);
    itertools_0_7_8.use_std =
      (f.itertools_0_7_8.use_std or false) ||
      (f.itertools_0_7_8.default or false) ||
      (itertools_0_7_8.default or false);
  }) [ either_1_5_0_features ];
  itoa_0_4_2 = { features?(itoa_0_4_2_features {}) }: itoa_0_4_2_ {
    features = mkFeatures (features.itoa_0_4_2 or {});
  };
  itoa_0_4_2_features = f: updateFeatures f (rec {
    itoa_0_4_2.default = (f.itoa_0_4_2.default or true);
    itoa_0_4_2.std =
      (f.itoa_0_4_2.std or false) ||
      (f.itoa_0_4_2.default or false) ||
      (itoa_0_4_2.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_1_0 = { features?(lazy_static_1_1_0_features {}) }: lazy_static_1_1_0_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.lazy_static_1_1_0 or {});
  };
  lazy_static_1_1_0_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = (f.lazy_static_1_1_0.default or true);
    lazy_static_1_1_0.nightly =
      (f.lazy_static_1_1_0.nightly or false) ||
      (f.lazy_static_1_1_0.spin_no_std or false) ||
      (lazy_static_1_1_0.spin_no_std or false);
    lazy_static_1_1_0.spin =
      (f.lazy_static_1_1_0.spin or false) ||
      (f.lazy_static_1_1_0.spin_no_std or false) ||
      (lazy_static_1_1_0.spin_no_std or false);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  lazycell_0_6_0 = { features?(lazycell_0_6_0_features {}) }: lazycell_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_0_6_0 or {});
  };
  lazycell_0_6_0_features = f: updateFeatures f (rec {
    lazycell_0_6_0.clippy =
      (f.lazycell_0_6_0.clippy or false) ||
      (f.lazycell_0_6_0."nightly-testing" or false) ||
      (lazycell_0_6_0."nightly-testing" or false);
    lazycell_0_6_0.default = (f.lazycell_0_6_0.default or true);
    lazycell_0_6_0.nightly =
      (f.lazycell_0_6_0.nightly or false) ||
      (f.lazycell_0_6_0."nightly-testing" or false) ||
      (lazycell_0_6_0."nightly-testing" or false);
  }) [];
  lazycell_1_0_0 = { features?(lazycell_1_0_0_features {}) }: lazycell_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_1_0_0 or {});
  };
  lazycell_1_0_0_features = f: updateFeatures f (rec {
    lazycell_1_0_0.clippy =
      (f.lazycell_1_0_0.clippy or false) ||
      (f.lazycell_1_0_0."nightly-testing" or false) ||
      (lazycell_1_0_0."nightly-testing" or false);
    lazycell_1_0_0.default = (f.lazycell_1_0_0.default or true);
    lazycell_1_0_0.nightly =
      (f.lazycell_1_0_0.nightly or false) ||
      (f.lazycell_1_0_0."nightly-testing" or false) ||
      (lazycell_1_0_0."nightly-testing" or false);
  }) [];
  libc_0_2_43 = { features?(libc_0_2_43_features {}) }: libc_0_2_43_ {
    features = mkFeatures (features.libc_0_2_43 or {});
  };
  libc_0_2_43_features = f: updateFeatures f (rec {
    libc_0_2_43.default = (f.libc_0_2_43.default or true);
    libc_0_2_43.use_std =
      (f.libc_0_2_43.use_std or false) ||
      (f.libc_0_2_43.default or false) ||
      (libc_0_2_43.default or false);
  }) [];
  libflate_0_1_16 = { features?(libflate_0_1_16_features {}) }: libflate_0_1_16_ {
    dependencies = mapFeatures features ([ adler32_1_0_3 byteorder_1_2_6 crc_1_8_1 ]);
  };
  libflate_0_1_16_features = f: updateFeatures f (rec {
    adler32_1_0_3.default = true;
    byteorder_1_2_6.default = true;
    crc_1_8_1.default = true;
    libflate_0_1_16.default = (f.libflate_0_1_16.default or true);
  }) [ adler32_1_0_3_features byteorder_1_2_6_features crc_1_8_1_features ];
  libgit2_sys_0_7_7 = { features?(libgit2_sys_0_7_7_features {}) }: libgit2_sys_0_7_7_ {
    dependencies = mapFeatures features ([ libc_0_2_43 libz_sys_1_0_20 ]
      ++ (if features.libgit2_sys_0_7_7."curl-sys" or false then [ curl_sys_0_4_8 ] else [])
      ++ (if features.libgit2_sys_0_7_7."libssh2-sys" or false then [ libssh2_sys_0_2_10 ] else []))
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.libgit2_sys_0_7_7."openssl-sys" or false then [ openssl_sys_0_9_35 ] else [])) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_23 cmake_0_1_33 pkg_config_0_3_14 ]);
    features = mkFeatures (features.libgit2_sys_0_7_7 or {});
  };
  libgit2_sys_0_7_7_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    cmake_0_1_33.default = true;
    curl_sys_0_4_8.default = true;
    libc_0_2_43.default = true;
    libgit2_sys_0_7_7."curl-sys" =
      (f.libgit2_sys_0_7_7."curl-sys" or false) ||
      (f.libgit2_sys_0_7_7.curl or false) ||
      (libgit2_sys_0_7_7.curl or false);
    libgit2_sys_0_7_7."libssh2-sys" =
      (f.libgit2_sys_0_7_7."libssh2-sys" or false) ||
      (f.libgit2_sys_0_7_7.ssh or false) ||
      (libgit2_sys_0_7_7.ssh or false);
    libgit2_sys_0_7_7."openssl-sys" =
      (f.libgit2_sys_0_7_7."openssl-sys" or false) ||
      (f.libgit2_sys_0_7_7.https or false) ||
      (libgit2_sys_0_7_7.https or false);
    libgit2_sys_0_7_7.default = (f.libgit2_sys_0_7_7.default or true);
    libssh2_sys_0_2_10.default = true;
    libz_sys_1_0_20.default = true;
    openssl_sys_0_9_35.default = true;
    pkg_config_0_3_14.default = true;
  }) [ curl_sys_0_4_8_features libc_0_2_43_features libssh2_sys_0_2_10_features libz_sys_1_0_20_features cc_1_0_23_features cmake_0_1_33_features pkg_config_0_3_14_features openssl_sys_0_9_35_features ];
  libsqlite3_sys_0_9_3 = { features?(libsqlite3_sys_0_9_3_features {}) }: libsqlite3_sys_0_9_3_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ ]
      ++ (if features.libsqlite3_sys_0_9_3."pkg-config" or false then [ pkg_config_0_3_14 ] else []));
    features = mkFeatures (features.libsqlite3_sys_0_9_3 or {});
  };
  libsqlite3_sys_0_9_3_features = f: updateFeatures f (rec {
    libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" =
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_9_3.default or false) ||
      (libsqlite3_sys_0_9_3.default or false);
    libsqlite3_sys_0_9_3."pkg-config" =
      (f.libsqlite3_sys_0_9_3."pkg-config" or false) ||
      (f.libsqlite3_sys_0_9_3.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_3.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_11" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_11" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_23" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_23" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_16" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_16" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_3" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_3" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_4" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_4" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_7" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_7" or false);
    libsqlite3_sys_0_9_3.bindgen =
      (f.libsqlite3_sys_0_9_3.bindgen or false) ||
      (f.libsqlite3_sys_0_9_3.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_3.buildtime_bindgen or false);
    libsqlite3_sys_0_9_3.cc =
      (f.libsqlite3_sys_0_9_3.cc or false) ||
      (f.libsqlite3_sys_0_9_3.bundled or false) ||
      (libsqlite3_sys_0_9_3.bundled or false);
    libsqlite3_sys_0_9_3.default = (f.libsqlite3_sys_0_9_3.default or true);
    libsqlite3_sys_0_9_3.vcpkg =
      (f.libsqlite3_sys_0_9_3.vcpkg or false) ||
      (f.libsqlite3_sys_0_9_3.buildtime_bindgen or false) ||
      (libsqlite3_sys_0_9_3.buildtime_bindgen or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_11" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_11" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_23" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_23" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_6_8" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_16" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_16" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_3" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_3" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_4" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_4" or false) ||
      (f.libsqlite3_sys_0_9_3."min_sqlite_version_3_7_7" or false) ||
      (libsqlite3_sys_0_9_3."min_sqlite_version_3_7_7" or false);
    pkg_config_0_3_14.default = true;
  }) [ pkg_config_0_3_14_features ];
  libssh2_sys_0_2_10 = { features?(libssh2_sys_0_2_10_features {}) }: libssh2_sys_0_2_10_ {
    dependencies = mapFeatures features ([ libc_0_2_43 libz_sys_1_0_20 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ openssl_sys_0_9_35 ]) else []);
    buildDependencies = mapFeatures features ([ cmake_0_1_33 pkg_config_0_3_14 ]);
  };
  libssh2_sys_0_2_10_features = f: updateFeatures f (rec {
    cmake_0_1_33.default = true;
    libc_0_2_43.default = true;
    libssh2_sys_0_2_10.default = (f.libssh2_sys_0_2_10.default or true);
    libz_sys_1_0_20.default = true;
    openssl_sys_0_9_35.default = true;
    pkg_config_0_3_14.default = true;
  }) [ libc_0_2_43_features libz_sys_1_0_20_features cmake_0_1_33_features pkg_config_0_3_14_features openssl_sys_0_9_35_features ];
  libz_sys_1_0_20 = { features?(libz_sys_1_0_20_features {}) }: libz_sys_1_0_20_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_23 pkg_config_0_3_14 ]);
  };
  libz_sys_1_0_20_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    libc_0_2_43.default = true;
    libz_sys_1_0_20.default = (f.libz_sys_1_0_20.default or true);
    pkg_config_0_3_14.default = true;
  }) [ libc_0_2_43_features cc_1_0_23_features pkg_config_0_3_14_features ];
  linked_hash_map_0_4_2 = { features?(linked_hash_map_0_4_2_features {}) }: linked_hash_map_0_4_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_4_2 or {});
  };
  linked_hash_map_0_4_2_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = (f.linked_hash_map_0_4_2.default or true);
    linked_hash_map_0_4_2.heapsize =
      (f.linked_hash_map_0_4_2.heapsize or false) ||
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (linked_hash_map_0_4_2.heapsize_impl or false);
    linked_hash_map_0_4_2.serde =
      (f.linked_hash_map_0_4_2.serde or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
    linked_hash_map_0_4_2.serde_test =
      (f.linked_hash_map_0_4_2.serde_test or false) ||
      (f.linked_hash_map_0_4_2.serde_impl or false) ||
      (linked_hash_map_0_4_2.serde_impl or false);
  }) [];
  lock_api_0_1_3 = { features?(lock_api_0_1_3_features {}) }: lock_api_0_1_3_ {
    dependencies = mapFeatures features ([ scopeguard_0_3_3 ]
      ++ (if features.lock_api_0_1_3.owning_ref or false then [ owning_ref_0_3_3 ] else []));
    features = mkFeatures (features.lock_api_0_1_3 or {});
  };
  lock_api_0_1_3_features = f: updateFeatures f (rec {
    lock_api_0_1_3.default = (f.lock_api_0_1_3.default or true);
    owning_ref_0_3_3.default = true;
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ owning_ref_0_3_3_features scopeguard_0_3_3_features ];
  log_0_4_5 = { features?(log_0_4_5_features {}) }: log_0_4_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.log_0_4_5 or {});
  };
  log_0_4_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    log_0_4_5.default = (f.log_0_4_5.default or true);
  }) [ cfg_if_0_1_5_features ];
  lru_cache_0_1_1 = { features?(lru_cache_0_1_1_features {}) }: lru_cache_0_1_1_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_4_2 ]);
    features = mkFeatures (features.lru_cache_0_1_1 or {});
  };
  lru_cache_0_1_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_4_2.default = true;
    linked_hash_map_0_4_2.heapsize_impl =
      (f.linked_hash_map_0_4_2.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false);
    lru_cache_0_1_1.default = (f.lru_cache_0_1_1.default or true);
    lru_cache_0_1_1.heapsize =
      (f.lru_cache_0_1_1.heapsize or false) ||
      (f.lru_cache_0_1_1.heapsize_impl or false) ||
      (lru_cache_0_1_1.heapsize_impl or false);
  }) [ linked_hash_map_0_4_2_features ];
  matches_0_1_8 = { features?(matches_0_1_8_features {}) }: matches_0_1_8_ {};
  matches_0_1_8_features = f: updateFeatures f (rec {
    matches_0_1_8.default = (f.matches_0_1_8.default or true);
  }) [];
  md5_0_3_8 = { features?(md5_0_3_8_features {}) }: md5_0_3_8_ {};
  md5_0_3_8_features = f: updateFeatures f (rec {
    md5_0_3_8.default = (f.md5_0_3_8.default or true);
  }) [];
  memchr_2_0_2 = { features?(memchr_2_0_2_features {}) }: memchr_2_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_2.libc or false then [ libc_0_2_43 ] else []));
    features = mkFeatures (features.memchr_2_0_2 or {});
  };
  memchr_2_0_2_features = f: updateFeatures f (rec {
    libc_0_2_43.default = (f.libc_0_2_43.default or false);
    libc_0_2_43.use_std =
      (f.libc_0_2_43.use_std or false) ||
      (memchr_2_0_2.use_std or false) ||
      (f.memchr_2_0_2.use_std or false);
    memchr_2_0_2.default = (f.memchr_2_0_2.default or true);
    memchr_2_0_2.libc =
      (f.memchr_2_0_2.libc or false) ||
      (f.memchr_2_0_2.default or false) ||
      (memchr_2_0_2.default or false) ||
      (f.memchr_2_0_2.use_std or false) ||
      (memchr_2_0_2.use_std or false);
    memchr_2_0_2.use_std =
      (f.memchr_2_0_2.use_std or false) ||
      (f.memchr_2_0_2.default or false) ||
      (memchr_2_0_2.default or false);
  }) [ libc_0_2_43_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_3_9 = { features?(mime_0_3_9_features {}) }: mime_0_3_9_ {
    dependencies = mapFeatures features ([ unicase_2_1_0 ]);
  };
  mime_0_3_9_features = f: updateFeatures f (rec {
    mime_0_3_9.default = (f.mime_0_3_9.default or true);
    unicase_2_1_0.default = true;
  }) [ unicase_2_1_0_features ];
  mime_guess_2_0_0_alpha_6 = { features?(mime_guess_2_0_0_alpha_6_features {}) }: mime_guess_2_0_0_alpha_6_ {
    dependencies = mapFeatures features ([ mime_0_3_9 phf_0_7_23 unicase_1_4_2 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_23 unicase_1_4_2 ]);
    features = mkFeatures (features.mime_guess_2_0_0_alpha_6 or {});
  };
  mime_guess_2_0_0_alpha_6_features = f: updateFeatures f (rec {
    mime_0_3_9.default = true;
    mime_guess_2_0_0_alpha_6.default = (f.mime_guess_2_0_0_alpha_6.default or true);
    phf_0_7_23.default = true;
    phf_0_7_23.unicase = true;
    phf_codegen_0_7_23.default = true;
    unicase_1_4_2.default = true;
  }) [ mime_0_3_9_features phf_0_7_23_features unicase_1_4_2_features phf_codegen_0_7_23_features unicase_1_4_2_features ];
  miniz_sys_0_1_10 = { features?(miniz_sys_0_1_10_features {}) }: miniz_sys_0_1_10_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_23 ]);
  };
  miniz_sys_0_1_10_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    libc_0_2_43.default = true;
    miniz_sys_0_1_10.default = (f.miniz_sys_0_1_10.default or true);
  }) [ libc_0_2_43_features cc_1_0_23_features ];
  mio_0_6_15 = { features?(mio_0_6_15_features {}) }: mio_0_6_15_ {
    dependencies = mapFeatures features ([ iovec_0_1_2 lazycell_0_6_0 log_0_4_5 net2_0_2_33 slab_0_4_1 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 fuchsia_zircon_sys_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 miow_0_2_1 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.mio_0_6_15 or {});
  };
  mio_0_6_15_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    fuchsia_zircon_sys_0_3_3.default = true;
    iovec_0_1_2.default = true;
    kernel32_sys_0_2_2.default = true;
    lazycell_0_6_0.default = true;
    libc_0_2_43.default = true;
    log_0_4_5.default = true;
    mio_0_6_15."with-deprecated" =
      (f.mio_0_6_15."with-deprecated" or false) ||
      (f.mio_0_6_15.default or false) ||
      (mio_0_6_15.default or false);
    mio_0_6_15.default = (f.mio_0_6_15.default or true);
    miow_0_2_1.default = true;
    net2_0_2_33.default = true;
    slab_0_4_1.default = true;
    winapi_0_2_8.default = true;
  }) [ iovec_0_1_2_features lazycell_0_6_0_features log_0_4_5_features net2_0_2_33_features slab_0_4_1_features fuchsia_zircon_0_3_3_features fuchsia_zircon_sys_0_3_3_features libc_0_2_43_features kernel32_sys_0_2_2_features miow_0_2_1_features winapi_0_2_8_features ];
  mio_uds_0_6_7 = { features?(mio_uds_0_6_7_features {}) }: mio_uds_0_6_7_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ iovec_0_1_2 libc_0_2_43 mio_0_6_15 ]) else []);
  };
  mio_uds_0_6_7_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = true;
    libc_0_2_43.default = true;
    mio_0_6_15.default = true;
    mio_uds_0_6_7.default = (f.mio_uds_0_6_7.default or true);
  }) [ iovec_0_1_2_features libc_0_2_43_features mio_0_6_15_features ];
  miow_0_2_1 = { features?(miow_0_2_1_features {}) }: miow_0_2_1_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 net2_0_2_33 winapi_0_2_8 ws2_32_sys_0_2_1 ]);
  };
  miow_0_2_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    miow_0_2_1.default = (f.miow_0_2_1.default or true);
    net2_0_2_33.default = (f.net2_0_2_33.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ kernel32_sys_0_2_2_features net2_0_2_33_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  native_tls_0_1_5 = { features?(native_tls_0_1_5_features {}) }: native_tls_0_1_5_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([ libc_0_2_43 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_7 ]) else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then mapFeatures features ([ openssl_0_9_24 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ schannel_0_1_13 ]) else []);
  };
  native_tls_0_1_5_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    libc_0_2_43.default = true;
    native_tls_0_1_5.default = (f.native_tls_0_1_5.default or true);
    openssl_0_9_24.default = true;
    schannel_0_1_13.default = true;
    security_framework_0_1_16."OSX_10_8" = true;
    security_framework_0_1_16.default = true;
    security_framework_sys_0_1_16.default = true;
    tempdir_0_3_7.default = true;
  }) [ lazy_static_0_2_11_features libc_0_2_43_features security_framework_0_1_16_features security_framework_sys_0_1_16_features tempdir_0_3_7_features openssl_0_9_24_features schannel_0_1_13_features ];
  net2_0_2_33 = { features?(net2_0_2_33_features {}) }: net2_0_2_33_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ])
      ++ (if kernel == "redox" || (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.net2_0_2_33 or {});
  };
  net2_0_2_33_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    net2_0_2_33.default = (f.net2_0_2_33.default or true);
    net2_0_2_33.duration =
      (f.net2_0_2_33.duration or false) ||
      (f.net2_0_2_33.default or false) ||
      (net2_0_2_33.default or false);
    winapi_0_3_5."winsock2" = true;
    winapi_0_3_5."ws2def" = true;
    winapi_0_3_5."ws2ipdef" = true;
    winapi_0_3_5."ws2tcpip" = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.handleapi = true;
  }) [ cfg_if_0_1_5_features libc_0_2_43_features winapi_0_3_5_features ];
  nix_vuln_scanner_0_1_0 = { features?(nix_vuln_scanner_0_1_0_features {}) }: nix_vuln_scanner_0_1_0_ {
    dependencies = mapFeatures features ([ actix_web_0_7_5 brotli_2_5_0 chrono_0_4_6 clap_2_32_0 diesel_1_3_2 error_chain_0_12_0 fern_0_5_6 fs2_0_4_3 git2_0_7_5 itertools_0_7_8 lazy_static_1_1_0 libflate_0_1_16 log_0_4_5 md5_0_3_8 num_cpus_1_8_0 openat_0_1_16 rayon_1_0_2 regex_1_0_4 reqwest_0_8_8 serde_1_0_76 serde_derive_1_0_76 serde_json_1_0_26 threadpool_1_7_1 time_0_1_40 ]);
  };
  nix_vuln_scanner_0_1_0_features = f: updateFeatures f (rec {
    actix_web_0_7_5.default = true;
    brotli_2_5_0.default = true;
    chrono_0_4_6.default = true;
    clap_2_32_0.default = true;
    diesel_1_3_2.default = true;
    diesel_1_3_2.sqlite = true;
    error_chain_0_12_0.default = true;
    fern_0_5_6.default = true;
    fs2_0_4_3.default = true;
    git2_0_7_5.default = true;
    itertools_0_7_8.default = true;
    lazy_static_1_1_0.default = true;
    libflate_0_1_16.default = true;
    log_0_4_5.default = true;
    md5_0_3_8.default = true;
    nix_vuln_scanner_0_1_0.default = (f.nix_vuln_scanner_0_1_0.default or true);
    num_cpus_1_8_0.default = true;
    openat_0_1_16.default = true;
    rayon_1_0_2.default = true;
    regex_1_0_4.default = true;
    reqwest_0_8_8.default = true;
    serde_1_0_76.default = true;
    serde_derive_1_0_76.default = true;
    serde_json_1_0_26.default = true;
    threadpool_1_7_1.default = true;
    time_0_1_40.default = true;
  }) [ actix_web_0_7_5_features brotli_2_5_0_features chrono_0_4_6_features clap_2_32_0_features diesel_1_3_2_features error_chain_0_12_0_features fern_0_5_6_features fs2_0_4_3_features git2_0_7_5_features itertools_0_7_8_features lazy_static_1_1_0_features libflate_0_1_16_features log_0_4_5_features md5_0_3_8_features num_cpus_1_8_0_features openat_0_1_16_features rayon_1_0_2_features regex_1_0_4_features reqwest_0_8_8_features serde_1_0_76_features serde_derive_1_0_76_features serde_json_1_0_26_features threadpool_1_7_1_features time_0_1_40_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12."nodrop-union" =
      (f.nodrop_0_1_12."nodrop-union" or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  num_integer_0_1_39 = { features?(num_integer_0_1_39_features {}) }: num_integer_0_1_39_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
    features = mkFeatures (features.num_integer_0_1_39 or {});
  };
  num_integer_0_1_39_features = f: updateFeatures f (rec {
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or true);
    num_integer_0_1_39.std =
      (f.num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.default or false) ||
      (num_integer_0_1_39.default or false);
    num_traits_0_2_5."i128" =
      (f.num_traits_0_2_5."i128" or false) ||
      (num_integer_0_1_39."i128" or false) ||
      (f.num_integer_0_1_39."i128" or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.std or false);
  }) [ num_traits_0_2_5_features ];
  num_traits_0_2_5 = { features?(num_traits_0_2_5_features {}) }: num_traits_0_2_5_ {
    features = mkFeatures (features.num_traits_0_2_5 or {});
  };
  num_traits_0_2_5_features = f: updateFeatures f (rec {
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or true);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (f.num_traits_0_2_5.default or false) ||
      (num_traits_0_2_5.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_43_features ];
  openat_0_1_16 = { features?(openat_0_1_16_features {}) }: openat_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  openat_0_1_16_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    openat_0_1_16.default = (f.openat_0_1_16.default or true);
  }) [ libc_0_2_43_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_1_0 libc_0_2_43 openssl_sys_0_9_35 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_1_0.default = true;
    libc_0_2_43.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_35.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_1_0_features libc_0_2_43_features openssl_sys_0_9_35_features ];
  openssl_probe_0_1_2 = { features?(openssl_probe_0_1_2_features {}) }: openssl_probe_0_1_2_ {};
  openssl_probe_0_1_2_features = f: updateFeatures f (rec {
    openssl_probe_0_1_2.default = (f.openssl_probe_0_1_2.default or true);
  }) [];
  openssl_sys_0_9_35 = { features?(openssl_sys_0_9_35_features {}) }: openssl_sys_0_9_35_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_23 pkg_config_0_3_14 ]);
    features = mkFeatures (features.openssl_sys_0_9_35 or {});
  };
  openssl_sys_0_9_35_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    libc_0_2_43.default = true;
    openssl_sys_0_9_35."openssl-src" =
      (f.openssl_sys_0_9_35."openssl-src" or false) ||
      (f.openssl_sys_0_9_35.vendored or false) ||
      (openssl_sys_0_9_35.vendored or false);
    openssl_sys_0_9_35.default = (f.openssl_sys_0_9_35.default or true);
    pkg_config_0_3_14.default = true;
  }) [ libc_0_2_43_features cc_1_0_23_features pkg_config_0_3_14_features ];
  owning_ref_0_3_3 = { features?(owning_ref_0_3_3_features {}) }: owning_ref_0_3_3_ {
    dependencies = mapFeatures features ([ stable_deref_trait_1_1_1 ]);
  };
  owning_ref_0_3_3_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = (f.owning_ref_0_3_3.default or true);
    stable_deref_trait_1_1_1.default = true;
  }) [ stable_deref_trait_1_1_1_features ];
  parking_lot_0_6_4 = { features?(parking_lot_0_6_4_features {}) }: parking_lot_0_6_4_ {
    dependencies = mapFeatures features ([ lock_api_0_1_3 parking_lot_core_0_3_0 ]);
    features = mkFeatures (features.parking_lot_0_6_4 or {});
  };
  parking_lot_0_6_4_features = f: updateFeatures f (rec {
    lock_api_0_1_3.default = true;
    lock_api_0_1_3.nightly =
      (f.lock_api_0_1_3.nightly or false) ||
      (parking_lot_0_6_4.nightly or false) ||
      (f.parking_lot_0_6_4.nightly or false);
    lock_api_0_1_3.owning_ref =
      (f.lock_api_0_1_3.owning_ref or false) ||
      (parking_lot_0_6_4.owning_ref or false) ||
      (f.parking_lot_0_6_4.owning_ref or false);
    parking_lot_0_6_4.default = (f.parking_lot_0_6_4.default or true);
    parking_lot_0_6_4.owning_ref =
      (f.parking_lot_0_6_4.owning_ref or false) ||
      (f.parking_lot_0_6_4.default or false) ||
      (parking_lot_0_6_4.default or false);
    parking_lot_core_0_3_0.deadlock_detection =
      (f.parking_lot_core_0_3_0.deadlock_detection or false) ||
      (parking_lot_0_6_4.deadlock_detection or false) ||
      (f.parking_lot_0_6_4.deadlock_detection or false);
    parking_lot_core_0_3_0.default = true;
    parking_lot_core_0_3_0.nightly =
      (f.parking_lot_core_0_3_0.nightly or false) ||
      (parking_lot_0_6_4.nightly or false) ||
      (f.parking_lot_0_6_4.nightly or false);
  }) [ lock_api_0_1_3_features parking_lot_core_0_3_0_features ];
  parking_lot_core_0_3_0 = { features?(parking_lot_core_0_3_0_features {}) }: parking_lot_core_0_3_0_ {
    dependencies = mapFeatures features ([ rand_0_5_5 smallvec_0_6_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.parking_lot_core_0_3_0 or {});
  };
  parking_lot_core_0_3_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    parking_lot_core_0_3_0."thread-id" =
      (f.parking_lot_core_0_3_0."thread-id" or false) ||
      (f.parking_lot_core_0_3_0.deadlock_detection or false) ||
      (parking_lot_core_0_3_0.deadlock_detection or false);
    parking_lot_core_0_3_0.backtrace =
      (f.parking_lot_core_0_3_0.backtrace or false) ||
      (f.parking_lot_core_0_3_0.deadlock_detection or false) ||
      (parking_lot_core_0_3_0.deadlock_detection or false);
    parking_lot_core_0_3_0.default = (f.parking_lot_core_0_3_0.default or true);
    parking_lot_core_0_3_0.petgraph =
      (f.parking_lot_core_0_3_0.petgraph or false) ||
      (f.parking_lot_core_0_3_0.deadlock_detection or false) ||
      (parking_lot_core_0_3_0.deadlock_detection or false);
    rand_0_5_5.default = true;
    smallvec_0_6_5.default = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntstatus = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
    winapi_0_3_5.winnt = true;
  }) [ rand_0_5_5_features smallvec_0_6_5_features libc_0_2_43_features winapi_0_3_5_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  phf_0_7_23 = { features?(phf_0_7_23_features {}) }: phf_0_7_23_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_23 ]);
    features = mkFeatures (features.phf_0_7_23 or {});
  };
  phf_0_7_23_features = f: updateFeatures f (rec {
    phf_0_7_23.default = (f.phf_0_7_23.default or true);
    phf_shared_0_7_23.core =
      (f.phf_shared_0_7_23.core or false) ||
      (phf_0_7_23.core or false) ||
      (f.phf_0_7_23.core or false);
    phf_shared_0_7_23.default = true;
    phf_shared_0_7_23.unicase =
      (f.phf_shared_0_7_23.unicase or false) ||
      (phf_0_7_23.unicase or false) ||
      (f.phf_0_7_23.unicase or false);
  }) [ phf_shared_0_7_23_features ];
  phf_codegen_0_7_23 = { features?(phf_codegen_0_7_23_features {}) }: phf_codegen_0_7_23_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_23 phf_shared_0_7_23 ]);
  };
  phf_codegen_0_7_23_features = f: updateFeatures f (rec {
    phf_codegen_0_7_23.default = (f.phf_codegen_0_7_23.default or true);
    phf_generator_0_7_23.default = true;
    phf_shared_0_7_23.default = true;
  }) [ phf_generator_0_7_23_features phf_shared_0_7_23_features ];
  phf_generator_0_7_23 = { features?(phf_generator_0_7_23_features {}) }: phf_generator_0_7_23_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_23 rand_0_5_5 ]);
  };
  phf_generator_0_7_23_features = f: updateFeatures f (rec {
    phf_generator_0_7_23.default = (f.phf_generator_0_7_23.default or true);
    phf_shared_0_7_23.default = true;
    rand_0_5_5.default = true;
  }) [ phf_shared_0_7_23_features rand_0_5_5_features ];
  phf_shared_0_7_23 = { features?(phf_shared_0_7_23_features {}) }: phf_shared_0_7_23_ {
    dependencies = mapFeatures features ([ siphasher_0_2_3 ]
      ++ (if features.phf_shared_0_7_23.unicase or false then [ unicase_1_4_2 ] else []));
    features = mkFeatures (features.phf_shared_0_7_23 or {});
  };
  phf_shared_0_7_23_features = f: updateFeatures f (rec {
    phf_shared_0_7_23.default = (f.phf_shared_0_7_23.default or true);
    siphasher_0_2_3.default = true;
    unicase_1_4_2.default = true;
  }) [ siphasher_0_2_3_features unicase_1_4_2_features ];
  pkg_config_0_3_14 = { features?(pkg_config_0_3_14_features {}) }: pkg_config_0_3_14_ {};
  pkg_config_0_3_14_features = f: updateFeatures f (rec {
    pkg_config_0_3_14.default = (f.pkg_config_0_3_14.default or true);
  }) [];
  proc_macro2_0_3_8 = { features?(proc_macro2_0_3_8_features {}) }: proc_macro2_0_3_8_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_3_8 or {});
  };
  proc_macro2_0_3_8_features = f: updateFeatures f (rec {
    proc_macro2_0_3_8."proc-macro" =
      (f.proc_macro2_0_3_8."proc-macro" or false) ||
      (f.proc_macro2_0_3_8.default or false) ||
      (proc_macro2_0_3_8.default or false) ||
      (f.proc_macro2_0_3_8.nightly or false) ||
      (proc_macro2_0_3_8.nightly or false);
    proc_macro2_0_3_8.default = (f.proc_macro2_0_3_8.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  proc_macro2_0_4_17 = { features?(proc_macro2_0_4_17_features {}) }: proc_macro2_0_4_17_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_17 or {});
  };
  proc_macro2_0_4_17_features = f: updateFeatures f (rec {
    proc_macro2_0_4_17."proc-macro" =
      (f.proc_macro2_0_4_17."proc-macro" or false) ||
      (f.proc_macro2_0_4_17.default or false) ||
      (proc_macro2_0_4_17.default or false) ||
      (f.proc_macro2_0_4_17.nightly or false) ||
      (proc_macro2_0_4_17.nightly or false);
    proc_macro2_0_4_17.default = (f.proc_macro2_0_4_17.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quick_error_1_2_2 = { features?(quick_error_1_2_2_features {}) }: quick_error_1_2_2_ {};
  quick_error_1_2_2_features = f: updateFeatures f (rec {
    quick_error_1_2_2.default = (f.quick_error_1_2_2.default or true);
  }) [];
  quote_0_5_2 = { features?(quote_0_5_2_features {}) }: quote_0_5_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_8 ]);
    features = mkFeatures (features.quote_0_5_2 or {});
  };
  quote_0_5_2_features = f: updateFeatures f (rec {
    proc_macro2_0_3_8."proc-macro" =
      (f.proc_macro2_0_3_8."proc-macro" or false) ||
      (quote_0_5_2."proc-macro" or false) ||
      (f.quote_0_5_2."proc-macro" or false);
    proc_macro2_0_3_8.default = (f.proc_macro2_0_3_8.default or false);
    quote_0_5_2."proc-macro" =
      (f.quote_0_5_2."proc-macro" or false) ||
      (f.quote_0_5_2.default or false) ||
      (quote_0_5_2.default or false);
    quote_0_5_2.default = (f.quote_0_5_2.default or true);
  }) [ proc_macro2_0_3_8_features ];
  quote_0_6_8 = { features?(quote_0_6_8_features {}) }: quote_0_6_8_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 ]);
    features = mkFeatures (features.quote_0_6_8 or {});
  };
  quote_0_6_8_features = f: updateFeatures f (rec {
    proc_macro2_0_4_17."proc-macro" =
      (f.proc_macro2_0_4_17."proc-macro" or false) ||
      (quote_0_6_8."proc-macro" or false) ||
      (f.quote_0_6_8."proc-macro" or false);
    proc_macro2_0_4_17.default = (f.proc_macro2_0_4_17.default or false);
    quote_0_6_8."proc-macro" =
      (f.quote_0_6_8."proc-macro" or false) ||
      (f.quote_0_6_8.default or false) ||
      (quote_0_6_8.default or false);
    quote_0_6_8.default = (f.quote_0_6_8.default or true);
  }) [ proc_macro2_0_4_17_features ];
  rand_0_4_3 = { features?(rand_0_4_3_features {}) }: rand_0_4_3_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_3.libc or false then [ libc_0_2_43 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.rand_0_4_3 or {});
  };
  rand_0_4_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_43.default = true;
    rand_0_4_3."i128_support" =
      (f.rand_0_4_3."i128_support" or false) ||
      (f.rand_0_4_3.nightly or false) ||
      (rand_0_4_3.nightly or false);
    rand_0_4_3.default = (f.rand_0_4_3.default or true);
    rand_0_4_3.libc =
      (f.rand_0_4_3.libc or false) ||
      (f.rand_0_4_3.std or false) ||
      (rand_0_4_3.std or false);
    rand_0_4_3.std =
      (f.rand_0_4_3.std or false) ||
      (f.rand_0_4_3.default or false) ||
      (rand_0_4_3.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_43_features winapi_0_3_5_features ];
  rand_0_5_5 = { features?(rand_0_5_5_features {}) }: rand_0_5_5_ {
    dependencies = mapFeatures features ([ rand_core_0_2_1 ])
      ++ (if kernel == "cloudabi" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.cloudabi or false then [ cloudabi_0_0_3 ] else [])) else [])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5."fuchsia-zircon" or false then [ fuchsia_zircon_0_3_3 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.libc or false then [ libc_0_2_43 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.winapi or false then [ winapi_0_3_5 ] else [])) else [])
      ++ (if kernel == "wasm32-unknown-unknown" then mapFeatures features ([]) else []);
    features = mkFeatures (features.rand_0_5_5 or {});
  };
  rand_0_5_5_features = f: updateFeatures f (rec {
    cloudabi_0_0_3.default = true;
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_43.default = true;
    rand_0_5_5."fuchsia-zircon" =
      (f.rand_0_5_5."fuchsia-zircon" or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5."i128_support" =
      (f.rand_0_5_5."i128_support" or false) ||
      (f.rand_0_5_5.nightly or false) ||
      (rand_0_5_5.nightly or false);
    rand_0_5_5.alloc =
      (f.rand_0_5_5.alloc or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.cloudabi =
      (f.rand_0_5_5.cloudabi or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.default = (f.rand_0_5_5.default or true);
    rand_0_5_5.libc =
      (f.rand_0_5_5.libc or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.serde =
      (f.rand_0_5_5.serde or false) ||
      (f.rand_0_5_5."serde1" or false) ||
      (rand_0_5_5."serde1" or false);
    rand_0_5_5.serde_derive =
      (f.rand_0_5_5.serde_derive or false) ||
      (f.rand_0_5_5."serde1" or false) ||
      (rand_0_5_5."serde1" or false);
    rand_0_5_5.std =
      (f.rand_0_5_5.std or false) ||
      (f.rand_0_5_5.default or false) ||
      (rand_0_5_5.default or false);
    rand_0_5_5.winapi =
      (f.rand_0_5_5.winapi or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_core_0_2_1."serde1" =
      (f.rand_core_0_2_1."serde1" or false) ||
      (rand_0_5_5."serde1" or false) ||
      (f.rand_0_5_5."serde1" or false);
    rand_core_0_2_1.alloc =
      (f.rand_core_0_2_1.alloc or false) ||
      (rand_0_5_5.alloc or false) ||
      (f.rand_0_5_5.alloc or false);
    rand_core_0_2_1.default = (f.rand_core_0_2_1.default or false);
    rand_core_0_2_1.std =
      (f.rand_core_0_2_1.std or false) ||
      (rand_0_5_5.std or false) ||
      (f.rand_0_5_5.std or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ rand_core_0_2_1_features cloudabi_0_0_3_features fuchsia_zircon_0_3_3_features libc_0_2_43_features winapi_0_3_5_features ];
  rand_core_0_2_1 = { features?(rand_core_0_2_1_features {}) }: rand_core_0_2_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.rand_core_0_2_1 or {});
  };
  rand_core_0_2_1_features = f: updateFeatures f (rec {
    rand_core_0_2_1.alloc =
      (f.rand_core_0_2_1.alloc or false) ||
      (f.rand_core_0_2_1.std or false) ||
      (rand_core_0_2_1.std or false);
    rand_core_0_2_1.default = (f.rand_core_0_2_1.default or true);
    rand_core_0_2_1.serde =
      (f.rand_core_0_2_1.serde or false) ||
      (f.rand_core_0_2_1."serde1" or false) ||
      (rand_core_0_2_1."serde1" or false);
    rand_core_0_2_1.serde_derive =
      (f.rand_core_0_2_1.serde_derive or false) ||
      (f.rand_core_0_2_1."serde1" or false) ||
      (rand_core_0_2_1."serde1" or false);
    rand_core_0_2_1.std =
      (f.rand_core_0_2_1.std or false) ||
      (f.rand_core_0_2_1.default or false) ||
      (rand_core_0_2_1.default or false);
  }) [];
  rayon_1_0_2 = { features?(rayon_1_0_2_features {}) }: rayon_1_0_2_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_2_0 either_1_5_0 rayon_core_1_4_1 ]);
  };
  rayon_1_0_2_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = true;
    either_1_5_0.default = (f.either_1_5_0.default or false);
    rayon_1_0_2.default = (f.rayon_1_0_2.default or true);
    rayon_core_1_4_1.default = true;
  }) [ crossbeam_deque_0_2_0_features either_1_5_0_features rayon_core_1_4_1_features ];
  rayon_core_1_4_1 = { features?(rayon_core_1_4_1_features {}) }: rayon_core_1_4_1_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_2_0 lazy_static_1_1_0 libc_0_2_43 num_cpus_1_8_0 ]);
  };
  rayon_core_1_4_1_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = true;
    lazy_static_1_1_0.default = true;
    libc_0_2_43.default = true;
    num_cpus_1_8_0.default = true;
    rayon_core_1_4_1.default = (f.rayon_core_1_4_1.default or true);
  }) [ crossbeam_deque_0_2_0_features lazy_static_1_1_0_features libc_0_2_43_features num_cpus_1_8_0_features ];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_40 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_40_features ];
  regex_1_0_4 = { features?(regex_1_0_4_features {}) }: regex_1_0_4_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_8 memchr_2_0_2 regex_syntax_0_6_2 thread_local_0_3_6 utf8_ranges_1_0_1 ]);
    features = mkFeatures (features.regex_1_0_4 or {});
  };
  regex_1_0_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_8.default = true;
    memchr_2_0_2.default = true;
    regex_1_0_4.default = (f.regex_1_0_4.default or true);
    regex_1_0_4.pattern =
      (f.regex_1_0_4.pattern or false) ||
      (f.regex_1_0_4.unstable or false) ||
      (regex_1_0_4.unstable or false);
    regex_1_0_4.use_std =
      (f.regex_1_0_4.use_std or false) ||
      (f.regex_1_0_4.default or false) ||
      (regex_1_0_4.default or false);
    regex_syntax_0_6_2.default = true;
    thread_local_0_3_6.default = true;
    utf8_ranges_1_0_1.default = true;
  }) [ aho_corasick_0_6_8_features memchr_2_0_2_features regex_syntax_0_6_2_features thread_local_0_3_6_features utf8_ranges_1_0_1_features ];
  regex_syntax_0_6_2 = { features?(regex_syntax_0_6_2_features {}) }: regex_syntax_0_6_2_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_6_2_features = f: updateFeatures f (rec {
    regex_syntax_0_6_2.default = (f.regex_syntax_0_6_2.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  relay_0_1_1 = { features?(relay_0_1_1_features {}) }: relay_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  relay_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    relay_0_1_1.default = (f.relay_0_1_1.default or true);
  }) [ futures_0_1_23_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ winapi_0_3_5_features ];
  reqwest_0_8_8 = { features?(reqwest_0_8_8_features {}) }: reqwest_0_8_8_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 encoding_rs_0_8_6 futures_0_1_23 hyper_0_11_27 hyper_tls_0_1_4 libflate_0_1_16 log_0_4_5 mime_guess_2_0_0_alpha_6 native_tls_0_1_5 serde_1_0_76 serde_json_1_0_26 serde_urlencoded_0_5_3 tokio_core_0_1_17 tokio_io_0_1_8 tokio_tls_0_1_4 url_1_7_1 uuid_0_6_5 ]);
    features = mkFeatures (features.reqwest_0_8_8 or {});
  };
  reqwest_0_8_8_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    encoding_rs_0_8_6.default = true;
    futures_0_1_23.default = true;
    hyper_0_11_27.default = (f.hyper_0_11_27.default or false);
    hyper_tls_0_1_4.default = true;
    libflate_0_1_16.default = true;
    log_0_4_5.default = true;
    mime_guess_2_0_0_alpha_6.default = true;
    native_tls_0_1_5.default = true;
    reqwest_0_8_8.default = (f.reqwest_0_8_8.default or true);
    serde_1_0_76.default = true;
    serde_json_1_0_26.default = true;
    serde_urlencoded_0_5_3.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_8.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or false);
    url_1_7_1.default = true;
    uuid_0_6_5."v4" = true;
    uuid_0_6_5.default = true;
  }) [ bytes_0_4_10_features encoding_rs_0_8_6_features futures_0_1_23_features hyper_0_11_27_features hyper_tls_0_1_4_features libflate_0_1_16_features log_0_4_5_features mime_guess_2_0_0_alpha_6_features native_tls_0_1_5_features serde_1_0_76_features serde_json_1_0_26_features serde_urlencoded_0_5_3_features tokio_core_0_1_17_features tokio_io_0_1_8_features tokio_tls_0_1_4_features url_1_7_1_features uuid_0_6_5_features ];
  resolv_conf_0_6_1 = { features?(resolv_conf_0_6_1_features {}) }: resolv_conf_0_6_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_2 ]
      ++ (if features.resolv_conf_0_6_1.hostname or false then [ hostname_0_1_5 ] else []));
    features = mkFeatures (features.resolv_conf_0_6_1 or {});
  };
  resolv_conf_0_6_1_features = f: updateFeatures f (rec {
    hostname_0_1_5.default = true;
    quick_error_1_2_2.default = true;
    resolv_conf_0_6_1.default = (f.resolv_conf_0_6_1.default or true);
    resolv_conf_0_6_1.hostname =
      (f.resolv_conf_0_6_1.hostname or false) ||
      (f.resolv_conf_0_6_1.system or false) ||
      (resolv_conf_0_6_1.system or false);
  }) [ hostname_0_1_5_features quick_error_1_2_2_features ];
  ring_0_13_2 = { features?(ring_0_13_2_features {}) }: ring_0_13_2_ {
    dependencies = mapFeatures features ([ untrusted_0_6_2 ])
      ++ (if kernel == "redox" || (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin" || kernel == "ios") then mapFeatures features ([ lazy_static_1_1_0 ]) else [])
      ++ (if kernel == "linux" then mapFeatures features ([ libc_0_2_43 ]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_23 ]);
    features = mkFeatures (features.ring_0_13_2 or {});
  };
  ring_0_13_2_features = f: updateFeatures f (rec {
    cc_1_0_23.default = true;
    lazy_static_1_1_0.default = true;
    libc_0_2_43.default = true;
    ring_0_13_2.default = (f.ring_0_13_2.default or true);
    ring_0_13_2.dev_urandom_fallback =
      (f.ring_0_13_2.dev_urandom_fallback or false) ||
      (f.ring_0_13_2.default or false) ||
      (ring_0_13_2.default or false);
    ring_0_13_2.use_heap =
      (f.ring_0_13_2.use_heap or false) ||
      (f.ring_0_13_2.default or false) ||
      (ring_0_13_2.default or false) ||
      (f.ring_0_13_2.rsa_signing or false) ||
      (ring_0_13_2.rsa_signing or false);
    untrusted_0_6_2.default = true;
  }) [ untrusted_0_6_2_features cc_1_0_23_features lazy_static_1_1_0_features libc_0_2_43_features ];
  rustc_demangle_0_1_9 = { features?(rustc_demangle_0_1_9_features {}) }: rustc_demangle_0_1_9_ {};
  rustc_demangle_0_1_9_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_9.default = (f.rustc_demangle_0_1_9.default or true);
  }) [];
  ryu_0_2_6 = { features?(ryu_0_2_6_features {}) }: ryu_0_2_6_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.ryu_0_2_6 or {});
  };
  ryu_0_2_6_features = f: updateFeatures f (rec {
    ryu_0_2_6.default = (f.ryu_0_2_6.default or true);
  }) [];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  schannel_0_1_13 = { features?(schannel_0_1_13_features {}) }: schannel_0_1_13_ {
    dependencies = mapFeatures features ([ lazy_static_1_1_0 winapi_0_3_5 ]);
  };
  schannel_0_1_13_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = true;
    schannel_0_1_13.default = (f.schannel_0_1_13.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.lmcons = true;
    winapi_0_3_5.minschannel = true;
    winapi_0_3_5.schannel = true;
    winapi_0_3_5.securitybaseapi = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.wincrypt = true;
    winapi_0_3_5.winerror = true;
  }) [ lazy_static_1_1_0_features winapi_0_3_5_features ];
  scoped_tls_0_1_2 = { features?(scoped_tls_0_1_2_features {}) }: scoped_tls_0_1_2_ {
    features = mkFeatures (features.scoped_tls_0_1_2 or {});
  };
  scoped_tls_0_1_2_features = f: updateFeatures f (rec {
    scoped_tls_0_1_2.default = (f.scoped_tls_0_1_2.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  security_framework_0_1_16 = { features?(security_framework_0_1_16_features {}) }: security_framework_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_43 security_framework_sys_0_1_16 ]);
    features = mkFeatures (features.security_framework_0_1_16 or {});
  };
  security_framework_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = true;
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
    security_framework_0_1_16."OSX_10_10" =
      (f.security_framework_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_11" or false);
    security_framework_0_1_16."OSX_10_11" =
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_0_1_16."OSX_10_12" or false) ||
      (security_framework_0_1_16."OSX_10_12" or false);
    security_framework_0_1_16."OSX_10_8" =
      (f.security_framework_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_0_1_16."OSX_10_9" or false) ||
      (security_framework_0_1_16."OSX_10_9" or false);
    security_framework_0_1_16."OSX_10_9" =
      (f.security_framework_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_0_1_16."OSX_10_10" or false) ||
      (security_framework_0_1_16."OSX_10_10" or false);
    security_framework_0_1_16.default = (f.security_framework_0_1_16.default or true);
    security_framework_sys_0_1_16."OSX_10_10" =
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (security_framework_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_0_1_16."OSX_10_10" or false);
    security_framework_sys_0_1_16."OSX_10_11" =
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_0_1_16."OSX_10_11" or false) ||
      (security_framework_0_1_16."OSX_10_12" or false) ||
      (f.security_framework_0_1_16."OSX_10_12" or false);
    security_framework_sys_0_1_16."OSX_10_8" =
      (f.security_framework_sys_0_1_16."OSX_10_8" or false) ||
      (security_framework_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_0_1_16."OSX_10_8" or false);
    security_framework_sys_0_1_16."OSX_10_9" =
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (security_framework_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_0_1_16."OSX_10_9" or false);
    security_framework_sys_0_1_16.default = true;
  }) [ core_foundation_0_2_3_features core_foundation_sys_0_2_3_features libc_0_2_43_features security_framework_sys_0_1_16_features ];
  security_framework_sys_0_1_16 = { features?(security_framework_sys_0_1_16_features {}) }: security_framework_sys_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_43 ]);
    features = mkFeatures (features.security_framework_sys_0_1_16 or {});
  };
  security_framework_sys_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
    security_framework_sys_0_1_16."OSX_10_10" =
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (security_framework_sys_0_1_16."OSX_10_11" or false);
    security_framework_sys_0_1_16."OSX_10_11" =
      (f.security_framework_sys_0_1_16."OSX_10_11" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_12" or false) ||
      (security_framework_sys_0_1_16."OSX_10_12" or false);
    security_framework_sys_0_1_16."OSX_10_8" =
      (f.security_framework_sys_0_1_16."OSX_10_8" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (security_framework_sys_0_1_16."OSX_10_9" or false);
    security_framework_sys_0_1_16."OSX_10_9" =
      (f.security_framework_sys_0_1_16."OSX_10_9" or false) ||
      (f.security_framework_sys_0_1_16."OSX_10_10" or false) ||
      (security_framework_sys_0_1_16."OSX_10_10" or false);
    security_framework_sys_0_1_16.default = (f.security_framework_sys_0_1_16.default or true);
  }) [ core_foundation_sys_0_2_3_features libc_0_2_43_features ];
  serde_1_0_76 = { features?(serde_1_0_76_features {}) }: serde_1_0_76_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_76 or {});
  };
  serde_1_0_76_features = f: updateFeatures f (rec {
    serde_1_0_76.default = (f.serde_1_0_76.default or true);
    serde_1_0_76.serde_derive =
      (f.serde_1_0_76.serde_derive or false) ||
      (f.serde_1_0_76.derive or false) ||
      (serde_1_0_76.derive or false);
    serde_1_0_76.std =
      (f.serde_1_0_76.std or false) ||
      (f.serde_1_0_76.default or false) ||
      (serde_1_0_76.default or false);
    serde_1_0_76.unstable =
      (f.serde_1_0_76.unstable or false) ||
      (f.serde_1_0_76.alloc or false) ||
      (serde_1_0_76.alloc or false);
  }) [];
  serde_derive_1_0_76 = { features?(serde_derive_1_0_76_features {}) }: serde_derive_1_0_76_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 quote_0_6_8 syn_0_14_9 ]);
    features = mkFeatures (features.serde_derive_1_0_76 or {});
  };
  serde_derive_1_0_76_features = f: updateFeatures f (rec {
    proc_macro2_0_4_17.default = true;
    quote_0_6_8.default = true;
    serde_derive_1_0_76.default = (f.serde_derive_1_0_76.default or true);
    syn_0_14_9.default = true;
    syn_0_14_9.visit = true;
  }) [ proc_macro2_0_4_17_features quote_0_6_8_features syn_0_14_9_features ];
  serde_json_1_0_26 = { features?(serde_json_1_0_26_features {}) }: serde_json_1_0_26_ {
    dependencies = mapFeatures features ([ itoa_0_4_2 ryu_0_2_6 serde_1_0_76 ]);
    features = mkFeatures (features.serde_json_1_0_26 or {});
  };
  serde_json_1_0_26_features = f: updateFeatures f (rec {
    itoa_0_4_2.default = true;
    ryu_0_2_6.default = true;
    serde_1_0_76.default = true;
    serde_json_1_0_26.default = (f.serde_json_1_0_26.default or true);
    serde_json_1_0_26.indexmap =
      (f.serde_json_1_0_26.indexmap or false) ||
      (f.serde_json_1_0_26.preserve_order or false) ||
      (serde_json_1_0_26.preserve_order or false);
  }) [ itoa_0_4_2_features ryu_0_2_6_features serde_1_0_76_features ];
  serde_urlencoded_0_5_3 = { features?(serde_urlencoded_0_5_3_features {}) }: serde_urlencoded_0_5_3_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_4_2 serde_1_0_76 url_1_7_1 ]);
  };
  serde_urlencoded_0_5_3_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_4_2.default = true;
    serde_1_0_76.default = true;
    serde_urlencoded_0_5_3.default = (f.serde_urlencoded_0_5_3.default or true);
    url_1_7_1.default = true;
  }) [ dtoa_0_4_3_features itoa_0_4_2_features serde_1_0_76_features url_1_7_1_features ];
  sha1_0_6_0 = { features?(sha1_0_6_0_features {}) }: sha1_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.sha1_0_6_0 or {});
  };
  sha1_0_6_0_features = f: updateFeatures f (rec {
    sha1_0_6_0.default = (f.sha1_0_6_0.default or true);
  }) [];
  siphasher_0_2_3 = { features?(siphasher_0_2_3_features {}) }: siphasher_0_2_3_ {};
  siphasher_0_2_3_features = f: updateFeatures f (rec {
    siphasher_0_2_3.default = (f.siphasher_0_2_3.default or true);
  }) [];
  slab_0_4_1 = { features?(slab_0_4_1_features {}) }: slab_0_4_1_ {};
  slab_0_4_1_features = f: updateFeatures f (rec {
    slab_0_4_1.default = (f.slab_0_4_1.default or true);
  }) [];
  smallvec_0_6_5 = { features?(smallvec_0_6_5_features {}) }: smallvec_0_6_5_ {
    dependencies = mapFeatures features ([ unreachable_1_0_0 ]);
    features = mkFeatures (features.smallvec_0_6_5 or {});
  };
  smallvec_0_6_5_features = f: updateFeatures f (rec {
    smallvec_0_6_5.default = (f.smallvec_0_6_5.default or true);
    smallvec_0_6_5.std =
      (f.smallvec_0_6_5.std or false) ||
      (f.smallvec_0_6_5.default or false) ||
      (smallvec_0_6_5.default or false);
    unreachable_1_0_0.default = true;
  }) [ unreachable_1_0_0_features ];
  socket2_0_3_8 = { features?(socket2_0_3_8_features {}) }: socket2_0_3_8_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") || kernel == "redox" then mapFeatures features ([ cfg_if_0_1_5 libc_0_2_43 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.socket2_0_3_8 or {});
  };
  socket2_0_3_8_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    socket2_0_3_8.default = (f.socket2_0_3_8.default or true);
    winapi_0_3_5."ws2def" = true;
    winapi_0_3_5."ws2ipdef" = true;
    winapi_0_3_5."ws2tcpip" = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.minwindef = true;
  }) [ cfg_if_0_1_5_features libc_0_2_43_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  stable_deref_trait_1_1_1 = { features?(stable_deref_trait_1_1_1_features {}) }: stable_deref_trait_1_1_1_ {
    features = mkFeatures (features.stable_deref_trait_1_1_1 or {});
  };
  stable_deref_trait_1_1_1_features = f: updateFeatures f (rec {
    stable_deref_trait_1_1_1.default = (f.stable_deref_trait_1_1_1.default or true);
    stable_deref_trait_1_1_1.std =
      (f.stable_deref_trait_1_1_1.std or false) ||
      (f.stable_deref_trait_1_1_1.default or false) ||
      (stable_deref_trait_1_1_1.default or false);
  }) [];
  string_0_1_1 = { features?(string_0_1_1_features {}) }: string_0_1_1_ {};
  string_0_1_1_features = f: updateFeatures f (rec {
    string_0_1_1.default = (f.string_0_1_1.default or true);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_13_11 = { features?(syn_0_13_11_features {}) }: syn_0_13_11_ {
    dependencies = mapFeatures features ([ proc_macro2_0_3_8 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_13_11.quote or false then [ quote_0_5_2 ] else []));
    features = mkFeatures (features.syn_0_13_11 or {});
  };
  syn_0_13_11_features = f: updateFeatures f (rec {
    proc_macro2_0_3_8."proc-macro" =
      (f.proc_macro2_0_3_8."proc-macro" or false) ||
      (syn_0_13_11."proc-macro" or false) ||
      (f.syn_0_13_11."proc-macro" or false);
    proc_macro2_0_3_8.default = (f.proc_macro2_0_3_8.default or false);
    quote_0_5_2."proc-macro" =
      (f.quote_0_5_2."proc-macro" or false) ||
      (syn_0_13_11."proc-macro" or false) ||
      (f.syn_0_13_11."proc-macro" or false);
    quote_0_5_2.default = (f.quote_0_5_2.default or false);
    syn_0_13_11."clone-impls" =
      (f.syn_0_13_11."clone-impls" or false) ||
      (f.syn_0_13_11.default or false) ||
      (syn_0_13_11.default or false);
    syn_0_13_11."proc-macro" =
      (f.syn_0_13_11."proc-macro" or false) ||
      (f.syn_0_13_11.default or false) ||
      (syn_0_13_11.default or false);
    syn_0_13_11.default = (f.syn_0_13_11.default or true);
    syn_0_13_11.derive =
      (f.syn_0_13_11.derive or false) ||
      (f.syn_0_13_11.default or false) ||
      (syn_0_13_11.default or false);
    syn_0_13_11.parsing =
      (f.syn_0_13_11.parsing or false) ||
      (f.syn_0_13_11.default or false) ||
      (syn_0_13_11.default or false);
    syn_0_13_11.printing =
      (f.syn_0_13_11.printing or false) ||
      (f.syn_0_13_11.default or false) ||
      (syn_0_13_11.default or false);
    syn_0_13_11.quote =
      (f.syn_0_13_11.quote or false) ||
      (f.syn_0_13_11.printing or false) ||
      (syn_0_13_11.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_3_8_features quote_0_5_2_features unicode_xid_0_1_0_features ];
  syn_0_14_9 = { features?(syn_0_14_9_features {}) }: syn_0_14_9_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_9.quote or false then [ quote_0_6_8 ] else []));
    features = mkFeatures (features.syn_0_14_9 or {});
  };
  syn_0_14_9_features = f: updateFeatures f (rec {
    proc_macro2_0_4_17."proc-macro" =
      (f.proc_macro2_0_4_17."proc-macro" or false) ||
      (syn_0_14_9."proc-macro" or false) ||
      (f.syn_0_14_9."proc-macro" or false);
    proc_macro2_0_4_17.default = (f.proc_macro2_0_4_17.default or false);
    quote_0_6_8."proc-macro" =
      (f.quote_0_6_8."proc-macro" or false) ||
      (syn_0_14_9."proc-macro" or false) ||
      (f.syn_0_14_9."proc-macro" or false);
    quote_0_6_8.default = (f.quote_0_6_8.default or false);
    syn_0_14_9."clone-impls" =
      (f.syn_0_14_9."clone-impls" or false) ||
      (f.syn_0_14_9.default or false) ||
      (syn_0_14_9.default or false);
    syn_0_14_9."proc-macro" =
      (f.syn_0_14_9."proc-macro" or false) ||
      (f.syn_0_14_9.default or false) ||
      (syn_0_14_9.default or false);
    syn_0_14_9.default = (f.syn_0_14_9.default or true);
    syn_0_14_9.derive =
      (f.syn_0_14_9.derive or false) ||
      (f.syn_0_14_9.default or false) ||
      (syn_0_14_9.default or false);
    syn_0_14_9.parsing =
      (f.syn_0_14_9.parsing or false) ||
      (f.syn_0_14_9.default or false) ||
      (syn_0_14_9.default or false);
    syn_0_14_9.printing =
      (f.syn_0_14_9.printing or false) ||
      (f.syn_0_14_9.default or false) ||
      (syn_0_14_9.default or false);
    syn_0_14_9.quote =
      (f.syn_0_14_9.quote or false) ||
      (f.syn_0_14_9.printing or false) ||
      (syn_0_14_9.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_17_features quote_0_6_8_features unicode_xid_0_1_0_features ];
  synstructure_0_9_0 = { features?(synstructure_0_9_0_features {}) }: synstructure_0_9_0_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_17 quote_0_6_8 syn_0_14_9 unicode_xid_0_1_0 ]);
    features = mkFeatures (features.synstructure_0_9_0 or {});
  };
  synstructure_0_9_0_features = f: updateFeatures f (rec {
    proc_macro2_0_4_17.default = true;
    quote_0_6_8.default = true;
    syn_0_14_9."extra-traits" = true;
    syn_0_14_9.default = true;
    syn_0_14_9.visit = true;
    synstructure_0_9_0.default = (f.synstructure_0_9_0.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_17_features quote_0_6_8_features syn_0_14_9_features unicode_xid_0_1_0_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_3 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_3.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_3_features remove_dir_all_0_5_1_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_43_features redox_syscall_0_1_40_features redox_termios_0_1_1_features ];
  textwrap_0_10_0 = { features?(textwrap_0_10_0_features {}) }: textwrap_0_10_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  textwrap_0_10_0_features = f: updateFeatures f (rec {
    textwrap_0_10_0.default = (f.textwrap_0_10_0.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  thread_local_0_3_6 = { features?(thread_local_0_3_6_features {}) }: thread_local_0_3_6_ {
    dependencies = mapFeatures features ([ lazy_static_1_1_0 ]);
  };
  thread_local_0_3_6_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = true;
    thread_local_0_3_6.default = (f.thread_local_0_3_6.default or true);
  }) [ lazy_static_1_1_0_features ];
  threadpool_1_7_1 = { features?(threadpool_1_7_1_features {}) }: threadpool_1_7_1_ {
    dependencies = mapFeatures features ([ num_cpus_1_8_0 ]);
  };
  threadpool_1_7_1_features = f: updateFeatures f (rec {
    num_cpus_1_8_0.default = true;
    threadpool_1_7_1.default = (f.threadpool_1_7_1.default or true);
  }) [ num_cpus_1_8_0_features ];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntdef = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
  }) [ libc_0_2_43_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  tokio_0_1_8 = { features?(tokio_0_1_8_features {}) }: tokio_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_23 mio_0_6_15 tokio_codec_0_1_0 tokio_current_thread_0_1_1 tokio_executor_0_1_4 tokio_fs_0_1_3 tokio_io_0_1_8 tokio_reactor_0_1_5 tokio_tcp_0_1_1 tokio_threadpool_0_1_6 tokio_timer_0_2_6 tokio_udp_0_1_2 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ tokio_uds_0_2_1 ]) else []);
  };
  tokio_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    mio_0_6_15.default = true;
    tokio_0_1_8.default = (f.tokio_0_1_8.default or true);
    tokio_codec_0_1_0.default = true;
    tokio_current_thread_0_1_1.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_fs_0_1_3.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_tcp_0_1_1.default = true;
    tokio_threadpool_0_1_6.default = true;
    tokio_timer_0_2_6.default = true;
    tokio_udp_0_1_2.default = true;
    tokio_uds_0_2_1.default = true;
  }) [ futures_0_1_23_features mio_0_6_15_features tokio_codec_0_1_0_features tokio_current_thread_0_1_1_features tokio_executor_0_1_4_features tokio_fs_0_1_3_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features tokio_tcp_0_1_1_features tokio_threadpool_0_1_6_features tokio_timer_0_2_6_features tokio_udp_0_1_2_features tokio_uds_0_2_1_features ];
  tokio_codec_0_1_0 = { features?(tokio_codec_0_1_0_features {}) }: tokio_codec_0_1_0_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 tokio_io_0_1_8 ]);
  };
  tokio_codec_0_1_0_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    tokio_codec_0_1_0.default = (f.tokio_codec_0_1_0.default or true);
    tokio_io_0_1_8.default = true;
  }) [ bytes_0_4_10_features futures_0_1_23_features tokio_io_0_1_8_features ];
  tokio_core_0_1_17 = { features?(tokio_core_0_1_17_features {}) }: tokio_core_0_1_17_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 iovec_0_1_2 log_0_4_5 mio_0_6_15 scoped_tls_0_1_2 tokio_0_1_8 tokio_executor_0_1_4 tokio_io_0_1_8 tokio_reactor_0_1_5 tokio_timer_0_2_6 ]);
  };
  tokio_core_0_1_17_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    iovec_0_1_2.default = true;
    log_0_4_5.default = true;
    mio_0_6_15.default = true;
    scoped_tls_0_1_2.default = true;
    tokio_0_1_8.default = true;
    tokio_core_0_1_17.default = (f.tokio_core_0_1_17.default or true);
    tokio_executor_0_1_4.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_timer_0_2_6.default = true;
  }) [ bytes_0_4_10_features futures_0_1_23_features iovec_0_1_2_features log_0_4_5_features mio_0_6_15_features scoped_tls_0_1_2_features tokio_0_1_8_features tokio_executor_0_1_4_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features tokio_timer_0_2_6_features ];
  tokio_current_thread_0_1_1 = { features?(tokio_current_thread_0_1_1_features {}) }: tokio_current_thread_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_23 tokio_executor_0_1_4 ]);
  };
  tokio_current_thread_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_current_thread_0_1_1.default = (f.tokio_current_thread_0_1_1.default or true);
    tokio_executor_0_1_4.default = true;
  }) [ futures_0_1_23_features tokio_executor_0_1_4_features ];
  tokio_executor_0_1_4 = { features?(tokio_executor_0_1_4_features {}) }: tokio_executor_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  tokio_executor_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_executor_0_1_4.default = (f.tokio_executor_0_1_4.default or true);
  }) [ futures_0_1_23_features ];
  tokio_fs_0_1_3 = { features?(tokio_fs_0_1_3_features {}) }: tokio_fs_0_1_3_ {
    dependencies = mapFeatures features ([ futures_0_1_23 tokio_io_0_1_8 tokio_threadpool_0_1_6 ]);
  };
  tokio_fs_0_1_3_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_fs_0_1_3.default = (f.tokio_fs_0_1_3.default or true);
    tokio_io_0_1_8.default = true;
    tokio_threadpool_0_1_6.default = true;
  }) [ futures_0_1_23_features tokio_io_0_1_8_features tokio_threadpool_0_1_6_features ];
  tokio_io_0_1_8 = { features?(tokio_io_0_1_8_features {}) }: tokio_io_0_1_8_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 log_0_4_5 ]);
  };
  tokio_io_0_1_8_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    log_0_4_5.default = true;
    tokio_io_0_1_8.default = (f.tokio_io_0_1_8.default or true);
  }) [ bytes_0_4_10_features futures_0_1_23_features log_0_4_5_features ];
  tokio_reactor_0_1_5 = { features?(tokio_reactor_0_1_5_features {}) }: tokio_reactor_0_1_5_ {
    dependencies = mapFeatures features ([ crossbeam_utils_0_5_0 futures_0_1_23 lazy_static_1_1_0 log_0_4_5 mio_0_6_15 num_cpus_1_8_0 parking_lot_0_6_4 slab_0_4_1 tokio_executor_0_1_4 tokio_io_0_1_8 ]);
    features = mkFeatures (features.tokio_reactor_0_1_5 or {});
  };
  tokio_reactor_0_1_5_features = f: updateFeatures f (rec {
    crossbeam_utils_0_5_0.default = true;
    futures_0_1_23.default = true;
    lazy_static_1_1_0.default = true;
    log_0_4_5.default = true;
    mio_0_6_15.default = true;
    num_cpus_1_8_0.default = true;
    parking_lot_0_6_4.default = true;
    slab_0_4_1.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = (f.tokio_reactor_0_1_5.default or true);
  }) [ crossbeam_utils_0_5_0_features futures_0_1_23_features lazy_static_1_1_0_features log_0_4_5_features mio_0_6_15_features num_cpus_1_8_0_features parking_lot_0_6_4_features slab_0_4_1_features tokio_executor_0_1_4_features tokio_io_0_1_8_features ];
  tokio_service_0_1_0 = { features?(tokio_service_0_1_0_features {}) }: tokio_service_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  tokio_service_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_service_0_1_0.default = (f.tokio_service_0_1_0.default or true);
  }) [ futures_0_1_23_features ];
  tokio_signal_0_2_5 = { features?(tokio_signal_0_2_5_features {}) }: tokio_signal_0_2_5_ {
    dependencies = mapFeatures features ([ futures_0_1_23 mio_0_6_15 tokio_executor_0_1_4 tokio_io_0_1_8 tokio_reactor_0_1_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 mio_uds_0_6_7 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  tokio_signal_0_2_5_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    libc_0_2_43.default = true;
    mio_0_6_15.default = true;
    mio_uds_0_6_7.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_signal_0_2_5.default = (f.tokio_signal_0_2_5.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.wincon = true;
  }) [ futures_0_1_23_features mio_0_6_15_features tokio_executor_0_1_4_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features libc_0_2_43_features mio_uds_0_6_7_features winapi_0_3_5_features ];
  tokio_tcp_0_1_1 = { features?(tokio_tcp_0_1_1_features {}) }: tokio_tcp_0_1_1_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 iovec_0_1_2 mio_0_6_15 tokio_io_0_1_8 tokio_reactor_0_1_5 ]);
  };
  tokio_tcp_0_1_1_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    iovec_0_1_2.default = true;
    mio_0_6_15.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_tcp_0_1_1.default = (f.tokio_tcp_0_1_1.default or true);
  }) [ bytes_0_4_10_features futures_0_1_23_features iovec_0_1_2_features mio_0_6_15_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features ];
  tokio_threadpool_0_1_6 = { features?(tokio_threadpool_0_1_6_features {}) }: tokio_threadpool_0_1_6_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_6_1 crossbeam_utils_0_5_0 futures_0_1_23 log_0_4_5 num_cpus_1_8_0 rand_0_5_5 tokio_executor_0_1_4 ]);
  };
  tokio_threadpool_0_1_6_features = f: updateFeatures f (rec {
    crossbeam_deque_0_6_1.default = true;
    crossbeam_utils_0_5_0.default = true;
    futures_0_1_23.default = true;
    log_0_4_5.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_5_5.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_threadpool_0_1_6.default = (f.tokio_threadpool_0_1_6.default or true);
  }) [ crossbeam_deque_0_6_1_features crossbeam_utils_0_5_0_features futures_0_1_23_features log_0_4_5_features num_cpus_1_8_0_features rand_0_5_5_features tokio_executor_0_1_4_features ];
  tokio_timer_0_2_6 = { features?(tokio_timer_0_2_6_features {}) }: tokio_timer_0_2_6_ {
    dependencies = mapFeatures features ([ crossbeam_utils_0_5_0 futures_0_1_23 slab_0_4_1 tokio_executor_0_1_4 ]);
  };
  tokio_timer_0_2_6_features = f: updateFeatures f (rec {
    crossbeam_utils_0_5_0.default = true;
    futures_0_1_23.default = true;
    slab_0_4_1.default = true;
    tokio_executor_0_1_4.default = true;
    tokio_timer_0_2_6.default = (f.tokio_timer_0_2_6.default or true);
  }) [ crossbeam_utils_0_5_0_features futures_0_1_23_features slab_0_4_1_features tokio_executor_0_1_4_features ];
  tokio_tls_0_1_4 = { features?(tokio_tls_0_1_4_features {}) }: tokio_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_8 ])
      ++ (if !(kernel == "darwin") && !(kernel == "windows") && !(kernel == "ios") then mapFeatures features ([]) else [])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([]) else []);
  };
  tokio_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_8.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or true);
  }) [ futures_0_1_23_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_8_features ];
  tokio_udp_0_1_2 = { features?(tokio_udp_0_1_2_features {}) }: tokio_udp_0_1_2_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 log_0_4_5 mio_0_6_15 tokio_codec_0_1_0 tokio_io_0_1_8 tokio_reactor_0_1_5 ]);
  };
  tokio_udp_0_1_2_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    log_0_4_5.default = true;
    mio_0_6_15.default = true;
    tokio_codec_0_1_0.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_udp_0_1_2.default = (f.tokio_udp_0_1_2.default or true);
  }) [ bytes_0_4_10_features futures_0_1_23_features log_0_4_5_features mio_0_6_15_features tokio_codec_0_1_0_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features ];
  tokio_uds_0_2_1 = { features?(tokio_uds_0_2_1_features {}) }: tokio_uds_0_2_1_ {
    dependencies = mapFeatures features ([ bytes_0_4_10 futures_0_1_23 iovec_0_1_2 libc_0_2_43 log_0_4_5 mio_0_6_15 mio_uds_0_6_7 tokio_io_0_1_8 tokio_reactor_0_1_5 ]);
  };
  tokio_uds_0_2_1_features = f: updateFeatures f (rec {
    bytes_0_4_10.default = true;
    futures_0_1_23.default = true;
    iovec_0_1_2.default = true;
    libc_0_2_43.default = true;
    log_0_4_5.default = true;
    mio_0_6_15.default = true;
    mio_uds_0_6_7.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_uds_0_2_1.default = (f.tokio_uds_0_2_1.default or true);
  }) [ bytes_0_4_10_features futures_0_1_23_features iovec_0_1_2_features libc_0_2_43_features log_0_4_5_features mio_0_6_15_features mio_uds_0_6_7_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features ];
  trust_dns_proto_0_4_0 = { features?(trust_dns_proto_0_4_0_features {}) }: trust_dns_proto_0_4_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_6 error_chain_0_1_12 futures_0_1_23 idna_0_1_5 lazy_static_1_1_0 log_0_4_5 rand_0_4_3 smallvec_0_6_5 socket2_0_3_8 tokio_executor_0_1_4 tokio_io_0_1_8 tokio_reactor_0_1_5 tokio_tcp_0_1_1 tokio_timer_0_2_6 tokio_udp_0_1_2 url_1_7_1 ]);
    features = mkFeatures (features.trust_dns_proto_0_4_0 or {});
  };
  trust_dns_proto_0_4_0_features = f: updateFeatures f (rec {
    byteorder_1_2_6.default = true;
    error_chain_0_1_12.default = (f.error_chain_0_1_12.default or false);
    futures_0_1_23.default = true;
    idna_0_1_5.default = true;
    lazy_static_1_1_0.default = true;
    log_0_4_5.default = true;
    rand_0_4_3.default = true;
    smallvec_0_6_5.default = true;
    socket2_0_3_8.default = true;
    socket2_0_3_8.reuseport = true;
    tokio_executor_0_1_4.default = true;
    tokio_io_0_1_8.default = true;
    tokio_reactor_0_1_5.default = true;
    tokio_tcp_0_1_1.default = true;
    tokio_timer_0_2_6.default = true;
    tokio_udp_0_1_2.default = true;
    trust_dns_proto_0_4_0."data-encoding" =
      (f.trust_dns_proto_0_4_0."data-encoding" or false) ||
      (f.trust_dns_proto_0_4_0.dnssec or false) ||
      (trust_dns_proto_0_4_0.dnssec or false);
    trust_dns_proto_0_4_0.default = (f.trust_dns_proto_0_4_0.default or true);
    trust_dns_proto_0_4_0.dnssec =
      (f.trust_dns_proto_0_4_0.dnssec or false) ||
      (f.trust_dns_proto_0_4_0."dnssec-openssl" or false) ||
      (trust_dns_proto_0_4_0."dnssec-openssl" or false) ||
      (f.trust_dns_proto_0_4_0."dnssec-ring" or false) ||
      (trust_dns_proto_0_4_0."dnssec-ring" or false);
    trust_dns_proto_0_4_0.openssl =
      (f.trust_dns_proto_0_4_0.openssl or false) ||
      (f.trust_dns_proto_0_4_0."dnssec-openssl" or false) ||
      (trust_dns_proto_0_4_0."dnssec-openssl" or false);
    trust_dns_proto_0_4_0.ring =
      (f.trust_dns_proto_0_4_0.ring or false) ||
      (f.trust_dns_proto_0_4_0."dnssec-ring" or false) ||
      (trust_dns_proto_0_4_0."dnssec-ring" or false);
    trust_dns_proto_0_4_0.untrusted =
      (f.trust_dns_proto_0_4_0.untrusted or false) ||
      (f.trust_dns_proto_0_4_0."dnssec-ring" or false) ||
      (trust_dns_proto_0_4_0."dnssec-ring" or false);
    url_1_7_1.default = true;
  }) [ byteorder_1_2_6_features error_chain_0_1_12_features futures_0_1_23_features idna_0_1_5_features lazy_static_1_1_0_features log_0_4_5_features rand_0_4_3_features smallvec_0_6_5_features socket2_0_3_8_features tokio_executor_0_1_4_features tokio_io_0_1_8_features tokio_reactor_0_1_5_features tokio_tcp_0_1_1_features tokio_timer_0_2_6_features tokio_udp_0_1_2_features url_1_7_1_features ];
  trust_dns_resolver_0_9_1 = { features?(trust_dns_resolver_0_9_1_features {}) }: trust_dns_resolver_0_9_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 error_chain_0_1_12 futures_0_1_23 lazy_static_1_1_0 log_0_4_5 lru_cache_0_1_1 resolv_conf_0_6_1 smallvec_0_6_5 tokio_0_1_8 trust_dns_proto_0_4_0 ])
      ++ (if kernel == "windows" then mapFeatures features ([ ipconfig_0_1_7 ]) else []);
    features = mkFeatures (features.trust_dns_resolver_0_9_1 or {});
  };
  trust_dns_resolver_0_9_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    error_chain_0_1_12.default = (f.error_chain_0_1_12.default or false);
    futures_0_1_23.default = true;
    ipconfig_0_1_7.default = true;
    lazy_static_1_1_0.default = true;
    log_0_4_5.default = true;
    lru_cache_0_1_1.default = true;
    resolv_conf_0_6_1.default = true;
    resolv_conf_0_6_1.system = true;
    smallvec_0_6_5.default = true;
    tokio_0_1_8.default = true;
    trust_dns_proto_0_4_0."dnssec-openssl" =
      (f.trust_dns_proto_0_4_0."dnssec-openssl" or false) ||
      (trust_dns_resolver_0_9_1."dnssec-openssl" or false) ||
      (f.trust_dns_resolver_0_9_1."dnssec-openssl" or false);
    trust_dns_proto_0_4_0."dnssec-ring" =
      (f.trust_dns_proto_0_4_0."dnssec-ring" or false) ||
      (trust_dns_resolver_0_9_1."dnssec-ring" or false) ||
      (f.trust_dns_resolver_0_9_1."dnssec-ring" or false);
    trust_dns_proto_0_4_0.default = true;
    trust_dns_proto_0_4_0.mdns =
      (f.trust_dns_proto_0_4_0.mdns or false) ||
      (trust_dns_resolver_0_9_1.mdns or false) ||
      (f.trust_dns_resolver_0_9_1.mdns or false);
    trust_dns_resolver_0_9_1."dns-over-tls" =
      (f.trust_dns_resolver_0_9_1."dns-over-tls" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-native-tls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-native-tls" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-openssl" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-openssl" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-rustls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-rustls" or false);
    trust_dns_resolver_0_9_1."trust-dns-native-tls" =
      (f.trust_dns_resolver_0_9_1."trust-dns-native-tls" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-native-tls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-native-tls" or false);
    trust_dns_resolver_0_9_1."trust-dns-openssl" =
      (f.trust_dns_resolver_0_9_1."trust-dns-openssl" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-openssl" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-openssl" or false);
    trust_dns_resolver_0_9_1."trust-dns-rustls" =
      (f.trust_dns_resolver_0_9_1."trust-dns-rustls" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-rustls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-rustls" or false);
    trust_dns_resolver_0_9_1."webpki-roots" =
      (f.trust_dns_resolver_0_9_1."webpki-roots" or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-rustls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-rustls" or false);
    trust_dns_resolver_0_9_1.default = (f.trust_dns_resolver_0_9_1.default or true);
    trust_dns_resolver_0_9_1.dnssec =
      (f.trust_dns_resolver_0_9_1.dnssec or false) ||
      (f.trust_dns_resolver_0_9_1."dnssec-openssl" or false) ||
      (trust_dns_resolver_0_9_1."dnssec-openssl" or false) ||
      (f.trust_dns_resolver_0_9_1."dnssec-ring" or false) ||
      (trust_dns_resolver_0_9_1."dnssec-ring" or false);
    trust_dns_resolver_0_9_1.rustls =
      (f.trust_dns_resolver_0_9_1.rustls or false) ||
      (f.trust_dns_resolver_0_9_1."dns-over-rustls" or false) ||
      (trust_dns_resolver_0_9_1."dns-over-rustls" or false);
  }) [ cfg_if_0_1_5_features error_chain_0_1_12_features futures_0_1_23_features lazy_static_1_1_0_features log_0_4_5_features lru_cache_0_1_1_features resolv_conf_0_6_1_features smallvec_0_6_5_features tokio_0_1_8_features trust_dns_proto_0_4_0_features ipconfig_0_1_7_features ];
  try_lock_0_1_0 = { features?(try_lock_0_1_0_features {}) }: try_lock_0_1_0_ {};
  try_lock_0_1_0_features = f: updateFeatures f (rec {
    try_lock_0_1_0.default = (f.try_lock_0_1_0.default or true);
  }) [];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_8 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_8.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_8_features ];
  unicode_normalization_0_1_7 = { features?(unicode_normalization_0_1_7_features {}) }: unicode_normalization_0_1_7_ {};
  unicode_normalization_0_1_7_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_7.default = (f.unicode_normalization_0_1_7.default or true);
  }) [];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  untrusted_0_6_2 = { features?(untrusted_0_6_2_features {}) }: untrusted_0_6_2_ {};
  untrusted_0_6_2_features = f: updateFeatures f (rec {
    untrusted_0_6_2.default = (f.untrusted_0_6_2.default or true);
  }) [];
  url_1_7_1 = { features?(url_1_7_1_features {}) }: url_1_7_1_ {
    dependencies = mapFeatures features ([ idna_0_1_5 matches_0_1_8 percent_encoding_1_0_1 ]
      ++ (if features.url_1_7_1.encoding or false then [ encoding_0_2_33 ] else []));
    features = mkFeatures (features.url_1_7_1 or {});
  };
  url_1_7_1_features = f: updateFeatures f (rec {
    encoding_0_2_33.default = true;
    idna_0_1_5.default = true;
    matches_0_1_8.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_1.default = (f.url_1_7_1.default or true);
    url_1_7_1.encoding =
      (f.url_1_7_1.encoding or false) ||
      (f.url_1_7_1.query_encoding or false) ||
      (url_1_7_1.query_encoding or false);
    url_1_7_1.heapsize =
      (f.url_1_7_1.heapsize or false) ||
      (f.url_1_7_1.heap_size or false) ||
      (url_1_7_1.heap_size or false);
  }) [ encoding_0_2_33_features idna_0_1_5_features matches_0_1_8_features percent_encoding_1_0_1_features ];
  utf8_ranges_1_0_1 = { features?(utf8_ranges_1_0_1_features {}) }: utf8_ranges_1_0_1_ {};
  utf8_ranges_1_0_1_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_1.default = (f.utf8_ranges_1_0_1.default or true);
  }) [];
  uuid_0_6_5 = { features?(uuid_0_6_5_features {}) }: uuid_0_6_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]
      ++ (if features.uuid_0_6_5.rand or false then [ rand_0_4_3 ] else []));
    features = mkFeatures (features.uuid_0_6_5 or {});
  };
  uuid_0_6_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    rand_0_4_3.default = true;
    uuid_0_6_5."md5" =
      (f.uuid_0_6_5."md5" or false) ||
      (f.uuid_0_6_5."v3" or false) ||
      (uuid_0_6_5."v3" or false);
    uuid_0_6_5."sha1" =
      (f.uuid_0_6_5."sha1" or false) ||
      (f.uuid_0_6_5."v5" or false) ||
      (uuid_0_6_5."v5" or false);
    uuid_0_6_5.byteorder =
      (f.uuid_0_6_5.byteorder or false) ||
      (f.uuid_0_6_5."u128" or false) ||
      (uuid_0_6_5."u128" or false);
    uuid_0_6_5.default = (f.uuid_0_6_5.default or true);
    uuid_0_6_5.nightly =
      (f.uuid_0_6_5.nightly or false) ||
      (f.uuid_0_6_5.const_fn or false) ||
      (uuid_0_6_5.const_fn or false);
    uuid_0_6_5.rand =
      (f.uuid_0_6_5.rand or false) ||
      (f.uuid_0_6_5."v3" or false) ||
      (uuid_0_6_5."v3" or false) ||
      (f.uuid_0_6_5."v4" or false) ||
      (uuid_0_6_5."v4" or false) ||
      (f.uuid_0_6_5."v5" or false) ||
      (uuid_0_6_5."v5" or false);
    uuid_0_6_5.std =
      (f.uuid_0_6_5.std or false) ||
      (f.uuid_0_6_5.default or false) ||
      (uuid_0_6_5.default or false) ||
      (f.uuid_0_6_5.use_std or false) ||
      (uuid_0_6_5.use_std or false);
  }) [ cfg_if_0_1_5_features rand_0_4_3_features ];
  vcpkg_0_2_6 = { features?(vcpkg_0_2_6_features {}) }: vcpkg_0_2_6_ {};
  vcpkg_0_2_6_features = f: updateFeatures f (rec {
    vcpkg_0_2_6.default = (f.vcpkg_0_2_6.default or true);
  }) [];
  vec_map_0_8_1 = { features?(vec_map_0_8_1_features {}) }: vec_map_0_8_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_1 or {});
  };
  vec_map_0_8_1_features = f: updateFeatures f (rec {
    vec_map_0_8_1.default = (f.vec_map_0_8_1.default or true);
    vec_map_0_8_1.serde =
      (f.vec_map_0_8_1.serde or false) ||
      (f.vec_map_0_8_1.eders or false) ||
      (vec_map_0_8_1.eders or false);
  }) [];
  version_check_0_1_4 = { features?(version_check_0_1_4_features {}) }: version_check_0_1_4_ {};
  version_check_0_1_4_features = f: updateFeatures f (rec {
    version_check_0_1_4.default = (f.version_check_0_1_4.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  want_0_0_4 = { features?(want_0_0_4_features {}) }: want_0_0_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 log_0_4_5 try_lock_0_1_0 ]);
  };
  want_0_0_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    log_0_4_5.default = true;
    try_lock_0_1_0.default = true;
    want_0_0_4.default = (f.want_0_0_4.default or true);
  }) [ futures_0_1_23_features log_0_4_5_features try_lock_0_1_0_features ];
  widestring_0_2_2 = { features?(widestring_0_2_2_features {}) }: widestring_0_2_2_ {};
  widestring_0_2_2_features = f: updateFeatures f (rec {
    widestring_0_2_2.default = (f.widestring_0_2_2.default or true);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_5 = { features?(winapi_0_3_5_features {}) }: winapi_0_3_5_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_5 or {});
  };
  winapi_0_3_5_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = (f.winapi_0_3_5.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winreg_0_5_1 = { features?(winreg_0_5_1_features {}) }: winreg_0_5_1_ {
    dependencies = mapFeatures features ([ winapi_0_3_5 ]);
    features = mkFeatures (features.winreg_0_5_1 or {});
  };
  winreg_0_5_1_features = f: updateFeatures f (rec {
    winapi_0_3_5."ktmw32" =
      (f.winapi_0_3_5."ktmw32" or false) ||
      (winreg_0_5_1.transactions or false) ||
      (f.winreg_0_5_1.transactions or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.winerror = true;
    winapi_0_3_5.winnt = true;
    winapi_0_3_5.winreg = true;
    winreg_0_5_1.default = (f.winreg_0_5_1.default or true);
    winreg_0_5_1.serde =
      (f.winreg_0_5_1.serde or false) ||
      (f.winreg_0_5_1."serialization-serde" or false) ||
      (winreg_0_5_1."serialization-serde" or false);
    winreg_0_5_1.transactions =
      (f.winreg_0_5_1.transactions or false) ||
      (f.winreg_0_5_1."serialization-serde" or false) ||
      (winreg_0_5_1."serialization-serde" or false);
  }) [ winapi_0_3_5_features ];
  winutil_0_1_1 = { features?(winutil_0_1_1_features {}) }: winutil_0_1_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  winutil_0_1_1_features = f: updateFeatures f (rec {
    winapi_0_3_5."wow64apiset" = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.winbase = true;
    winutil_0_1_1.default = (f.winutil_0_1_1.default or true);
  }) [ winapi_0_3_5_features ];
  ws2_32_sys_0_2_1 = { features?(ws2_32_sys_0_2_1_features {}) }: ws2_32_sys_0_2_1_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ws2_32_sys_0_2_1_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
    ws2_32_sys_0_2_1.default = (f.ws2_32_sys_0_2_1.default or true);
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
}
